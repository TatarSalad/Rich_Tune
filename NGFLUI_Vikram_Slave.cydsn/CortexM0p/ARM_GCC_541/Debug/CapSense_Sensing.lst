ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_uidivmod
  20              		.section	.text.CapSense_SsCalcLfsrSize,"ax",%progbits
  21              		.align	2
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_SsCalcLfsrSize, %function
  25              	CapSense_SsCalcLfsrSize:
  26              	.LFB19:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 6.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v6.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (0u != CapSense_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 3


  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 4


 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 5


 202:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDSetupWidgetExt(), CapSense_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 6


 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_I_REP
 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 7


 316:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 317:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 369:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 8


 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 374:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 9


 430:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 431:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 477:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 10


 487:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 530:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 531:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 534:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 11


 544:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 545:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 578:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 579:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 580:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 581:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 582:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 583:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 584:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 585:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 586:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 587:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 588:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 589:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 590:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 592:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 593:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 12


 601:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx signal is routed to the sensor
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 645:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 646:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 647:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 648:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 650:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 651:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 653:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 654:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 655:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 13


 658:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 659:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 664:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 675:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 676:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 677:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 678:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 679:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 681:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 682:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 683:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 684:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 685:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 687:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 688:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 689:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 690:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 691:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 692:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 693:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 695:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 696:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 705:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 706:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 709:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 714:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 14


 715:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 716:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 717:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 719:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 725:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 728:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 734:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 735:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 736:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 738:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 740:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 745:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 746:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 750:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 751:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 765:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 767:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR);
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 769:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 15


 772:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 773:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN)))
 774:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 775:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 776:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 777:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 778:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 779:Generated_Source\PSoC4/CapSense_Sensing.c ****                    ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 780:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN))) */
 781:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 782:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 783:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 784:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 785:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 786:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 787:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 788:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_CSH_HSIOM_PTR);
 789:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_CSH_TO_AMUXBUS_B_MASK << CapSense_CSH_HSIOM_
 790:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_CSH_HSIOM_PTR, newRegValue);
 791:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 792:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 793:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 794:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 795:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 796:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)) */
 799:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 800:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 801:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 803:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 804:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 805:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 806:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 807:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 808:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 809:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 810:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 811:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 812:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 813:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 814:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 815:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 816:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 817:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
 818:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 819:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 820:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 821:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 822:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 823:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 824:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 825:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 826:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 827:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 828:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 16


 829:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 831:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 832:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
 833:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 834:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 835:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
 837:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 838:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
 839:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 840:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 841:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 842:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 849:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 853:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 858:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 859:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 863:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 864:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
 869:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* CapSense_USES_PORT_3 */
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 871:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 872:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 873:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 874:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
 875:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 876:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 879:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanned.
 880:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 881:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 883:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 884:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 885:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSD mode.
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 17


 886:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 887:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 889:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 890:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSX mode.
 891:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 892:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
 895:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
 896:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
 897:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
 898:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
 899:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 901:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
 902:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 904:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 905:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
 907:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
 910:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
 935:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 936:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 937:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 18


 943:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 957:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 959:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 966:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 969:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 972:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 975:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 976:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 977:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 978:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetIOsInDefaultState
 980:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 981:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 982:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 983:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 988:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
 989:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
 990:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
 992:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 993:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
 994:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
 995:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 996:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
 997:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
 998:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 999:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 19


1000:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetIOsInDefaultState(void)
1001:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
1003:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
1004:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 regValue;
1005:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1006:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1010:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 1. Disconnect HSIOM.
1011:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 2. Set strong DM.
1012:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 3. Set pin state to logic 0.
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1022:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1026:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1030:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1032:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****     
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ISX_EN)
1036:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXSetDefaultDigital();
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1038:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1039:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 20


1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1058:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1064:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1066:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1067:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1076:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1078:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1080:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1082:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1084:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1086:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1088:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_EN) && \
1090:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&  \
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION))
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsSetIOsInDefaultState();
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) && \
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE != CapSense_CSD_SHIELD_EN) &&  \
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION)) */
1096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1098:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1103:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1105:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1106:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1107:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1108:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1109:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1110:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1111:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1112:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1113:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 21


1114:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1115:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1116:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1117:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1118:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1119:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1120:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1121:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1122:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1123:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1124:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1131:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1133:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1135:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1139:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1141:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1142:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1143:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1144:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1145:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1146:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1147:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1148:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1149:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1150:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1151:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1152:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1154:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1155:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1156:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1157:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1158:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1159:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1160:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1161:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1162:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1163:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1164:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1165:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1166:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1168:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1169:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 22


1171:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1174:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1177:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1179:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1180:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1181:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1182:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1183:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1184:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1185:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1186:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1187:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1188:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1189:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1190:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1191:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1192:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1193:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1194:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1195:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1196:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1197:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1198:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1200:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1202:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1203:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1207:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1210:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1211:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1212:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1215:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1218:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1224:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1227:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 23


1228:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1229:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1230:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1232:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1233:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1239:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1240:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1241:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1242:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1243:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1244:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1245:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1246:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1247:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1248:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1249:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1250:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1252:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1253:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1254:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1255:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1256:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1257:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1258:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1259:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1260:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1261:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
1262:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1263:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1264:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1265:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1266:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1269:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1270:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1271:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1272:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1273:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1274:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1275:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1277:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1278:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1279:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1281:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1282:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1283:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 24


1285:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1286:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1287:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1289:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1291:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1292:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1293:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1294:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1296:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1297:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1299:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1300:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1301:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1302:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1303:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1304:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1305:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1306:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1307:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1308:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1309:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1310:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1311:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1312:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1313:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1314:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1315:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1316:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1318:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1320:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1324:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1325:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1326:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1329:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1331:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1332:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1337:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1339:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 25


1342:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1343:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1347:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1351:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1352:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1355:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1356:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1357:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1359:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1360:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1361:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1363:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1364:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1365:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1366:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1367:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1368:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1369:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1370:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1371:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1372:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1373:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1376:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1377:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1378:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1379:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1380:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1385:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1386:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1387:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1388:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1389:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1390:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1391:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1392:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1393:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1396:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
1397:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1398:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter. 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 26


1399:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1400:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1401:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1402:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1403:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1404:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1405:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1406:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1407:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1408:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1409:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1410:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1411:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1412:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1413:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1414:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1415:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1416:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1417:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1418:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1424:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1429:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1431:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1436:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1437:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1438:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1443:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1445:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1450:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1451:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1453:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 27


1456:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1457:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1458:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1459:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1463:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1466:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1467:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1468:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1469:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1471:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1472:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1473:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1474:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1475:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1476:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1477:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1478:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1479:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1480:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1481:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1483:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1484:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1485:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1486:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1488:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1490:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1492:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1494:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****              /* Update CRC */
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN)
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_DsUpdateWidgetCrc(widgetId);
1498:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN) */
1499:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1501:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1503:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1504:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1507:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1512:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 28


1513:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1514:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1518:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1526:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1531:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1539:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1543:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1545:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1547:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1550:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1551:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1555:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1556:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
1557:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1558:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1559:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense operation.
1561:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1562:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1564:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1566:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1567:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1568:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 29


1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1572:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
1576:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1577:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1578:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1579:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cp = 0uL;
1581:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cpRow = 0uL;
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cpWidget[CapSense_TOTAL_WIDGETS];
1586:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1588:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Configure common config variables */
1590:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_CSD_IDAC_GAIN_VALUE_NA;
1593:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1595:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk);
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif ((CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) && (CapSense_DISABLE == CY_PSOC4_400
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1608:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1610:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Initialize CSD mode */
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDInitialize();
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_CSX_EN) */
1614:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1616:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sensor Cp
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1621:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sense clock for all the widgets */
1623:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 30


1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1630:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1632:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = CapSense_CALIBRATION_RESOLUTION;
1633:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1635:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_CALIB
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
1645:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1647:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_LEVEL);
1648:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1650:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1651:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get IDAC */
1657:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1658:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calculate achived calibration level */
1660:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcountRow
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1662:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1663:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Find correct sense clock value */
1664:Generated_Source\PSoC4/CapSense_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1665:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cpRow)
1667:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1670:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
1672:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1673:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1680:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #if (CapSense_ENABLE != CapSense_CSDV2)
1682:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 31


1684:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << CapS
1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 {
1686:Generated_Source\PSoC4/CapSense_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_dsRam.modCsdClk;
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 }
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #else
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1690:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #endif
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1694:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1696:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1699:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1700:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calculate achived calibration level */
1702:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcount * CapSense
1703:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1704:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1706:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1707:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cp)
1709:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1712:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
1714:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1722:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE != CapSense_CSDV2)
1724:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_FLIP_F
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****                              ptrWdgt->snsClk = CapSense_dsRam.modCsdClk;
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1734:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1736:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 32


1741:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (cpRow > cp)
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1746:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1749:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1750:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_EN)
1751:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Non-CSD widget */
1752:Generated_Source\PSoC4/CapSense_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1756:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1758:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1762:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune resolution for all the widgets */
1764:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1773:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1774:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1776:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1777:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set parasitic capacitance for columns */
1779:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1780:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1782:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1785:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1787:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1788:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1789:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1790:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Set parasitic capacitance for rows */
1796:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1797:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 33


1798:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get IDAC */
1799:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get finger capacitance */
1805:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1806:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Init pointer to sigPFC */
1808:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1809:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find resolution */
1811:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1814:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1816:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1821:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sensitivity for all the widgets */
1823:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1824:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1832:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1835:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1836:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
1837:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_DsUpdateWidgetCrc(wdgtIndex);
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
1843:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1844:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
1845:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1846:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1847:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
1848:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1849:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 34


1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1856:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1863:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
1865:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1867:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1868:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
1869:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
1872:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1873:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1874:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
1876:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1879:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
1885:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1886:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1888:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1900:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1906:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1908:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
1911:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 35


1912:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1913:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1920:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
1924:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1925:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1926:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1927:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1945:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1952:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1954:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
1955:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1957:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1958:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1959:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1962:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 36


1969:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1970:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
1976:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1977:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1979:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1982:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1985:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1989:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
1999:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2001:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2004:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2006:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2013:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2014:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2019:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2021:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2024:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2025:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 37


2026:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2040:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2042:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2043:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2045:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2051:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2061:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2063:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2064:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2065:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2066:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2070:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2072:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2075:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2077:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 38


2083:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2086:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2091:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2094:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2096:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2098:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2100:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2102:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2104:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2105:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2115:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2117:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2120:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2122:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2123:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2125:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2126:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2128:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2130:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2136:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2137:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2138:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 39


2140:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2143:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2144:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2155:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2157:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2160:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2161:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2163:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2167:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2168:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2170:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2171:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2172:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2173:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2174:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2177:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2178:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2179:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2180:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2181:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2182:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2183:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2184:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2185:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2186:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2187:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2189:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2191:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2193:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2195:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2196:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 40


2197:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2213:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2214:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2215:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2216:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2218:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2220:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2221:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2222:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2223:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2230:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2236:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2242:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2244:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2249:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2251:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2252:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 41


2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2259:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2262:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2279:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2280:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2281:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2283:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2289:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2290:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2294:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 42


2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2313:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2316:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2317:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2318:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2320:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2334:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2339:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2340:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2342:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2345:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2346:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2348:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2365:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2367:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 43


2368:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2369:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2370:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2371:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2372:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2373:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2374:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2377:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2378:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2379:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2381:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2382:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2383:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2384:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2385:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2391:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** {
  28              		.loc 1 2401 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40 0004 0D00     		movs	r5, r1
  41              	.LVL1:
2402:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2404:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2405:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
  42              		.loc 1 2405 0
  43 0006 9F28     		cmp	r0, #159
  44 0008 08D9     		bls	.L2
  45              		.loc 1 2405 0 is_stmt 0 discriminator 1
  46 000a 1B4B     		ldr	r3, .L12
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 44


  47 000c 9942     		cmp	r1, r3
  48 000e 05D9     		bls	.L2
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
  49              		.loc 1 2407 0 is_stmt 1
  50 0010 1A49     		ldr	r1, .L12+4
  51              	.LVL2:
  52 0012 2800     		movs	r0, r5
  53              	.LVL3:
  54 0014 FFF7FEFF 		bl	__aeabi_uidivmod
  55              	.LVL4:
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
  56              		.loc 1 2406 0
  57 0018 0029     		cmp	r1, #0
  58 001a 21D0     		beq	.L6
  59              	.L2:
2408:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
  60              		.loc 1 2411 0
  61 001c 9F2C     		cmp	r4, #159
  62 001e 09D9     		bls	.L4
  63              		.loc 1 2411 0 is_stmt 0 discriminator 1
  64 0020 FF23     		movs	r3, #255
  65 0022 5B00     		lsls	r3, r3, #1
  66 0024 9D42     		cmp	r5, r3
  67 0026 05D9     		bls	.L4
2412:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
  68              		.loc 1 2413 0 is_stmt 1
  69 0028 1549     		ldr	r1, .L12+8
  70 002a 2800     		movs	r0, r5
  71 002c FFF7FEFF 		bl	__aeabi_uidivmod
  72              	.LVL5:
2412:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
  73              		.loc 1 2412 0
  74 0030 0029     		cmp	r1, #0
  75 0032 17D0     		beq	.L7
  76              	.L4:
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
  77              		.loc 1 2417 0
  78 0034 9F2C     		cmp	r4, #159
  79 0036 07D9     		bls	.L5
  80              		.loc 1 2417 0 is_stmt 0 discriminator 1
  81 0038 7E2D     		cmp	r5, #126
  82 003a 05D9     		bls	.L5
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
  83              		.loc 1 2419 0 is_stmt 1
  84 003c 7F21     		movs	r1, #127
  85 003e 2800     		movs	r0, r5
  86 0040 FFF7FEFF 		bl	__aeabi_uidivmod
  87              	.LVL6:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 45


2418:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
  88              		.loc 1 2418 0
  89 0044 0029     		cmp	r1, #0
  90 0046 0FD0     		beq	.L8
  91              	.L5:
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
  92              		.loc 1 2423 0
  93 0048 9F2C     		cmp	r4, #159
  94 004a 0FD9     		bls	.L9
  95              		.loc 1 2423 0 is_stmt 0 discriminator 1
  96 004c 3E2D     		cmp	r5, #62
  97 004e 0FD9     		bls	.L10
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2425:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
  98              		.loc 1 2425 0 is_stmt 1
  99 0050 3F21     		movs	r1, #63
 100 0052 2800     		movs	r0, r5
 101 0054 FFF7FEFF 		bl	__aeabi_uidivmod
 102              	.LVL7:
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
 103              		.loc 1 2424 0
 104 0058 0029     		cmp	r1, #0
 105 005a 0BD0     		beq	.L11
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
 106              		.loc 1 2431 0
 107 005c 0020     		movs	r0, #0
 108 005e 0AE0     		b	.L3
 109              	.L6:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 110              		.loc 1 2409 0
 111 0060 0420     		movs	r0, #4
 112 0062 08E0     		b	.L3
 113              	.L7:
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 114              		.loc 1 2415 0
 115 0064 0320     		movs	r0, #3
 116 0066 06E0     		b	.L3
 117              	.L8:
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 118              		.loc 1 2421 0
 119 0068 0220     		movs	r0, #2
 120 006a 04E0     		b	.L3
 121              	.L9:
 122              		.loc 1 2431 0
 123 006c 0020     		movs	r0, #0
 124 006e 02E0     		b	.L3
 125              	.L10:
 126 0070 0020     		movs	r0, #0
 127 0072 00E0     		b	.L3
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 46


 128              	.L11:
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 129              		.loc 1 2427 0
 130 0074 0120     		movs	r0, #1
 131              	.L3:
 132              	.LVL8:
2432:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2433:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
2435:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 133              		.loc 1 2435 0
 134              		@ sp needed
 135              	.LVL9:
 136              	.LVL10:
 137 0076 70BD     		pop	{r4, r5, r6, pc}
 138              	.L13:
 139              		.align	2
 140              	.L12:
 141 0078 FE030000 		.word	1022
 142 007c FF030000 		.word	1023
 143 0080 FF010000 		.word	511
 144              		.cfi_endproc
 145              	.LFE19:
 146              		.size	CapSense_SsCalcLfsrSize, .-CapSense_SsCalcLfsrSize
 147              		.global	__aeabi_uidiv
 148              		.section	.text.CapSense_SsCalcLfsrScale,"ax",%progbits
 149              		.align	2
 150              		.code	16
 151              		.thumb_func
 152              		.type	CapSense_SsCalcLfsrScale, %function
 153              	CapSense_SsCalcLfsrScale:
 154              	.LFB20:
2436:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2440:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2441:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2442:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2443:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2444:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2445:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2446:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2447:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2448:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2449:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2450:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2451:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2452:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2453:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2454:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2455:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2456:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2457:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2458:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2459:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2460:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 47


2461:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2462:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2463:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2464:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2465:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2466:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2467:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2469:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2470:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2472:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2473:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2474:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2475:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2476:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2477:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 155              		.loc 1 2477 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL11:
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
2478:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2479:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2481:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2483:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
 164              		.loc 1 2483 0
 165 0002 4B1E     		subs	r3, r1, #1
 166 0004 DBB2     		uxtb	r3, r3
 167 0006 032B     		cmp	r3, #3
 168 0008 01D8     		bhi	.L20
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
 169              		.loc 1 2487 0
 170 000a 1023     		movs	r3, #16
 171 000c 00E0     		b	.L15
 172              	.L20:
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2498:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 48


2500:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2507:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
 173              		.loc 1 2507 0
 174 000e 0023     		movs	r3, #0
 175              	.L15:
 176              	.LVL12:
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2511:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2513:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
 177              		.loc 1 2515 0
 178 0010 0029     		cmp	r1, #0
 179 0012 11D0     		beq	.L21
 180              		.loc 1 2515 0 is_stmt 0 discriminator 1
 181 0014 002B     		cmp	r3, #0
 182 0016 11D0     		beq	.L22
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
 183              		.loc 1 2518 0 is_stmt 1
 184 0018 6422     		movs	r2, #100
 185 001a 5343     		muls	r3, r2
 186              	.LVL13:
 187 001c 0100     		movs	r1, r0
 188              	.LVL14:
 189 001e 1800     		movs	r0, r3
 190              	.LVL15:
 191 0020 FFF7FEFF 		bl	__aeabi_uidiv
 192              	.LVL16:
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 193              		.loc 1 2519 0
 194 0024 0023     		movs	r3, #0
2520:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
 195              		.loc 1 2521 0
 196 0026 01E0     		b	.L18
 197              	.LVL17:
 198              	.L19:
2522:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
 199              		.loc 1 2523 0
 200 0028 0133     		adds	r3, r3, #1
 201              	.LVL18:
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
 202              		.loc 1 2524 0
 203 002a 4000     		lsls	r0, r0, #1
 204              	.LVL19:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 49


 205              	.L18:
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 206              		.loc 1 2521 0
 207 002c 0928     		cmp	r0, #9
 208 002e FBD9     		bls	.L19
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
 209              		.loc 1 2527 0
 210 0030 0A28     		cmp	r0, #10
 211 0032 04D9     		bls	.L17
2528:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
 212              		.loc 1 2529 0
 213 0034 013B     		subs	r3, r3, #1
 214              	.LVL20:
 215 0036 02E0     		b	.L17
 216              	.LVL21:
 217              	.L21:
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 218              		.loc 1 2534 0
 219 0038 0023     		movs	r3, #0
 220              	.LVL22:
 221 003a 00E0     		b	.L17
 222              	.LVL23:
 223              	.L22:
 224 003c 0023     		movs	r3, #0
 225              	.LVL24:
 226              	.L17:
2535:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2536:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
 227              		.loc 1 2537 0
 228 003e D8B2     		uxtb	r0, r3
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 229              		.loc 1 2538 0
 230              		@ sp needed
 231 0040 10BD     		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE20:
 234              		.size	CapSense_SsCalcLfsrScale, .-CapSense_SsCalcLfsrScale
 235 0042 C046     		.section	.text.CapSense_SsCSDDisableMode,"ax",%progbits
 236              		.align	2
 237              		.code	16
 238              		.thumb_func
 239              		.type	CapSense_SsCSDDisableMode, %function
 240              	CapSense_SsCSDDisableMode:
 241              	.LFB7:
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 242              		.loc 1 763 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 50


 246 0000 10B5     		push	{r4, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 4, -8
 249              		.cfi_offset 14, -4
 767:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 250              		.loc 1 767 0
 251 0002 094C     		ldr	r4, .L24
 252 0004 2268     		ldr	r2, [r4]
 253              	.LVL25:
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 254              		.loc 1 768 0
 255 0006 094B     		ldr	r3, .L24+4
 256 0008 1340     		ands	r3, r2
 257              	.LVL26:
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 258              		.loc 1 769 0
 259 000a 2360     		str	r3, [r4]
 775:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 260              		.loc 1 775 0
 261 000c 084A     		ldr	r2, .L24+8
 262 000e 1368     		ldr	r3, [r2]
 263              	.LVL27:
 776:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 264              		.loc 1 776 0
 265 0010 0121     		movs	r1, #1
 266 0012 8B43     		bics	r3, r1
 267              	.LVL28:
 777:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 268              		.loc 1 777 0
 269 0014 1360     		str	r3, [r2]
 783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 270              		.loc 1 783 0
 271 0016 FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 272              	.LVL29:
 788:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_CSH_TO_AMUXBUS_B_MASK << CapSense_CSH_HSIOM_
 273              		.loc 1 788 0
 274 001a 2268     		ldr	r2, [r4]
 275              	.LVL30:
 789:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_CSH_HSIOM_PTR, newRegValue);
 276              		.loc 1 789 0
 277 001c 054B     		ldr	r3, .L24+12
 278 001e 1340     		ands	r3, r2
 279              	.LVL31:
 790:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 280              		.loc 1 790 0
 281 0020 2360     		str	r3, [r4]
 796:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 282              		.loc 1 796 0
 283 0022 FFF7FEFF 		bl	CapSense_SsCSDDisableShieldElectrodes
 284              	.LVL32:
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 285              		.loc 1 799 0
 286              		@ sp needed
 287 0026 10BD     		pop	{r4, pc}
 288              	.L25:
 289              		.align	2
 290              	.L24:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 51


 291 0028 00040240 		.word	1073873920
 292 002c FF0FFFFF 		.word	-61441
 293 0030 A8020B40 		.word	1074463400
 294 0034 FFF8FFFF 		.word	-1793
 295              		.cfi_endproc
 296              	.LFE7:
 297              		.size	CapSense_SsCSDDisableMode, .-CapSense_SsCSDDisableMode
 298              		.section	.text.CapSense_IsBusy,"ax",%progbits
 299              		.align	2
 300              		.global	CapSense_IsBusy
 301              		.code	16
 302              		.thumb_func
 303              		.type	CapSense_IsBusy, %function
 304              	CapSense_IsBusy:
 305              	.LFB1:
 234:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 306              		.loc 1 234 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 311              		.loc 1 235 0
 312 0000 024B     		ldr	r3, .L27
 313 0002 DB68     		ldr	r3, [r3, #12]
 314 0004 8020     		movs	r0, #128
 315 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 316              		.loc 1 236 0
 317              		@ sp needed
 318 0008 7047     		bx	lr
 319              	.L28:
 320 000a C046     		.align	2
 321              	.L27:
 322 000c 00000000 		.word	CapSense_dsRam
 323              		.cfi_endproc
 324              	.LFE1:
 325              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 326              		.section	.text.CapSense_SetupWidget,"ax",%progbits
 327              		.align	2
 328              		.global	CapSense_SetupWidget
 329              		.code	16
 330              		.thumb_func
 331              		.type	CapSense_SetupWidget, %function
 332              	CapSense_SetupWidget:
 333              	.LFB2:
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 334              		.loc 1 286 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              	.LVL33:
 339 0000 10B5     		push	{r4, lr}
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 4, -8
 342              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 52


 343              		.loc 1 289 0
 344 0002 114B     		ldr	r3, .L35
 345 0004 DB68     		ldr	r3, [r3, #12]
 346 0006 DB03     		lsls	r3, r3, #15
 347 0008 12D4     		bmi	.L32
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 348              		.loc 1 299 0
 349 000a 0128     		cmp	r0, #1
 350 000c 12D8     		bhi	.L33
 300:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 351              		.loc 1 300 0 discriminator 1
 352 000e 1F23     		movs	r3, #31
 353 0010 0340     		ands	r3, r0
 354 0012 0122     		movs	r2, #1
 355 0014 9A40     		lsls	r2, r2, r3
 356 0016 1100     		movs	r1, r2
 357 0018 4209     		lsrs	r2, r0, #5
 358 001a 0B4C     		ldr	r4, .L35
 359 001c 0432     		adds	r2, r2, #4
 360 001e 9300     		lsls	r3, r2, #2
 361 0020 1A59     		ldr	r2, [r3, r4]
 362 0022 0A40     		ands	r2, r1
 363 0024 E318     		adds	r3, r4, r3
 364 0026 5B68     		ldr	r3, [r3, #4]
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 365              		.loc 1 299 0 discriminator 1
 366 0028 1342     		tst	r3, r2
 367 002a 05D1     		bne	.L34
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 368              		.loc 1 307 0
 369 002c 0124     		movs	r4, #1
 370 002e 04E0     		b	.L30
 371              	.L32:
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 372              		.loc 1 292 0
 373 0030 1124     		movs	r4, #17
 374 0032 02E0     		b	.L30
 375              	.L33:
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 376              		.loc 1 307 0
 377 0034 0124     		movs	r4, #1
 378 0036 00E0     		b	.L30
 379              	.L34:
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 380              		.loc 1 303 0
 381 0038 0024     		movs	r4, #0
 382              	.L30:
 383              	.LVL34:
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 384              		.loc 1 314 0
 385 003a 002C     		cmp	r4, #0
 386 003c 01D1     		bne	.L31
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 387              		.loc 1 327 0
 388 003e FFF7FEFF 		bl	CapSense_CSDSetupWidget
 389              	.LVL35:
 390              	.L31:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 53


 343:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 391              		.loc 1 343 0
 392 0042 2000     		movs	r0, r4
 393              		@ sp needed
 394              	.LVL36:
 395 0044 10BD     		pop	{r4, pc}
 396              	.L36:
 397 0046 C046     		.align	2
 398              	.L35:
 399 0048 00000000 		.word	CapSense_dsRam
 400              		.cfi_endproc
 401              	.LFE2:
 402              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 403              		.section	.text.CapSense_Scan,"ax",%progbits
 404              		.align	2
 405              		.global	CapSense_Scan
 406              		.code	16
 407              		.thumb_func
 408              		.type	CapSense_Scan, %function
 409              	CapSense_Scan:
 410              	.LFB3:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 411              		.loc 1 369 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415 0000 10B5     		push	{r4, lr}
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 4, -8
 418              		.cfi_offset 14, -4
 419              	.LVL37:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 420              		.loc 1 372 0
 421 0002 084B     		ldr	r3, .L43
 422 0004 DB68     		ldr	r3, [r3, #12]
 423 0006 DB03     		lsls	r3, r3, #15
 424 0008 07D4     		bmi	.L40
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 425              		.loc 1 379 0
 426 000a 074B     		ldr	r3, .L43+4
 427 000c 1B78     		ldrb	r3, [r3]
 428 000e 012B     		cmp	r3, #1
 429 0010 05D1     		bne	.L42
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 430              		.loc 1 388 0
 431 0012 FFF7FEFF 		bl	CapSense_CSDScan
 432              	.LVL38:
 370:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 433              		.loc 1 370 0
 434 0016 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 435              		.loc 1 389 0
 436 0018 03E0     		b	.L38
 437              	.L40:
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 438              		.loc 1 375 0
 439 001a 1120     		movs	r0, #17
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 54


 440 001c 01E0     		b	.L38
 441              	.L42:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 442              		.loc 1 397 0
 443 001e 0120     		movs	r0, #1
 444 0020 4042     		rsbs	r0, r0, #0
 445              	.L38:
 446              	.LVL39:
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 447              		.loc 1 402 0
 448              		@ sp needed
 449 0022 10BD     		pop	{r4, pc}
 450              	.L44:
 451              		.align	2
 452              	.L43:
 453 0024 00000000 		.word	CapSense_dsRam
 454 0028 00000000 		.word	.LANCHOR0
 455              		.cfi_endproc
 456              	.LFE3:
 457              		.size	CapSense_Scan, .-CapSense_Scan
 458              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 459              		.align	2
 460              		.global	CapSense_ScanAllWidgets
 461              		.code	16
 462              		.thumb_func
 463              		.type	CapSense_ScanAllWidgets, %function
 464              	CapSense_ScanAllWidgets:
 465              	.LFB4:
 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 466              		.loc 1 431 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470 0000 10B5     		push	{r4, lr}
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 4, -8
 473              		.cfi_offset 14, -4
 474              	.LVL40:
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 475              		.loc 1 436 0
 476 0002 0F4B     		ldr	r3, .L53
 477 0004 DB68     		ldr	r3, [r3, #12]
 478 0006 1B06     		lsls	r3, r3, #24
 479 0008 18D4     		bmi	.L52
 480 000a 0024     		movs	r4, #0
 481 000c 0120     		movs	r0, #1
 482 000e 4042     		rsbs	r0, r0, #0
 483 0010 11E0     		b	.L47
 484              	.LVL41:
 485              	.L51:
 452:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 486              		.loc 1 452 0
 487 0012 2000     		movs	r0, r4
 488              	.LVL42:
 489 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 490              	.LVL43:
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 55


 491              		.loc 1 454 0
 492 0018 0028     		cmp	r0, #0
 493 001a 0BD1     		bne	.L48
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 494              		.loc 1 458 0
 495 001c 002C     		cmp	r4, #0
 496 001e 03D1     		bne	.L49
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 497              		.loc 1 461 0
 498 0020 0122     		movs	r2, #1
 499 0022 084B     		ldr	r3, .L53+4
 500 0024 5A70     		strb	r2, [r3, #1]
 501 0026 02E0     		b	.L50
 502              	.L49:
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 503              		.loc 1 466 0
 504 0028 0022     		movs	r2, #0
 505 002a 064B     		ldr	r3, .L53+4
 506 002c 5A70     		strb	r2, [r3, #1]
 507              	.L50:
 476:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 508              		.loc 1 476 0
 509 002e FFF7FEFF 		bl	CapSense_Scan
 510              	.LVL44:
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 511              		.loc 1 478 0
 512 0032 04E0     		b	.L46
 513              	.L48:
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 514              		.loc 1 449 0
 515 0034 0134     		adds	r4, r4, #1
 516              	.LVL45:
 517              	.L47:
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 518              		.loc 1 447 0 discriminator 1
 519 0036 012C     		cmp	r4, #1
 520 0038 EBD9     		bls	.L51
 521 003a 00E0     		b	.L46
 522              	.LVL46:
 523              	.L52:
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 524              		.loc 1 439 0
 525 003c 1120     		movs	r0, #17
 526              	.LVL47:
 527              	.L46:
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 528              		.loc 1 484 0
 529              		@ sp needed
 530 003e 10BD     		pop	{r4, pc}
 531              	.L54:
 532              		.align	2
 533              	.L53:
 534 0040 00000000 		.word	CapSense_dsRam
 535 0044 00000000 		.word	.LANCHOR0
 536              		.cfi_endproc
 537              	.LFE4:
 538              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 56


 539              		.section	.text.CapSense_SetPinState,"ax",%progbits
 540              		.align	2
 541              		.global	CapSense_SetPinState
 542              		.code	16
 543              		.thumb_func
 544              		.type	CapSense_SetPinState, %function
 545              	CapSense_SetPinState:
 546              	.LFB6:
 650:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 547              		.loc 1 650 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551              	.LVL48:
 552 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 553              		.cfi_def_cfa_offset 24
 554              		.cfi_offset 3, -24
 555              		.cfi_offset 4, -20
 556              		.cfi_offset 5, -16
 557              		.cfi_offset 6, -12
 558              		.cfi_offset 7, -8
 559              		.cfi_offset 14, -4
 560 0002 1600     		movs	r6, r2
 675:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 561              		.loc 1 675 0
 562 0004 4001     		lsls	r0, r0, #5
 563              	.LVL49:
 564 0006 2A4B     		ldr	r3, .L63
 565 0008 C458     		ldr	r4, [r0, r3]
 566 000a 4901     		lsls	r1, r1, #5
 567              	.LVL50:
 568 000c 6418     		adds	r4, r4, r1
 569              	.LVL51:
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 570              		.loc 1 680 0
 571 000e 0025     		movs	r5, #0
 572 0010 4AE0     		b	.L56
 573              	.LVL52:
 574              	.L62:
 683:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 575              		.loc 1 683 0
 576 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 577              	.LVL53:
 684:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 578              		.loc 1 684 0
 579 0016 2168     		ldr	r1, [r4]
 580 0018 0B68     		ldr	r3, [r1]
 581 001a 277F     		ldrb	r7, [r4, #28]
 582 001c 0F22     		movs	r2, #15
 583 001e BA40     		lsls	r2, r2, r7
 584 0020 9343     		bics	r3, r2
 585 0022 0B60     		str	r3, [r1]
 685:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 586              		.loc 1 685 0
 587 0024 6168     		ldr	r1, [r4, #4]
 588 0026 0B68     		ldr	r3, [r1]
 589 0028 A77F     		ldrb	r7, [r4, #30]
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 57


 590 002a 0722     		movs	r2, #7
 591 002c BA40     		lsls	r2, r2, r7
 592 002e 9343     		bics	r3, r2
 593 0030 0B60     		str	r3, [r1]
 686:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 594              		.loc 1 686 0
 595 0032 FFF7FEFF 		bl	CyExitCriticalSection
 596              	.LVL54:
 688:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 597              		.loc 1 688 0
 598 0036 012E     		cmp	r6, #1
 599 0038 19D0     		beq	.L58
 600 003a 002E     		cmp	r6, #0
 601 003c 04D0     		beq	.L59
 602 003e 022E     		cmp	r6, #2
 603 0040 25D0     		beq	.L60
 604 0042 032E     		cmp	r6, #3
 605 0044 1FD0     		beq	.L61
 606 0046 2DE0     		b	.L57
 607              	.L59:
 692:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 608              		.loc 1 692 0
 609 0048 FFF7FEFF 		bl	CyEnterCriticalSection
 610              	.LVL55:
 693:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 611              		.loc 1 693 0
 612 004c 6268     		ldr	r2, [r4, #4]
 613 004e 1168     		ldr	r1, [r2]
 614 0050 A77F     		ldrb	r7, [r4, #30]
 615 0052 0623     		movs	r3, #6
 616 0054 BB40     		lsls	r3, r3, r7
 617 0056 0B43     		orrs	r3, r1
 618 0058 1360     		str	r3, [r2]
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 619              		.loc 1 694 0
 620 005a E168     		ldr	r1, [r4, #12]
 621 005c 0B68     		ldr	r3, [r1]
 622 005e 677F     		ldrb	r7, [r4, #29]
 623 0060 0122     		movs	r2, #1
 624 0062 BA40     		lsls	r2, r2, r7
 625 0064 9343     		bics	r3, r2
 626 0066 0B60     		str	r3, [r1]
 695:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 627              		.loc 1 695 0
 628 0068 FFF7FEFF 		bl	CyExitCriticalSection
 629              	.LVL56:
 696:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 630              		.loc 1 696 0
 631 006c 1AE0     		b	.L57
 632              	.L58:
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 633              		.loc 1 699 0
 634 006e FFF7FEFF 		bl	CyEnterCriticalSection
 635              	.LVL57:
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 636              		.loc 1 700 0
 637 0072 E168     		ldr	r1, [r4, #12]
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 58


 638 0074 0B68     		ldr	r3, [r1]
 639 0076 677F     		ldrb	r7, [r4, #29]
 640 0078 0122     		movs	r2, #1
 641 007a BA40     		lsls	r2, r2, r7
 642 007c 9343     		bics	r3, r2
 643 007e 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 644              		.loc 1 701 0
 645 0080 FFF7FEFF 		bl	CyExitCriticalSection
 646              	.LVL58:
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 647              		.loc 1 702 0
 648 0084 0EE0     		b	.L57
 649              	.L61:
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 650              		.loc 1 707 0
 651 0086 2000     		movs	r0, r4
 652 0088 FFF7FEFF 		bl	CapSense_CSDConnectSns
 653              	.LVL59:
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 654              		.loc 1 708 0
 655 008c 0AE0     		b	.L57
 656              	.L60:
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 657              		.loc 1 713 0
 658 008e FFF7FEFF 		bl	CyEnterCriticalSection
 659              	.LVL60:
 714:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 660              		.loc 1 714 0
 661 0092 2268     		ldr	r2, [r4]
 662 0094 1168     		ldr	r1, [r2]
 663 0096 277F     		ldrb	r7, [r4, #28]
 664 0098 0523     		movs	r3, #5
 665 009a BB40     		lsls	r3, r3, r7
 666 009c 0B43     		orrs	r3, r1
 667 009e 1360     		str	r3, [r2]
 715:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 668              		.loc 1 715 0
 669 00a0 FFF7FEFF 		bl	CyExitCriticalSection
 670              	.LVL61:
 671              	.L57:
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 672              		.loc 1 742 0 discriminator 2
 673 00a4 2034     		adds	r4, r4, #32
 674              	.LVL62:
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 675              		.loc 1 680 0 discriminator 2
 676 00a6 0135     		adds	r5, r5, #1
 677              	.LVL63:
 678              	.L56:
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 679              		.loc 1 680 0 is_stmt 0 discriminator 1
 680 00a8 002D     		cmp	r5, #0
 681 00aa B2D0     		beq	.L62
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 682              		.loc 1 744 0 is_stmt 1
 683              		@ sp needed
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 59


 684              	.LVL64:
 685              	.LVL65:
 686              	.LVL66:
 687 00ac F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 688              	.L64:
 689 00ae C046     		.align	2
 690              	.L63:
 691 00b0 00000000 		.word	CapSense_dsFlash
 692              		.cfi_endproc
 693              	.LFE6:
 694              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 695              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 696              		.align	2
 697              		.global	CapSense_SsSwitchSensingMode
 698              		.code	16
 699              		.thumb_func
 700              		.type	CapSense_SsSwitchSensingMode, %function
 701              	CapSense_SsSwitchSensingMode:
 702              	.LFB8:
 902:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 703              		.loc 1 902 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              	.LVL67:
 708 0000 10B5     		push	{r4, lr}
 709              		.cfi_def_cfa_offset 8
 710              		.cfi_offset 4, -8
 711              		.cfi_offset 14, -4
 712 0002 0400     		movs	r4, r0
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 713              		.loc 1 903 0
 714 0004 144B     		ldr	r3, .L71
 715 0006 1B78     		ldrb	r3, [r3]
 716 0008 8342     		cmp	r3, r0
 717 000a 23D0     		beq	.L65
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 718              		.loc 1 906 0
 719 000c 012B     		cmp	r3, #1
 720 000e 02D1     		bne	.L67
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 721              		.loc 1 909 0
 722 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableMode
 723              	.LVL68:
 724 0014 07E0     		b	.L68
 725              	.LVL69:
 726              	.L67:
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 727              		.loc 1 912 0
 728 0016 022B     		cmp	r3, #2
 729 0018 05D0     		beq	.L68
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 730              		.loc 1 918 0
 731 001a 042B     		cmp	r3, #4
 732 001c 03D0     		beq	.L68
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 733              		.loc 1 924 0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 60


 734 001e 032B     		cmp	r3, #3
 735 0020 01D1     		bne	.L68
 927:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 736              		.loc 1 927 0
 737 0022 FFF7FEFF 		bl	CapSense_BistDisableMode
 738              	.LVL70:
 739              	.L68:
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 740              		.loc 1 939 0
 741 0026 012C     		cmp	r4, #1
 742 0028 05D1     		bne	.L69
 943:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 743              		.loc 1 943 0
 744 002a FFF7FEFF 		bl	CapSense_SsCSDInitialize
 745              	.LVL71:
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 746              		.loc 1 944 0
 747 002e 0122     		movs	r2, #1
 748 0030 094B     		ldr	r3, .L71
 749 0032 1A70     		strb	r2, [r3]
 750 0034 0EE0     		b	.L65
 751              	.L69:
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 752              		.loc 1 947 0
 753 0036 022C     		cmp	r4, #2
 754 0038 0CD0     		beq	.L65
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 755              		.loc 1 955 0
 756 003a 042C     		cmp	r4, #4
 757 003c 0AD0     		beq	.L65
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 758              		.loc 1 963 0
 759 003e 032C     		cmp	r4, #3
 760 0040 05D1     		bne	.L70
 966:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
 761              		.loc 1 966 0
 762 0042 FFF7FEFF 		bl	CapSense_BistInitialize
 763              	.LVL72:
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 764              		.loc 1 967 0
 765 0046 0322     		movs	r2, #3
 766 0048 034B     		ldr	r3, .L71
 767 004a 1A70     		strb	r2, [r3]
 768 004c 02E0     		b	.L65
 769              	.L70:
 972:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 770              		.loc 1 972 0
 771 004e 0022     		movs	r2, #0
 772 0050 014B     		ldr	r3, .L71
 773 0052 1A70     		strb	r2, [r3]
 774              	.L65:
 975:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 775              		.loc 1 975 0
 776              		@ sp needed
 777 0054 10BD     		pop	{r4, pc}
 778              	.L72:
 779 0056 C046     		.align	2
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 61


 780              	.L71:
 781 0058 00000000 		.word	.LANCHOR0
 782              		.cfi_endproc
 783              	.LFE8:
 784              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 785              		.section	.text.CapSense_SsSetIOsInDefaultState,"ax",%progbits
 786              		.align	2
 787              		.global	CapSense_SsSetIOsInDefaultState
 788              		.code	16
 789              		.thumb_func
 790              		.type	CapSense_SsSetIOsInDefaultState, %function
 791              	CapSense_SsSetIOsInDefaultState:
 792              	.LFB9:
1001:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
 793              		.loc 1 1001 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797 0000 30B5     		push	{r4, r5, lr}
 798              		.cfi_def_cfa_offset 12
 799              		.cfi_offset 4, -12
 800              		.cfi_offset 5, -8
 801              		.cfi_offset 14, -4
 802              	.LVL73:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 803              		.loc 1 1007 0
 804 0002 0021     		movs	r1, #0
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
 805              		.loc 1 1002 0
 806 0004 0D4B     		ldr	r3, .L76
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 807              		.loc 1 1007 0
 808 0006 16E0     		b	.L74
 809              	.LVL74:
 810              	.L75:
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 811              		.loc 1 1014 0 discriminator 3
 812 0008 1868     		ldr	r0, [r3]
 813 000a 0268     		ldr	r2, [r0]
 814              	.LVL75:
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 815              		.loc 1 1015 0 discriminator 3
 816 000c 5C69     		ldr	r4, [r3, #20]
 817 000e A243     		bics	r2, r4
 818              	.LVL76:
1016:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 819              		.loc 1 1016 0 discriminator 3
 820 0010 0260     		str	r2, [r0]
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
 821              		.loc 1 1018 0 discriminator 3
 822 0012 5C68     		ldr	r4, [r3, #4]
 823 0014 2268     		ldr	r2, [r4]
 824              	.LVL77:
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
 825              		.loc 1 1019 0 discriminator 3
 826 0016 9D7F     		ldrb	r5, [r3, #30]
 827 0018 0720     		movs	r0, #7
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 62


 828 001a A840     		lsls	r0, r0, r5
 829 001c 8243     		bics	r2, r0
 830              	.LVL78:
 831 001e 1000     		movs	r0, r2
 832              	.LVL79:
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 833              		.loc 1 1020 0 discriminator 3
 834 0020 0622     		movs	r2, #6
 835 0022 AA40     		lsls	r2, r2, r5
 836 0024 0243     		orrs	r2, r0
 837              	.LVL80:
1021:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 838              		.loc 1 1021 0 discriminator 3
 839 0026 2260     		str	r2, [r4]
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
 840              		.loc 1 1023 0 discriminator 3
 841 0028 D868     		ldr	r0, [r3, #12]
 842 002a 0268     		ldr	r2, [r0]
 843              	.LVL81:
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 844              		.loc 1 1024 0 discriminator 3
 845 002c 9C69     		ldr	r4, [r3, #24]
 846 002e A243     		bics	r2, r4
 847              	.LVL82:
1025:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 848              		.loc 1 1025 0 discriminator 3
 849 0030 0260     		str	r2, [r0]
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 850              		.loc 1 1028 0 discriminator 3
 851 0032 2033     		adds	r3, r3, #32
 852              	.LVL83:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 853              		.loc 1 1007 0 discriminator 3
 854 0034 0131     		adds	r1, r1, #1
 855              	.LVL84:
 856              	.L74:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 857              		.loc 1 1007 0 is_stmt 0 discriminator 1
 858 0036 0129     		cmp	r1, #1
 859 0038 E6D9     		bls	.L75
1038:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 860              		.loc 1 1038 0 is_stmt 1
 861              		@ sp needed
 862 003a 30BD     		pop	{r4, r5, pc}
 863              	.L77:
 864              		.align	2
 865              	.L76:
 866 003c 00000000 		.word	CapSense_ioList
 867              		.cfi_endproc
 868              	.LFE9:
 869              		.size	CapSense_SsSetIOsInDefaultState, .-CapSense_SsSetIOsInDefaultState
 870              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 871              		.align	2
 872              		.global	CapSense_SsPostAllWidgetsScan
 873              		.code	16
 874              		.thumb_func
 875              		.type	CapSense_SsPostAllWidgetsScan, %function
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 63


 876              	CapSense_SsPostAllWidgetsScan:
 877              	.LFB10:
1123:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 878              		.loc 1 1123 0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882 0000 10B5     		push	{r4, lr}
 883              		.cfi_def_cfa_offset 8
 884              		.cfi_offset 4, -8
 885              		.cfi_offset 14, -4
 886              	.L83:
1134:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 887              		.loc 1 1134 0
 888 0002 1B4A     		ldr	r2, .L84
 889 0004 9378     		ldrb	r3, [r2, #2]
 890 0006 0133     		adds	r3, r3, #1
 891 0008 DBB2     		uxtb	r3, r3
 892 000a 9370     		strb	r3, [r2, #2]
1136:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 893              		.loc 1 1136 0
 894 000c 9078     		ldrb	r0, [r2, #2]
 895 000e C0B2     		uxtb	r0, r0
 896 0010 FFF7FEFF 		bl	CapSense_SetupWidget
 897              	.LVL85:
 898 0014 041E     		subs	r4, r0, #0
 899              	.LVL86:
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 900              		.loc 1 1138 0
 901 0016 09D1     		bne	.L79
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 902              		.loc 1 1140 0
 903 0018 154B     		ldr	r3, .L84
 904 001a 9B78     		ldrb	r3, [r3, #2]
 905 001c 012B     		cmp	r3, #1
 906 001e 02D1     		bne	.L80
1143:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 907              		.loc 1 1143 0
 908 0020 0022     		movs	r2, #0
 909 0022 134B     		ldr	r3, .L84
 910 0024 5A70     		strb	r2, [r3, #1]
 911              	.L80:
1145:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 912              		.loc 1 1145 0
 913 0026 FFF7FEFF 		bl	CapSense_Scan
 914              	.LVL87:
 915 002a 1EE0     		b	.L81
 916              	.LVL88:
 917              	.L79:
1147:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 918              		.loc 1 1147 0
 919 002c 104B     		ldr	r3, .L84
 920 002e 9B78     		ldrb	r3, [r3, #2]
 921 0030 012B     		cmp	r3, #1
 922 0032 11D1     		bne	.L82
1161:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 923              		.loc 1 1161 0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 64


 924 0034 0F4B     		ldr	r3, .L84+4
 925 0036 1A89     		ldrh	r2, [r3, #8]
 926 0038 0132     		adds	r2, r2, #1
 927 003a 1A81     		strh	r2, [r3, #8]
1163:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 928              		.loc 1 1163 0
 929 003c DA68     		ldr	r2, [r3, #12]
 930 003e 8021     		movs	r1, #128
 931 0040 8A43     		bics	r2, r1
 932 0042 DA60     		str	r2, [r3, #12]
1166:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 933              		.loc 1 1166 0
 934 0044 DA68     		ldr	r2, [r3, #12]
 935 0046 1202     		lsls	r2, r2, #8
 936 0048 120A     		lsrs	r2, r2, #8
 937 004a DA60     		str	r2, [r3, #12]
1167:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 938              		.loc 1 1167 0
 939 004c DA68     		ldr	r2, [r3, #12]
 940 004e 0406     		lsls	r4, r0, #24
 941 0050 1443     		orrs	r4, r2
 942 0052 DC60     		str	r4, [r3, #12]
 943              	.LVL89:
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 944              		.loc 1 1170 0
 945 0054 0024     		movs	r4, #0
 946 0056 08E0     		b	.L81
 947              	.LVL90:
 948              	.L82:
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 949              		.loc 1 1175 0
 950 0058 064A     		ldr	r2, .L84+4
 951 005a D368     		ldr	r3, [r2, #12]
 952 005c 1B02     		lsls	r3, r3, #8
 953 005e 1B0A     		lsrs	r3, r3, #8
 954 0060 D360     		str	r3, [r2, #12]
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 955              		.loc 1 1176 0
 956 0062 D168     		ldr	r1, [r2, #12]
 957 0064 0306     		lsls	r3, r0, #24
 958 0066 0B43     		orrs	r3, r1
 959 0068 D360     		str	r3, [r2, #12]
 960              	.LVL91:
 961              	.L81:
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
 962              		.loc 1 1178 0
 963 006a 002C     		cmp	r4, #0
 964 006c C9D1     		bne	.L83
1180:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 965              		.loc 1 1180 0
 966              		@ sp needed
 967              	.LVL92:
 968 006e 10BD     		pop	{r4, pc}
 969              	.L85:
 970              		.align	2
 971              	.L84:
 972 0070 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 65


 973 0074 00000000 		.word	CapSense_dsRam
 974              		.cfi_endproc
 975              	.LFE10:
 976              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 977              		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 978              		.align	2
 979              		.global	CapSense_SsIsrInitialize
 980              		.code	16
 981              		.thumb_func
 982              		.type	CapSense_SsIsrInitialize, %function
 983              	CapSense_SsIsrInitialize:
 984              	.LFB11:
1200:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 985              		.loc 1 1200 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              	.LVL93:
 990 0000 10B5     		push	{r4, lr}
 991              		.cfi_def_cfa_offset 8
 992              		.cfi_offset 4, -8
 993              		.cfi_offset 14, -4
1201:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 994              		.loc 1 1201 0
 995 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 996              	.LVL94:
1202:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 997              		.loc 1 1202 0
 998              		@ sp needed
 999 0006 10BD     		pop	{r4, pc}
 1000              		.cfi_endproc
 1001              	.LFE11:
 1002              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 1003              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 1004              		.align	2
 1005              		.global	CapSense_SsSetModClkClockDivider
 1006              		.code	16
 1007              		.thumb_func
 1008              		.type	CapSense_SsSetModClkClockDivider, %function
 1009              	CapSense_SsSetModClkClockDivider:
 1010              	.LFB12:
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 1011              		.loc 1 1223 0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 0
 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 1015              		@ link register save eliminated.
 1016              	.LVL95:
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 1017              		.loc 1 1226 0
 1018 0000 074A     		ldr	r2, .L89
 1019 0002 084B     		ldr	r3, .L89+4
 1020 0004 1A60     		str	r2, [r3]
1236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1021              		.loc 1 1236 0
 1022 0006 0138     		subs	r0, r0, #1
 1023              	.LVL96:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 66


 1024 0008 0002     		lsls	r0, r0, #8
 1025              	.LVL97:
 1026 000a 074B     		ldr	r3, .L89+8
 1027 000c 1860     		str	r0, [r3]
 1028              	.L88:
1239:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1029              		.loc 1 1239 0 discriminator 1
 1030 000e 054B     		ldr	r3, .L89+4
 1031 0010 1B68     		ldr	r3, [r3]
 1032 0012 002B     		cmp	r3, #0
 1033 0014 FBDB     		blt	.L88
1245:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 1034              		.loc 1 1245 0
 1035 0016 054A     		ldr	r2, .L89+12
 1036 0018 024B     		ldr	r3, .L89+4
 1037 001a 1A60     		str	r2, [r3]
1270:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1038              		.loc 1 1270 0
 1039              		@ sp needed
 1040 001c 7047     		bx	lr
 1041              	.L90:
 1042 001e C046     		.align	2
 1043              	.L89:
 1044 0020 40000040 		.word	1073741888
 1045 0024 00000140 		.word	1073807360
 1046 0028 00030140 		.word	1073808128
 1047 002c 40FF0080 		.word	-2147418304
 1048              		.cfi_endproc
 1049              	.LFE12:
 1050              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 1051              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 1052              		.align	2
 1053              		.global	CapSense_SsSetSnsClockDivider
 1054              		.code	16
 1055              		.thumb_func
 1056              		.type	CapSense_SsSetSnsClockDivider, %function
 1057              	CapSense_SsSetSnsClockDivider:
 1058              	.LFB13:
1291:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 1059              		.loc 1 1291 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063              		@ link register save eliminated.
 1064              	.LVL98:
1300:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
 1065              		.loc 1 1300 0
 1066 0000 034A     		ldr	r2, .L92
 1067 0002 1368     		ldr	r3, [r2]
 1068              	.LVL99:
1301:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
 1069              		.loc 1 1301 0
 1070 0004 1B0B     		lsrs	r3, r3, #12
 1071              	.LVL100:
 1072 0006 1B03     		lsls	r3, r3, #12
 1073              	.LVL101:
1302:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 67


 1074              		.loc 1 1302 0
 1075 0008 0138     		subs	r0, r0, #1
 1076              	.LVL102:
 1077 000a 1843     		orrs	r0, r3
 1078              	.LVL103:
1303:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 1079              		.loc 1 1303 0
 1080 000c 1060     		str	r0, [r2]
1352:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1081              		.loc 1 1352 0
 1082              		@ sp needed
 1083 000e 7047     		bx	lr
 1084              	.L93:
 1085              		.align	2
 1086              	.L92:
 1087 0010 00020B40 		.word	1074463232
 1088              		.cfi_endproc
 1089              	.LFE13:
 1090              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 1091              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 1092              		.align	2
 1093              		.global	CapSense_SsSetClockDividers
 1094              		.code	16
 1095              		.thumb_func
 1096              		.type	CapSense_SsSetClockDividers, %function
 1097              	CapSense_SsSetClockDividers:
 1098              	.LFB14:
1375:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
 1099              		.loc 1 1375 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 0
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 1103              	.LVL104:
 1104 0000 10B5     		push	{r4, lr}
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 4, -8
 1107              		.cfi_offset 14, -4
 1108 0002 0400     		movs	r4, r0
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1109              		.loc 1 1377 0
 1110 0004 0800     		movs	r0, r1
 1111              	.LVL105:
 1112 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 1113              	.LVL106:
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1114              		.loc 1 1380 0
 1115 000a 2000     		movs	r0, r4
 1116 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 1117              	.LVL107:
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1118              		.loc 1 1381 0
 1119              		@ sp needed
 1120              	.LVL108:
 1121 0010 10BD     		pop	{r4, pc}
 1122              		.cfi_endproc
 1123              	.LFE14:
 1124              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 68


 1125 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 1126              		.align	2
 1127              		.global	CapSense_CalibrateWidget
 1128              		.code	16
 1129              		.thumb_func
 1130              		.type	CapSense_CalibrateWidget, %function
 1131              	CapSense_CalibrateWidget:
 1132              	.LFB15:
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1133              		.loc 1 1427 0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 1137              	.LVL109:
 1138 0000 70B5     		push	{r4, r5, r6, lr}
 1139              		.cfi_def_cfa_offset 16
 1140              		.cfi_offset 4, -16
 1141              		.cfi_offset 5, -12
 1142              		.cfi_offset 6, -8
 1143              		.cfi_offset 14, -4
 1144 0002 0400     		movs	r4, r0
 1145              	.LVL110:
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1146              		.loc 1 1442 0
 1147 0004 1F23     		movs	r3, #31
 1148 0006 0340     		ands	r3, r0
 1149 0008 0122     		movs	r2, #1
 1150 000a 9A40     		lsls	r2, r2, r3
 1151 000c 1100     		movs	r1, r2
 1152 000e 4209     		lsrs	r2, r0, #5
 1153 0010 0B48     		ldr	r0, .L99
 1154              	.LVL111:
 1155 0012 0432     		adds	r2, r2, #4
 1156 0014 9300     		lsls	r3, r2, #2
 1157 0016 1A58     		ldr	r2, [r3, r0]
 1158 0018 0A40     		ands	r2, r1
 1159 001a C318     		adds	r3, r0, r3
 1160 001c 5B68     		ldr	r3, [r3, #4]
 1161 001e 1342     		tst	r3, r2
 1162 0020 01D0     		beq	.L98
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1163              		.loc 1 1444 0
 1164 0022 0025     		movs	r5, #0
 1165 0024 00E0     		b	.L96
 1166              	.L98:
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1167              		.loc 1 1448 0
 1168 0026 1125     		movs	r5, #17
 1169              	.L96:
 1170              	.LVL112:
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1171              		.loc 1 1452 0
 1172 0028 002D     		cmp	r5, #0
 1173 002a 07D1     		bne	.L97
1481:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1174              		.loc 1 1481 0
 1175 002c 4621     		movs	r1, #70
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 69


 1176 002e 2000     		movs	r0, r4
 1177 0030 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1178              	.LVL113:
 1179 0034 0500     		movs	r5, r0
 1180              	.LVL114:
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN) */
 1181              		.loc 1 1497 0
 1182 0036 2000     		movs	r0, r4
 1183              	.LVL115:
 1184 0038 FFF7FEFF 		bl	CapSense_DsUpdateWidgetCrc
 1185              	.LVL116:
 1186              	.L97:
1503:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1187              		.loc 1 1503 0
 1188 003c 2800     		movs	r0, r5
 1189              		@ sp needed
 1190              	.LVL117:
 1191              	.LVL118:
 1192 003e 70BD     		pop	{r4, r5, r6, pc}
 1193              	.L100:
 1194              		.align	2
 1195              	.L99:
 1196 0040 00000000 		.word	CapSense_dsRam
 1197              		.cfi_endproc
 1198              	.LFE15:
 1199              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 1200              		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 1201              		.align	2
 1202              		.global	CapSense_CalibrateAllWidgets
 1203              		.code	16
 1204              		.thumb_func
 1205              		.type	CapSense_CalibrateAllWidgets, %function
 1206              	CapSense_CalibrateAllWidgets:
 1207              	.LFB16:
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1208              		.loc 1 1540 0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 0
 1211              		@ frame_needed = 0, uses_anonymous_args = 0
 1212 0000 70B5     		push	{r4, r5, r6, lr}
 1213              		.cfi_def_cfa_offset 16
 1214              		.cfi_offset 4, -16
 1215              		.cfi_offset 5, -12
 1216              		.cfi_offset 6, -8
 1217              		.cfi_offset 14, -4
 1218              	.LVL119:
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1219              		.loc 1 1544 0
 1220 0002 0024     		movs	r4, #0
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1221              		.loc 1 1541 0
 1222 0004 0025     		movs	r5, #0
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1223              		.loc 1 1544 0
 1224 0006 04E0     		b	.L102
 1225              	.LVL120:
 1226              	.L103:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 70


1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1227              		.loc 1 1546 0 discriminator 3
 1228 0008 2000     		movs	r0, r4
 1229 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 1230              	.LVL121:
 1231 000e 0543     		orrs	r5, r0
 1232              	.LVL122:
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1233              		.loc 1 1544 0 discriminator 3
 1234 0010 0134     		adds	r4, r4, #1
 1235              	.LVL123:
 1236              	.L102:
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1237              		.loc 1 1544 0 is_stmt 0 discriminator 1
 1238 0012 012C     		cmp	r4, #1
 1239 0014 F8D9     		bls	.L103
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
 1240              		.loc 1 1550 0 is_stmt 1
 1241 0016 2800     		movs	r0, r5
 1242              		@ sp needed
 1243              	.LVL124:
 1244              	.LVL125:
 1245 0018 70BD     		pop	{r4, r5, r6, pc}
 1246              		.cfi_endproc
 1247              	.LFE16:
 1248              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1249 001a C046     		.section	.text.CapSense_SsClearCSDSensors,"ax",%progbits
 1250              		.align	2
 1251              		.global	CapSense_SsClearCSDSensors
 1252              		.code	16
 1253              		.thumb_func
 1254              		.type	CapSense_SsClearCSDSensors, %function
 1255              	CapSense_SsClearCSDSensors:
 1256              	.LFB21:
2539:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2540:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2541:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2542:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2549:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2550:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsClearCSDSensors
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  an inactive state.
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2559:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 71


2562:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  connection is Ground or Hi-Z.
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsClearCSDSensors(void)
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1257              		.loc 1 2567 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 0
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
 1261 0000 70B5     		push	{r4, r5, r6, lr}
 1262              		.cfi_def_cfa_offset 16
 1263              		.cfi_offset 4, -16
 1264              		.cfi_offset 5, -12
 1265              		.cfi_offset 6, -8
 1266              		.cfi_offset 14, -4
 1267              	.LVL126:
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
2570:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2572:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 pinIndex;
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2574:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2576:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Declare ptr to sensor IO structure */
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr;
2582:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
 1268              		.loc 1 2583 0
 1269 0002 0025     		movs	r5, #0
 1270 0004 10E0     		b	.L105
 1271              	.LVL127:
 1272              	.L108:
2584:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2587:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2588:Generated_Source\PSoC4/CapSense_Sensing.c ****                 curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 1273              		.loc 1 2588 0
 1274 0006 6B01     		lsls	r3, r5, #5
 1275 0008 094A     		ldr	r2, .L109
 1276 000a 9E58     		ldr	r6, [r3, r2]
 1277              	.LVL128:
2589:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                 CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash;
2590:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Go through all the sensors in widget */
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_dsFlash.wdgtArray[wdgtIndex].totalNu
 1278              		.loc 1 2592 0
 1279 000c 0024     		movs	r4, #0
 1280 000e 04E0     		b	.L106
 1281              	.LVL129:
 1282              	.L107:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 72


2593:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Check ganged sns flag */
2596:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[wdgtIndex].stat
2597:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                  CapSense_GANGED_SNS_MASK))
2598:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2599:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get sns pointer */
2600:Generated_Source\PSoC4/CapSense_Sensing.c ****                             curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
2601:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                CapSense_dsFlash.wdgtArray[wdgtIndex
2602:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                snsIndex;
2603:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2604:Generated_Source\PSoC4/CapSense_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2605:Generated_Source\PSoC4/CapSense_Sensing.c ****                             {
2606:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2607:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId 
2608:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2609:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Disconnect dedicated pin */
2610:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 CapSense_CSDDisconnectSns(curDedicatedSnsIOPtr);
2611:Generated_Source\PSoC4/CapSense_Sensing.c ****                             }
2612:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2613:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2614:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2615:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Disable sensor */
2616:Generated_Source\PSoC4/CapSense_Sensing.c ****                             CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2617:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2618:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2619:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable sensor */
2620:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
 1283              		.loc 1 2620 0 discriminator 3
 1284 0010 6001     		lsls	r0, r4, #5
 1285 0012 3018     		adds	r0, r6, r0
 1286 0014 FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 1287              	.LVL130:
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1288              		.loc 1 2592 0 discriminator 3
 1289 0018 0134     		adds	r4, r4, #1
 1290              	.LVL131:
 1291              	.L106:
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1292              		.loc 1 2592 0 is_stmt 0 discriminator 1
 1293 001a 6B01     		lsls	r3, r5, #5
 1294 001c 044A     		ldr	r2, .L109
 1295 001e D318     		adds	r3, r2, r3
 1296 0020 1B7E     		ldrb	r3, [r3, #24]
 1297 0022 9C42     		cmp	r4, r3
 1298 0024 F4D3     		bcc	.L107
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1299              		.loc 1 2583 0 is_stmt 1 discriminator 2
 1300 0026 0135     		adds	r5, r5, #1
 1301              	.LVL132:
 1302              	.L105:
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1303              		.loc 1 2583 0 is_stmt 0 discriminator 1
 1304 0028 012D     		cmp	r5, #1
 1305 002a ECD9     		bls	.L108
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2622:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 73


2623:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1306              		.loc 1 2625 0 is_stmt 1
 1307              		@ sp needed
 1308              	.LVL133:
 1309 002c 70BD     		pop	{r4, r5, r6, pc}
 1310              	.L110:
 1311 002e C046     		.align	2
 1312              	.L109:
 1313 0030 00000000 		.word	CapSense_dsFlash
 1314              		.cfi_endproc
 1315              	.LFE21:
 1316              		.size	CapSense_SsClearCSDSensors, .-CapSense_SsClearCSDSensors
 1317              		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1318              		.align	2
 1319              		.global	CapSense_SsCSDGetColSnsClkDivider
 1320              		.code	16
 1321              		.thumb_func
 1322              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 1323              	CapSense_SsCSDGetColSnsClkDivider:
 1324              	.LFB22:
2626:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1325              		.loc 1 2649 0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 0
 1328              		@ frame_needed = 0, uses_anonymous_args = 0
 1329              		@ link register save eliminated.
 1330              	.LVL134:
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2651:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2652:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2653:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2654:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 74


2655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1331              		.loc 1 2656 0
 1332 0000 4001     		lsls	r0, r0, #5
 1333              	.LVL135:
 1334 0002 024B     		ldr	r3, .L112
 1335 0004 1818     		adds	r0, r3, r0
 1336 0006 4368     		ldr	r3, [r0, #4]
 1337              	.LVL136:
2657:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2658:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2659:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1338              		.loc 1 2659 0
 1339 0008 9889     		ldrh	r0, [r3, #12]
 1340              	.LVL137:
2660:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2661:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2662:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2663:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2664:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2665:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2666:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2667:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1341              		.loc 1 2667 0
 1342              		@ sp needed
 1343 000a 7047     		bx	lr
 1344              	.L113:
 1345              		.align	2
 1346              	.L112:
 1347 000c 00000000 		.word	CapSense_dsFlash
 1348              		.cfi_endproc
 1349              	.LFE22:
 1350              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1351              		.section	.text.CapSense_SsCSDSetColSnsClkDivider,"ax",%progbits
 1352              		.align	2
 1353              		.global	CapSense_SsCSDSetColSnsClkDivider
 1354              		.code	16
 1355              		.thumb_func
 1356              		.type	CapSense_SsCSDSetColSnsClkDivider, %function
 1357              	CapSense_SsCSDSetColSnsClkDivider:
 1358              	.LFB23:
2668:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2669:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2670:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2671:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDSetColSnsClkDivider
2672:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2673:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2674:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2675:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function sets the Sense Clock Divider value for one-dimension widgets
2676:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2677:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2678:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2679:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function sets the Sense Clock Divider value based on the Component
2680:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2681:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2682:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2683:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 75


2684:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widgetId Specifies the ID of the widget.
2685:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2686:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return The Sense Clock Divider value for one-dimension widgets
2687:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        and the Column Sense Clock divider value for two-dimension widgets.
2688:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2689:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2690:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsCSDSetColSnsClkDivider(uint32 widgetId, uint32 dividerVal)
2691:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1359              		.loc 1 2691 0
 1360              		.cfi_startproc
 1361              		@ args = 0, pretend = 0, frame = 0
 1362              		@ frame_needed = 0, uses_anonymous_args = 0
 1363              		@ link register save eliminated.
 1364              	.LVL138:
2692:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2693:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2694:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2695:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2696:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1365              		.loc 1 2696 0
 1366 0000 4001     		lsls	r0, r0, #5
 1367              	.LVL139:
 1368 0002 024B     		ldr	r3, .L115
 1369 0004 1818     		adds	r0, r3, r0
 1370 0006 4368     		ldr	r3, [r0, #4]
 1371              	.LVL140:
2697:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2698:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt->snsClk = (uint16)dividerVal;
 1372              		.loc 1 2699 0
 1373 0008 9981     		strh	r1, [r3, #12]
2700:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2701:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsRam.snsCsdClk = (uint16)dividerVal;
2702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2704:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1374              		.loc 1 2705 0
 1375              		@ sp needed
 1376 000a 7047     		bx	lr
 1377              	.L116:
 1378              		.align	2
 1379              	.L115:
 1380 000c 00000000 		.word	CapSense_dsFlash
 1381              		.cfi_endproc
 1382              	.LFE23:
 1383              		.size	CapSense_SsCSDSetColSnsClkDivider, .-CapSense_SsCSDSetColSnsClkDivider
 1384              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1385              		.align	2
 1386              		.global	CapSense_SsCSDCalcPrsSize
 1387              		.code	16
 1388              		.thumb_func
 1389              		.type	CapSense_SsCSDCalcPrsSize, %function
 1390              	CapSense_SsCSDCalcPrsSize:
 1391              	.LFB24:
2706:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2707:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 76


2708:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2711:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2715:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2716:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2730:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2733:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2737:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2740:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2741:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2745:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2746:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2747:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2752:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2755:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2757:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2758:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2759:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2762:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 77


2765:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2766:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2767:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2768:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2769:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2770:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1392              		.loc 1 2775 0
 1393              		.cfi_startproc
 1394              		@ args = 0, pretend = 0, frame = 0
 1395              		@ frame_needed = 0, uses_anonymous_args = 0
 1396              		@ link register save eliminated.
 1397              	.LVL141:
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2778:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if ((CapSense_ENABLE != CapSense_CSDV2) && \
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK))
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1398              		.loc 1 2784 0
 1399 0000 0203     		lsls	r2, r0, #12
 1400 0002 121A     		subs	r2, r2, r0
 1401 0004 0123     		movs	r3, #1
 1402 0006 8B40     		lsls	r3, r3, r1
 1403 0008 013B     		subs	r3, r3, #1
 1404 000a 9A42     		cmp	r2, r3
 1405 000c 05D9     		bls	.L119
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1406              		.loc 1 2789 0
 1407 000e 0202     		lsls	r2, r0, #8
 1408 0010 101A     		subs	r0, r2, r0
 1409              	.LVL142:
 1410 0012 8342     		cmp	r3, r0
 1411 0014 03D3     		bcc	.L120
2790:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2792:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1412              		.loc 1 2792 0
 1413 0016 0520     		movs	r0, #5
 1414 0018 02E0     		b	.L118
 1415              	.LVL143:
 1416              	.L119:
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1417              		.loc 1 2787 0
 1418 001a 0620     		movs	r0, #6
 1419              	.LVL144:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 78


 1420 001c 00E0     		b	.L118
 1421              	.L120:
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2795:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2796:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1422              		.loc 1 2797 0
 1423 001e 0020     		movs	r0, #0
 1424              	.L118:
 1425              	.LVL145:
2798:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1426              		.loc 1 2800 0
 1427 0020 C0B2     		uxtb	r0, r0
 1428              	.LVL146:
2801:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1429              		.loc 1 2801 0
 1430              		@ sp needed
 1431 0022 7047     		bx	lr
 1432              		.cfi_endproc
 1433              	.LFE24:
 1434              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
 1435              		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1436              		.align	2
 1437              		.code	16
 1438              		.thumb_func
 1439              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
 1440              	CapSense_SsSetWidgetSenseClkSrc:
 1441              	.LFB18:
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1442              		.loc 1 2239 0
 1443              		.cfi_startproc
 1444              		@ args = 0, pretend = 0, frame = 0
 1445              		@ frame_needed = 0, uses_anonymous_args = 0
 1446              	.LVL147:
 1447 0000 70B5     		push	{r4, r5, r6, lr}
 1448              		.cfi_def_cfa_offset 16
 1449              		.cfi_offset 4, -16
 1450              		.cfi_offset 5, -12
 1451              		.cfi_offset 6, -8
 1452              		.cfi_offset 14, -4
 1453 0002 0E00     		movs	r6, r1
2251:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1454              		.loc 1 2251 0
 1455 0004 FFF7FEFF 		bl	CapSense_SsCSDGetColSnsClkDivider
 1456              	.LVL148:
 1457 0008 0500     		movs	r5, r0
 1458              	.LVL149:
2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
 1459              		.loc 1 2254 0
 1460 000a 7188     		ldrh	r1, [r6, #2]
 1461 000c 0022     		movs	r2, #0
 1462 000e FFF7FEFF 		bl	CapSense_SsCSDGetNumberOfConversions
 1463              	.LVL150:
 1464 0012 0100     		movs	r1, r0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 79


 1465              	.LVL151:
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
 1466              		.loc 1 2256 0
 1467 0014 2800     		movs	r0, r5
 1468              	.LVL152:
 1469 0016 FFF7FEFF 		bl	CapSense_SsCalcLfsrSize
 1470              	.LVL153:
 1471 001a 041E     		subs	r4, r0, #0
 1472              	.LVL154:
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1473              		.loc 1 2257 0
 1474 001c 04D1     		bne	.L122
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1475              		.loc 1 2263 0
 1476 001e 6800     		lsls	r0, r5, #1
 1477              	.LVL155:
 1478 0020 7188     		ldrh	r1, [r6, #2]
 1479 0022 FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1480              	.LVL156:
 1481 0026 0400     		movs	r4, r0
 1482              	.LVL157:
 1483              	.L122:
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
 1484              		.loc 1 2265 0
 1485 0028 2100     		movs	r1, r4
 1486 002a 2800     		movs	r0, r5
 1487 002c FFF7FEFF 		bl	CapSense_SsCalcLfsrScale
 1488              	.LVL158:
2280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1489              		.loc 1 2280 0
 1490 0030 0001     		lsls	r0, r0, #4
 1491              	.LVL159:
 1492 0032 C0B2     		uxtb	r0, r0
 1493 0034 2043     		orrs	r0, r4
 1494 0036 B073     		strb	r0, [r6, #14]
2315:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1495              		.loc 1 2315 0
 1496              		@ sp needed
 1497              	.LVL160:
 1498              	.LVL161:
 1499              	.LVL162:
 1500 0038 70BD     		pop	{r4, r5, r6, pc}
 1501              		.cfi_endproc
 1502              	.LFE18:
 1503              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
 1504 003a C046     		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1505              		.align	2
 1506              		.global	CapSense_SsInitializeSourceSenseClk
 1507              		.code	16
 1508              		.thumb_func
 1509              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1510              	CapSense_SsInitializeSourceSenseClk:
 1511              	.LFB17:
2186:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1512              		.loc 1 2186 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 80


 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516 0000 10B5     		push	{r4, lr}
 1517              		.cfi_def_cfa_offset 8
 1518              		.cfi_offset 4, -8
 1519              		.cfi_offset 14, -4
 1520              	.LVL163:
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1521              		.loc 1 2190 0
 1522 0002 0024     		movs	r4, #0
 1523 0004 0AE0     		b	.L124
 1524              	.LVL164:
 1525              	.L125:
2192:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1526              		.loc 1 2192 0
 1527 0006 6301     		lsls	r3, r4, #5
 1528 0008 064A     		ldr	r2, .L126
 1529 000a D318     		adds	r3, r2, r3
 1530 000c 5968     		ldr	r1, [r3, #4]
 1531              	.LVL165:
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1532              		.loc 1 2198 0
 1533 000e 2000     		movs	r0, r4
 1534 0010 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1535              	.LVL166:
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
 1536              		.loc 1 2210 0
 1537 0014 2000     		movs	r0, r4
 1538 0016 FFF7FEFF 		bl	CapSense_DsUpdateWidgetCrc
 1539              	.LVL167:
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1540              		.loc 1 2190 0
 1541 001a 0134     		adds	r4, r4, #1
 1542              	.LVL168:
 1543              	.L124:
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1544              		.loc 1 2190 0 is_stmt 0 discriminator 1
 1545 001c 012C     		cmp	r4, #1
 1546 001e F2D9     		bls	.L125
2213:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1547              		.loc 1 2213 0 is_stmt 1
 1548              		@ sp needed
 1549              	.LVL169:
 1550 0020 10BD     		pop	{r4, pc}
 1551              	.L127:
 1552 0022 C046     		.align	2
 1553              	.L126:
 1554 0024 00000000 		.word	CapSense_dsFlash
 1555              		.cfi_endproc
 1556              	.LFE17:
 1557              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1558              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1559              		.align	2
 1560              		.global	CapSense_SsInitialize
 1561              		.code	16
 1562              		.thumb_func
 1563              		.type	CapSense_SsInitialize, %function
 1564              	CapSense_SsInitialize:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 81


 1565              	.LFB5:
 517:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1566              		.loc 1 517 0
 1567              		.cfi_startproc
 1568              		@ args = 0, pretend = 0, frame = 0
 1569              		@ frame_needed = 0, uses_anonymous_args = 0
 1570 0000 10B5     		push	{r4, lr}
 1571              		.cfi_def_cfa_offset 8
 1572              		.cfi_offset 4, -8
 1573              		.cfi_offset 14, -4
 1574              	.LVL170:
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 1575              		.loc 1 556 0
 1576 0002 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 1577              	.LVL171:
 561:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1578              		.loc 1 561 0
 1579 0006 FFF7FEFF 		bl	CapSense_SsSetIOsInDefaultState
 1580              	.LVL172:
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 1581              		.loc 1 565 0
 1582 000a 0020     		movs	r0, #0
 1583 000c FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1584              	.LVL173:
 578:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1585              		.loc 1 578 0
 1586 0010 0020     		movs	r0, #0
 1587              		@ sp needed
 1588 0012 10BD     		pop	{r4, pc}
 1589              		.cfi_endproc
 1590              	.LFE5:
 1591              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 1592              		.section	.text.CapSense_BistDischargeExtCapacitors,"ax",%progbits
 1593              		.align	2
 1594              		.global	CapSense_BistDischargeExtCapacitors
 1595              		.code	16
 1596              		.thumb_func
 1597              		.type	CapSense_BistDischargeExtCapacitors, %function
 1598              	CapSense_BistDischargeExtCapacitors:
 1599              	.LFB25:
2802:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2803:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2804:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2805:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2806:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
2807:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2808:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_BistDischargeExtCapacitors
2809:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2811:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2812:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors.
2813:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2814:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2815:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2816:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects 
2817:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2818:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 82


2819:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2820:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2821:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2822:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_BistDischargeExtCapacitors(void)
2823:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1600              		.loc 1 2823 0
 1601              		.cfi_startproc
 1602              		@ args = 0, pretend = 0, frame = 0
 1603              		@ frame_needed = 0, uses_anonymous_args = 0
 1604 0000 70B5     		push	{r4, r5, r6, lr}
 1605              		.cfi_def_cfa_offset 16
 1606              		.cfi_offset 4, -16
 1607              		.cfi_offset 5, -12
 1608              		.cfi_offset 6, -8
 1609              		.cfi_offset 14, -4
2824:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
2825:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8  interruptState;
2826:Generated_Source\PSoC4/CapSense_Sensing.c ****         
2827:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2828:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1610              		.loc 1 2828 0
 1611 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1612              	.LVL174:
2829:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1613              		.loc 1 2829 0
 1614 0006 134A     		ldr	r2, .L130
 1615 0008 1168     		ldr	r1, [r2]
 1616              	.LVL175:
2830:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1617              		.loc 1 2830 0
 1618 000a 134B     		ldr	r3, .L130+4
 1619 000c 0B40     		ands	r3, r1
 1620              	.LVL176:
2831:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1621              		.loc 1 2831 0
 1622 000e 1360     		str	r3, [r2]
2832:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1623              		.loc 1 2832 0
 1624 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1625              	.LVL177:
2833:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2834:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2835:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1626              		.loc 1 2835 0
 1627 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1628              	.LVL178:
2836:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1629              		.loc 1 2836 0
 1630 0018 104A     		ldr	r2, .L130+8
 1631 001a 1368     		ldr	r3, [r2]
 1632              	.LVL179:
2837:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1633              		.loc 1 2837 0
 1634 001c 0C21     		movs	r1, #12
 1635 001e 8B43     		bics	r3, r1
 1636              	.LVL180:
2838:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 83


 1637              		.loc 1 2838 0
 1638 0020 1360     		str	r3, [r2]
2839:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1639              		.loc 1 2839 0
 1640 0022 FFF7FEFF 		bl	CyExitCriticalSection
 1641              	.LVL181:
2840:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2841:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2842:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1642              		.loc 1 2842 0
 1643 0026 FFF7FEFF 		bl	CyEnterCriticalSection
 1644              	.LVL182:
2843:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1645              		.loc 1 2843 0
 1646 002a 0D4C     		ldr	r4, .L130+12
 1647 002c 2368     		ldr	r3, [r4]
 1648              	.LVL183:
2844:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1649              		.loc 1 2844 0
 1650 002e 0D4D     		ldr	r5, .L130+16
 1651 0030 2B40     		ands	r3, r5
 1652              	.LVL184:
2845:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
 1653              		.loc 1 2845 0
 1654 0032 D822     		movs	r2, #216
 1655 0034 1201     		lsls	r2, r2, #4
 1656 0036 1343     		orrs	r3, r2
 1657              	.LVL185:
2846:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1658              		.loc 1 2846 0
 1659 0038 2360     		str	r3, [r4]
2847:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1660              		.loc 1 2847 0
 1661 003a FFF7FEFF 		bl	CyExitCriticalSection
 1662              	.LVL186:
2848:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2849:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2850:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs(CapSense_EXT_CAP_DISCHARGE_TIME);
 1663              		.loc 1 2850 0
 1664 003e 0120     		movs	r0, #1
 1665 0040 FFF7FEFF 		bl	CyDelayUs
 1666              	.LVL187:
2851:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2852:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2853:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1667              		.loc 1 2853 0
 1668 0044 FFF7FEFF 		bl	CyEnterCriticalSection
 1669              	.LVL188:
2854:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1670              		.loc 1 2854 0
 1671 0048 2368     		ldr	r3, [r4]
 1672              	.LVL189:
2855:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1673              		.loc 1 2855 0
 1674 004a 1D40     		ands	r5, r3
 1675              	.LVL190:
2856:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 84


 1676              		.loc 1 2856 0
 1677 004c 2560     		str	r5, [r4]
2857:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1678              		.loc 1 2857 0
 1679 004e FFF7FEFF 		bl	CyExitCriticalSection
 1680              	.LVL191:
2858:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1681              		.loc 1 2858 0
 1682              		@ sp needed
 1683              	.LVL192:
 1684 0052 70BD     		pop	{r4, r5, r6, pc}
 1685              	.L131:
 1686              		.align	2
 1687              	.L130:
 1688 0054 00040240 		.word	1073873920
 1689 0058 FF0BFDBF 		.word	-1073935361
 1690 005c 00040440 		.word	1074004992
 1691 0060 08040440 		.word	1074005000
 1692 0064 3FF0FFFF 		.word	-4033
 1693              		.cfi_endproc
 1694              	.LFE25:
 1695              		.size	CapSense_BistDischargeExtCapacitors, .-CapSense_BistDischargeExtCapacitors
 1696              		.comm	CapSense_curSnsIOPtr,4,4
 1697              		.comm	CapSense_curRamSnsPtr,4,4
 1698              		.global	CapSense_requestScanAllWidget
 1699              		.global	CapSense_sensorIndex
 1700              		.global	CapSense_widgetIndex
 1701              		.global	CapSense_scanFreqIndex
 1702              		.global	CapSense_currentSenseMethod
 1703              		.section	.rodata
 1704              		.type	CapSense_scanFreqIndex, %object
 1705              		.size	CapSense_scanFreqIndex, 1
 1706              	CapSense_scanFreqIndex:
 1707 0000 00       		.space	1
 1708              		.bss
 1709              		.set	.LANCHOR0,. + 0
 1710              		.type	CapSense_currentSenseMethod, %object
 1711              		.size	CapSense_currentSenseMethod, 1
 1712              	CapSense_currentSenseMethod:
 1713 0000 00       		.space	1
 1714              		.type	CapSense_requestScanAllWidget, %object
 1715              		.size	CapSense_requestScanAllWidget, 1
 1716              	CapSense_requestScanAllWidget:
 1717 0001 00       		.space	1
 1718              		.type	CapSense_widgetIndex, %object
 1719              		.size	CapSense_widgetIndex, 1
 1720              	CapSense_widgetIndex:
 1721 0002 00       		.space	1
 1722              		.type	CapSense_sensorIndex, %object
 1723              		.size	CapSense_sensorIndex, 1
 1724              	CapSense_sensorIndex:
 1725 0003 00       		.space	1
 1726              		.text
 1727              	.Letext0:
 1728              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1729              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1730              		.file 4 "Generated_Source\\PSoC4\\CapSense_Structure.h"
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 85


 1731              		.file 5 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 1732              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 1733              		.file 7 "Generated_Source\\PSoC4\\CapSense_SelfTest.h"
 1734              		.file 8 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1735              		.section	.debug_info,"",%progbits
 1736              	.Ldebug_info0:
 1737 0000 38110000 		.4byte	0x1138
 1738 0004 0400     		.2byte	0x4
 1739 0006 00000000 		.4byte	.Ldebug_abbrev0
 1740 000a 04       		.byte	0x4
 1741 000b 01       		.uleb128 0x1
 1742 000c 73020000 		.4byte	.LASF194
 1743 0010 0C       		.byte	0xc
 1744 0011 20090000 		.4byte	.LASF195
 1745 0015 A20C0000 		.4byte	.LASF196
 1746 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1747 001d 00000000 		.4byte	0
 1748 0021 00000000 		.4byte	.Ldebug_line0
 1749 0025 02       		.uleb128 0x2
 1750 0026 01       		.byte	0x1
 1751 0027 06       		.byte	0x6
 1752 0028 660B0000 		.4byte	.LASF0
 1753 002c 02       		.uleb128 0x2
 1754 002d 01       		.byte	0x1
 1755 002e 08       		.byte	0x8
 1756 002f 440A0000 		.4byte	.LASF1
 1757 0033 02       		.uleb128 0x2
 1758 0034 02       		.byte	0x2
 1759 0035 05       		.byte	0x5
 1760 0036 0F080000 		.4byte	.LASF2
 1761 003a 02       		.uleb128 0x2
 1762 003b 02       		.byte	0x2
 1763 003c 07       		.byte	0x7
 1764 003d 8E0B0000 		.4byte	.LASF3
 1765 0041 02       		.uleb128 0x2
 1766 0042 04       		.byte	0x4
 1767 0043 05       		.byte	0x5
 1768 0044 47080000 		.4byte	.LASF4
 1769 0048 02       		.uleb128 0x2
 1770 0049 04       		.byte	0x4
 1771 004a 07       		.byte	0x7
 1772 004b B2090000 		.4byte	.LASF5
 1773 004f 02       		.uleb128 0x2
 1774 0050 08       		.byte	0x8
 1775 0051 05       		.byte	0x5
 1776 0052 C0050000 		.4byte	.LASF6
 1777 0056 02       		.uleb128 0x2
 1778 0057 08       		.byte	0x8
 1779 0058 07       		.byte	0x7
 1780 0059 2F030000 		.4byte	.LASF7
 1781 005d 03       		.uleb128 0x3
 1782 005e 04       		.byte	0x4
 1783 005f 05       		.byte	0x5
 1784 0060 696E7400 		.ascii	"int\000"
 1785 0064 02       		.uleb128 0x2
 1786 0065 04       		.byte	0x4
 1787 0066 07       		.byte	0x7
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 86


 1788 0067 EE000000 		.4byte	.LASF8
 1789 006b 04       		.uleb128 0x4
 1790 006c F40B0000 		.4byte	.LASF9
 1791 0070 02       		.byte	0x2
 1792 0071 E401     		.2byte	0x1e4
 1793 0073 2C000000 		.4byte	0x2c
 1794 0077 04       		.uleb128 0x4
 1795 0078 E9040000 		.4byte	.LASF10
 1796 007c 02       		.byte	0x2
 1797 007d E501     		.2byte	0x1e5
 1798 007f 3A000000 		.4byte	0x3a
 1799 0083 04       		.uleb128 0x4
 1800 0084 D3060000 		.4byte	.LASF11
 1801 0088 02       		.byte	0x2
 1802 0089 E601     		.2byte	0x1e6
 1803 008b 48000000 		.4byte	0x48
 1804 008f 02       		.uleb128 0x2
 1805 0090 04       		.byte	0x4
 1806 0091 04       		.byte	0x4
 1807 0092 4C020000 		.4byte	.LASF12
 1808 0096 02       		.uleb128 0x2
 1809 0097 08       		.byte	0x8
 1810 0098 04       		.byte	0x4
 1811 0099 FA0B0000 		.4byte	.LASF13
 1812 009d 02       		.uleb128 0x2
 1813 009e 01       		.byte	0x1
 1814 009f 08       		.byte	0x8
 1815 00a0 80040000 		.4byte	.LASF14
 1816 00a4 04       		.uleb128 0x4
 1817 00a5 3B0A0000 		.4byte	.LASF15
 1818 00a9 02       		.byte	0x2
 1819 00aa 8602     		.2byte	0x286
 1820 00ac 48000000 		.4byte	0x48
 1821 00b0 05       		.uleb128 0x5
 1822 00b1 6B000000 		.4byte	0x6b
 1823 00b5 04       		.uleb128 0x4
 1824 00b6 86070000 		.4byte	.LASF16
 1825 00ba 02       		.byte	0x2
 1826 00bb 9002     		.2byte	0x290
 1827 00bd C1000000 		.4byte	0xc1
 1828 00c1 05       		.uleb128 0x5
 1829 00c2 83000000 		.4byte	0x83
 1830 00c6 04       		.uleb128 0x4
 1831 00c7 A1060000 		.4byte	.LASF17
 1832 00cb 02       		.byte	0x2
 1833 00cc A002     		.2byte	0x2a0
 1834 00ce D2000000 		.4byte	0xd2
 1835 00d2 06       		.uleb128 0x6
 1836 00d3 04       		.byte	0x4
 1837 00d4 D8000000 		.4byte	0xd8
 1838 00d8 07       		.uleb128 0x7
 1839 00d9 04       		.uleb128 0x4
 1840 00da 860A0000 		.4byte	.LASF18
 1841 00de 03       		.byte	0x3
 1842 00df 2101     		.2byte	0x121
 1843 00e1 77000000 		.4byte	0x77
 1844 00e5 04       		.uleb128 0x4
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 87


 1845 00e6 5D050000 		.4byte	.LASF19
 1846 00ea 03       		.byte	0x3
 1847 00eb 2501     		.2byte	0x125
 1848 00ed 6B000000 		.4byte	0x6b
 1849 00f1 08       		.uleb128 0x8
 1850 00f2 01       		.byte	0x1
 1851 00f3 2C000000 		.4byte	0x2c
 1852 00f7 04       		.byte	0x4
 1853 00f8 70       		.byte	0x70
 1854 00f9 1C010000 		.4byte	0x11c
 1855 00fd 09       		.uleb128 0x9
 1856 00fe D9000000 		.4byte	.LASF20
 1857 0102 00       		.byte	0
 1858 0103 09       		.uleb128 0x9
 1859 0104 61090000 		.4byte	.LASF21
 1860 0108 01       		.byte	0x1
 1861 0109 09       		.uleb128 0x9
 1862 010a 69080000 		.4byte	.LASF22
 1863 010e 02       		.byte	0x2
 1864 010f 09       		.uleb128 0x9
 1865 0110 B80A0000 		.4byte	.LASF23
 1866 0114 03       		.byte	0x3
 1867 0115 09       		.uleb128 0x9
 1868 0116 5E070000 		.4byte	.LASF24
 1869 011a 04       		.byte	0x4
 1870 011b 00       		.byte	0
 1871 011c 0A       		.uleb128 0xa
 1872 011d 96050000 		.4byte	.LASF25
 1873 0121 04       		.byte	0x4
 1874 0122 76       		.byte	0x76
 1875 0123 F1000000 		.4byte	0xf1
 1876 0127 0B       		.uleb128 0xb
 1877 0128 10       		.byte	0x10
 1878 0129 04       		.byte	0x4
 1879 012a 8E       		.byte	0x8e
 1880 012b B4010000 		.4byte	0x1b4
 1881 012f 0C       		.uleb128 0xc
 1882 0130 63726300 		.ascii	"crc\000"
 1883 0134 04       		.byte	0x4
 1884 0135 93       		.byte	0x93
 1885 0136 77000000 		.4byte	0x77
 1886 013a 00       		.byte	0
 1887 013b 0D       		.uleb128 0xd
 1888 013c 32050000 		.4byte	.LASF26
 1889 0140 04       		.byte	0x4
 1890 0141 98       		.byte	0x98
 1891 0142 77000000 		.4byte	0x77
 1892 0146 02       		.byte	0x2
 1893 0147 0D       		.uleb128 0xd
 1894 0148 0C0A0000 		.4byte	.LASF27
 1895 014c 04       		.byte	0x4
 1896 014d 9D       		.byte	0x9d
 1897 014e D9000000 		.4byte	0xd9
 1898 0152 04       		.byte	0x4
 1899 0153 0D       		.uleb128 0xd
 1900 0154 78040000 		.4byte	.LASF28
 1901 0158 04       		.byte	0x4
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 88


 1902 0159 A2       		.byte	0xa2
 1903 015a 6B000000 		.4byte	0x6b
 1904 015e 06       		.byte	0x6
 1905 015f 0D       		.uleb128 0xd
 1906 0160 8D060000 		.4byte	.LASF29
 1907 0164 04       		.byte	0x4
 1908 0165 A7       		.byte	0xa7
 1909 0166 6B000000 		.4byte	0x6b
 1910 016a 07       		.byte	0x7
 1911 016b 0D       		.uleb128 0xd
 1912 016c 15040000 		.4byte	.LASF30
 1913 0170 04       		.byte	0x4
 1914 0171 AD       		.byte	0xad
 1915 0172 6B000000 		.4byte	0x6b
 1916 0176 08       		.byte	0x8
 1917 0177 0D       		.uleb128 0xd
 1918 0178 EF050000 		.4byte	.LASF31
 1919 017c 04       		.byte	0x4
 1920 017d B3       		.byte	0xb3
 1921 017e 6B000000 		.4byte	0x6b
 1922 0182 09       		.byte	0x9
 1923 0183 0D       		.uleb128 0xd
 1924 0184 39040000 		.4byte	.LASF32
 1925 0188 04       		.byte	0x4
 1926 0189 BA       		.byte	0xba
 1927 018a E5000000 		.4byte	0xe5
 1928 018e 0A       		.byte	0xa
 1929 018f 0D       		.uleb128 0xd
 1930 0190 D3090000 		.4byte	.LASF33
 1931 0194 04       		.byte	0x4
 1932 0195 C1       		.byte	0xc1
 1933 0196 B4010000 		.4byte	0x1b4
 1934 019a 0B       		.byte	0xb
 1935 019b 0D       		.uleb128 0xd
 1936 019c 150B0000 		.4byte	.LASF34
 1937 01a0 04       		.byte	0x4
 1938 01a1 C9       		.byte	0xc9
 1939 01a2 77000000 		.4byte	0x77
 1940 01a6 0C       		.byte	0xc
 1941 01a7 0D       		.uleb128 0xd
 1942 01a8 CC070000 		.4byte	.LASF35
 1943 01ac 04       		.byte	0x4
 1944 01ad CE       		.byte	0xce
 1945 01ae 6B000000 		.4byte	0x6b
 1946 01b2 0E       		.byte	0xe
 1947 01b3 00       		.byte	0
 1948 01b4 0E       		.uleb128 0xe
 1949 01b5 6B000000 		.4byte	0x6b
 1950 01b9 C4010000 		.4byte	0x1c4
 1951 01bd 0F       		.uleb128 0xf
 1952 01be C4010000 		.4byte	0x1c4
 1953 01c2 00       		.byte	0
 1954 01c3 00       		.byte	0
 1955 01c4 02       		.uleb128 0x2
 1956 01c5 04       		.byte	0x4
 1957 01c6 07       		.byte	0x7
 1958 01c7 A1090000 		.4byte	.LASF36
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 89


 1959 01cb 0A       		.uleb128 0xa
 1960 01cc AE060000 		.4byte	.LASF37
 1961 01d0 04       		.byte	0x4
 1962 01d1 CF       		.byte	0xcf
 1963 01d2 27010000 		.4byte	0x127
 1964 01d6 0B       		.uleb128 0xb
 1965 01d7 10       		.byte	0x10
 1966 01d8 04       		.byte	0x4
 1967 01d9 D4       		.byte	0xd4
 1968 01da 67020000 		.4byte	0x267
 1969 01de 0C       		.uleb128 0xc
 1970 01df 63726300 		.ascii	"crc\000"
 1971 01e3 04       		.byte	0x4
 1972 01e4 D9       		.byte	0xd9
 1973 01e5 77000000 		.4byte	0x77
 1974 01e9 00       		.byte	0
 1975 01ea 0D       		.uleb128 0xd
 1976 01eb 32050000 		.4byte	.LASF26
 1977 01ef 04       		.byte	0x4
 1978 01f0 DE       		.byte	0xde
 1979 01f1 77000000 		.4byte	0x77
 1980 01f5 02       		.byte	0x2
 1981 01f6 0D       		.uleb128 0xd
 1982 01f7 0C0A0000 		.4byte	.LASF27
 1983 01fb 04       		.byte	0x4
 1984 01fc E3       		.byte	0xe3
 1985 01fd D9000000 		.4byte	0xd9
 1986 0201 04       		.byte	0x4
 1987 0202 0D       		.uleb128 0xd
 1988 0203 78040000 		.4byte	.LASF28
 1989 0207 04       		.byte	0x4
 1990 0208 E8       		.byte	0xe8
 1991 0209 6B000000 		.4byte	0x6b
 1992 020d 06       		.byte	0x6
 1993 020e 0D       		.uleb128 0xd
 1994 020f 8D060000 		.4byte	.LASF29
 1995 0213 04       		.byte	0x4
 1996 0214 ED       		.byte	0xed
 1997 0215 6B000000 		.4byte	0x6b
 1998 0219 07       		.byte	0x7
 1999 021a 0D       		.uleb128 0xd
 2000 021b 15040000 		.4byte	.LASF30
 2001 021f 04       		.byte	0x4
 2002 0220 F3       		.byte	0xf3
 2003 0221 6B000000 		.4byte	0x6b
 2004 0225 08       		.byte	0x8
 2005 0226 0D       		.uleb128 0xd
 2006 0227 EF050000 		.4byte	.LASF31
 2007 022b 04       		.byte	0x4
 2008 022c F9       		.byte	0xf9
 2009 022d 6B000000 		.4byte	0x6b
 2010 0231 09       		.byte	0x9
 2011 0232 10       		.uleb128 0x10
 2012 0233 39040000 		.4byte	.LASF32
 2013 0237 04       		.byte	0x4
 2014 0238 0001     		.2byte	0x100
 2015 023a E5000000 		.4byte	0xe5
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 90


 2016 023e 0A       		.byte	0xa
 2017 023f 10       		.uleb128 0x10
 2018 0240 D3090000 		.4byte	.LASF33
 2019 0244 04       		.byte	0x4
 2020 0245 0701     		.2byte	0x107
 2021 0247 B4010000 		.4byte	0x1b4
 2022 024b 0B       		.byte	0xb
 2023 024c 10       		.uleb128 0x10
 2024 024d 150B0000 		.4byte	.LASF34
 2025 0251 04       		.byte	0x4
 2026 0252 0F01     		.2byte	0x10f
 2027 0254 77000000 		.4byte	0x77
 2028 0258 0C       		.byte	0xc
 2029 0259 10       		.uleb128 0x10
 2030 025a CC070000 		.4byte	.LASF35
 2031 025e 04       		.byte	0x4
 2032 025f 1401     		.2byte	0x114
 2033 0261 6B000000 		.4byte	0x6b
 2034 0265 0E       		.byte	0xe
 2035 0266 00       		.byte	0
 2036 0267 04       		.uleb128 0x4
 2037 0268 1D0A0000 		.4byte	.LASF38
 2038 026c 04       		.byte	0x4
 2039 026d 1501     		.2byte	0x115
 2040 026f D6010000 		.4byte	0x1d6
 2041 0273 11       		.uleb128 0x11
 2042 0274 20       		.byte	0x20
 2043 0275 04       		.byte	0x4
 2044 0276 1B01     		.2byte	0x11b
 2045 0278 97020000 		.4byte	0x297
 2046 027c 10       		.uleb128 0x10
 2047 027d D1080000 		.4byte	.LASF39
 2048 0281 04       		.byte	0x4
 2049 0282 2001     		.2byte	0x120
 2050 0284 67020000 		.4byte	0x267
 2051 0288 00       		.byte	0
 2052 0289 10       		.uleb128 0x10
 2053 028a 0F0B0000 		.4byte	.LASF40
 2054 028e 04       		.byte	0x4
 2055 028f 2501     		.2byte	0x125
 2056 0291 67020000 		.4byte	0x267
 2057 0295 10       		.byte	0x10
 2058 0296 00       		.byte	0
 2059 0297 04       		.uleb128 0x4
 2060 0298 C0010000 		.4byte	.LASF41
 2061 029c 04       		.byte	0x4
 2062 029d 2601     		.2byte	0x126
 2063 029f 73020000 		.4byte	0x273
 2064 02a3 11       		.uleb128 0x11
 2065 02a4 0C       		.byte	0xc
 2066 02a5 04       		.byte	0x4
 2067 02a6 2C01     		.2byte	0x12c
 2068 02a8 08030000 		.4byte	0x308
 2069 02ac 12       		.uleb128 0x12
 2070 02ad 72617700 		.ascii	"raw\000"
 2071 02b1 04       		.byte	0x4
 2072 02b2 3101     		.2byte	0x131
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 91


 2073 02b4 08030000 		.4byte	0x308
 2074 02b8 00       		.byte	0
 2075 02b9 10       		.uleb128 0x10
 2076 02ba 890B0000 		.4byte	.LASF42
 2077 02be 04       		.byte	0x4
 2078 02bf 3601     		.2byte	0x136
 2079 02c1 08030000 		.4byte	0x308
 2080 02c5 02       		.byte	0x2
 2081 02c6 10       		.uleb128 0x10
 2082 02c7 DB0A0000 		.4byte	.LASF43
 2083 02cb 04       		.byte	0x4
 2084 02cc 3B01     		.2byte	0x13b
 2085 02ce 08030000 		.4byte	0x308
 2086 02d2 04       		.byte	0x4
 2087 02d3 10       		.uleb128 0x10
 2088 02d4 150A0000 		.4byte	.LASF44
 2089 02d8 04       		.byte	0x4
 2090 02d9 4101     		.2byte	0x141
 2091 02db B4010000 		.4byte	0x1b4
 2092 02df 06       		.byte	0x6
 2093 02e0 10       		.uleb128 0x10
 2094 02e1 5B080000 		.4byte	.LASF45
 2095 02e5 04       		.byte	0x4
 2096 02e6 4601     		.2byte	0x146
 2097 02e8 D9000000 		.4byte	0xd9
 2098 02ec 08       		.byte	0x8
 2099 02ed 10       		.uleb128 0x10
 2100 02ee 010C0000 		.4byte	.LASF46
 2101 02f2 04       		.byte	0x4
 2102 02f3 4B01     		.2byte	0x14b
 2103 02f5 18030000 		.4byte	0x318
 2104 02f9 0A       		.byte	0xa
 2105 02fa 10       		.uleb128 0x10
 2106 02fb B1050000 		.4byte	.LASF47
 2107 02ff 04       		.byte	0x4
 2108 0300 5001     		.2byte	0x150
 2109 0302 B4010000 		.4byte	0x1b4
 2110 0306 0B       		.byte	0xb
 2111 0307 00       		.byte	0
 2112 0308 0E       		.uleb128 0xe
 2113 0309 77000000 		.4byte	0x77
 2114 030d 18030000 		.4byte	0x318
 2115 0311 0F       		.uleb128 0xf
 2116 0312 C4010000 		.4byte	0x1c4
 2117 0316 00       		.byte	0
 2118 0317 00       		.byte	0
 2119 0318 0E       		.uleb128 0xe
 2120 0319 E5000000 		.4byte	0xe5
 2121 031d 28030000 		.4byte	0x328
 2122 0321 0F       		.uleb128 0xf
 2123 0322 C4010000 		.4byte	0x1c4
 2124 0326 00       		.byte	0
 2125 0327 00       		.byte	0
 2126 0328 04       		.uleb128 0x4
 2127 0329 D0030000 		.4byte	.LASF48
 2128 032d 04       		.byte	0x4
 2129 032e 5101     		.2byte	0x151
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 92


 2130 0330 A3020000 		.4byte	0x2a3
 2131 0334 11       		.uleb128 0x11
 2132 0335 18       		.byte	0x18
 2133 0336 04       		.byte	0x4
 2134 0337 5701     		.2byte	0x157
 2135 0339 58030000 		.4byte	0x358
 2136 033d 10       		.uleb128 0x10
 2137 033e D1080000 		.4byte	.LASF39
 2138 0342 04       		.byte	0x4
 2139 0343 5C01     		.2byte	0x15c
 2140 0345 58030000 		.4byte	0x358
 2141 0349 00       		.byte	0
 2142 034a 10       		.uleb128 0x10
 2143 034b 0F0B0000 		.4byte	.LASF40
 2144 034f 04       		.byte	0x4
 2145 0350 6101     		.2byte	0x161
 2146 0352 58030000 		.4byte	0x358
 2147 0356 0C       		.byte	0xc
 2148 0357 00       		.byte	0
 2149 0358 0E       		.uleb128 0xe
 2150 0359 28030000 		.4byte	0x328
 2151 035d 68030000 		.4byte	0x368
 2152 0361 0F       		.uleb128 0xf
 2153 0362 C4010000 		.4byte	0x1c4
 2154 0366 00       		.byte	0
 2155 0367 00       		.byte	0
 2156 0368 04       		.uleb128 0x4
 2157 0369 EE0C0000 		.4byte	.LASF49
 2158 036d 04       		.byte	0x4
 2159 036e 6201     		.2byte	0x162
 2160 0370 34030000 		.4byte	0x334
 2161 0374 11       		.uleb128 0x11
 2162 0375 18       		.byte	0x18
 2163 0376 04       		.byte	0x4
 2164 0377 6801     		.2byte	0x168
 2165 0379 27040000 		.4byte	0x427
 2166 037d 10       		.uleb128 0x10
 2167 037e 44040000 		.4byte	.LASF50
 2168 0382 04       		.byte	0x4
 2169 0383 6D01     		.2byte	0x16d
 2170 0385 83000000 		.4byte	0x83
 2171 0389 00       		.byte	0
 2172 038a 10       		.uleb128 0x10
 2173 038b CA080000 		.4byte	.LASF51
 2174 038f 04       		.byte	0x4
 2175 0390 7201     		.2byte	0x172
 2176 0392 27040000 		.4byte	0x427
 2177 0396 04       		.byte	0x4
 2178 0397 10       		.uleb128 0x10
 2179 0398 14090000 		.4byte	.LASF52
 2180 039c 04       		.byte	0x4
 2181 039d 7701     		.2byte	0x177
 2182 039f 77000000 		.4byte	0x77
 2183 03a3 08       		.byte	0x8
 2184 03a4 10       		.uleb128 0x10
 2185 03a5 29070000 		.4byte	.LASF53
 2186 03a9 04       		.byte	0x4
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 93


 2187 03aa 7C01     		.2byte	0x17c
 2188 03ac 77000000 		.4byte	0x77
 2189 03b0 0A       		.byte	0xa
 2190 03b1 10       		.uleb128 0x10
 2191 03b2 DE040000 		.4byte	.LASF54
 2192 03b6 04       		.byte	0x4
 2193 03b7 8101     		.2byte	0x181
 2194 03b9 77000000 		.4byte	0x77
 2195 03bd 0C       		.byte	0xc
 2196 03be 10       		.uleb128 0x10
 2197 03bf F0090000 		.4byte	.LASF55
 2198 03c3 04       		.byte	0x4
 2199 03c4 8701     		.2byte	0x187
 2200 03c6 77000000 		.4byte	0x77
 2201 03ca 0E       		.byte	0xe
 2202 03cb 10       		.uleb128 0x10
 2203 03cc D7080000 		.4byte	.LASF56
 2204 03d0 04       		.byte	0x4
 2205 03d1 8D01     		.2byte	0x18d
 2206 03d3 6B000000 		.4byte	0x6b
 2207 03d7 10       		.byte	0x10
 2208 03d8 10       		.uleb128 0x10
 2209 03d9 BC080000 		.4byte	.LASF57
 2210 03dd 04       		.byte	0x4
 2211 03de 9201     		.2byte	0x192
 2212 03e0 6B000000 		.4byte	0x6b
 2213 03e4 11       		.byte	0x11
 2214 03e5 10       		.uleb128 0x10
 2215 03e6 FF040000 		.4byte	.LASF58
 2216 03ea 04       		.byte	0x4
 2217 03eb 9701     		.2byte	0x197
 2218 03ed 6B000000 		.4byte	0x6b
 2219 03f1 12       		.byte	0x12
 2220 03f2 10       		.uleb128 0x10
 2221 03f3 B8030000 		.4byte	.LASF59
 2222 03f7 04       		.byte	0x4
 2223 03f8 9C01     		.2byte	0x19c
 2224 03fa 6B000000 		.4byte	0x6b
 2225 03fe 13       		.byte	0x13
 2226 03ff 10       		.uleb128 0x10
 2227 0400 80060000 		.4byte	.LASF60
 2228 0404 04       		.byte	0x4
 2229 0405 A101     		.2byte	0x1a1
 2230 0407 6B000000 		.4byte	0x6b
 2231 040b 14       		.byte	0x14
 2232 040c 10       		.uleb128 0x10
 2233 040d A10B0000 		.4byte	.LASF61
 2234 0411 04       		.byte	0x4
 2235 0412 A601     		.2byte	0x1a6
 2236 0414 6B000000 		.4byte	0x6b
 2237 0418 15       		.byte	0x15
 2238 0419 10       		.uleb128 0x10
 2239 041a 9E0A0000 		.4byte	.LASF62
 2240 041e 04       		.byte	0x4
 2241 041f AB01     		.2byte	0x1ab
 2242 0421 6B000000 		.4byte	0x6b
 2243 0425 16       		.byte	0x16
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 94


 2244 0426 00       		.byte	0
 2245 0427 0E       		.uleb128 0xe
 2246 0428 77000000 		.4byte	0x77
 2247 042c 37040000 		.4byte	0x437
 2248 0430 0F       		.uleb128 0xf
 2249 0431 C4010000 		.4byte	0x1c4
 2250 0435 01       		.byte	0x1
 2251 0436 00       		.byte	0
 2252 0437 04       		.uleb128 0x4
 2253 0438 C0040000 		.4byte	.LASF63
 2254 043c 04       		.byte	0x4
 2255 043d AC01     		.2byte	0x1ac
 2256 043f 74030000 		.4byte	0x374
 2257 0443 11       		.uleb128 0x11
 2258 0444 02       		.byte	0x2
 2259 0445 04       		.byte	0x4
 2260 0446 B201     		.2byte	0x1b2
 2261 0448 67040000 		.4byte	0x467
 2262 044c 10       		.uleb128 0x10
 2263 044d D1080000 		.4byte	.LASF39
 2264 0451 04       		.byte	0x4
 2265 0452 B701     		.2byte	0x1b7
 2266 0454 B4010000 		.4byte	0x1b4
 2267 0458 00       		.byte	0
 2268 0459 10       		.uleb128 0x10
 2269 045a 0F0B0000 		.4byte	.LASF40
 2270 045e 04       		.byte	0x4
 2271 045f BB01     		.2byte	0x1bb
 2272 0461 B4010000 		.4byte	0x1b4
 2273 0465 01       		.byte	0x1
 2274 0466 00       		.byte	0
 2275 0467 04       		.uleb128 0x4
 2276 0468 6D010000 		.4byte	.LASF64
 2277 046c 04       		.byte	0x4
 2278 046d BC01     		.2byte	0x1bc
 2279 046f 43040000 		.4byte	0x443
 2280 0473 11       		.uleb128 0x11
 2281 0474 7C       		.byte	0x7c
 2282 0475 04       		.byte	0x4
 2283 0476 C101     		.2byte	0x1c1
 2284 0478 8E050000 		.4byte	0x58e
 2285 047c 10       		.uleb128 0x10
 2286 047d 9F070000 		.4byte	.LASF65
 2287 0481 04       		.byte	0x4
 2288 0482 C801     		.2byte	0x1c8
 2289 0484 77000000 		.4byte	0x77
 2290 0488 00       		.byte	0
 2291 0489 10       		.uleb128 0x10
 2292 048a 410C0000 		.4byte	.LASF66
 2293 048e 04       		.byte	0x4
 2294 048f CD01     		.2byte	0x1cd
 2295 0491 77000000 		.4byte	0x77
 2296 0495 02       		.byte	0x2
 2297 0496 10       		.uleb128 0x10
 2298 0497 07010000 		.4byte	.LASF67
 2299 049b 04       		.byte	0x4
 2300 049c D201     		.2byte	0x1d2
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 95


 2301 049e 77000000 		.4byte	0x77
 2302 04a2 04       		.byte	0x4
 2303 04a3 10       		.uleb128 0x10
 2304 04a4 60080000 		.4byte	.LASF68
 2305 04a8 04       		.byte	0x4
 2306 04a9 D801     		.2byte	0x1d8
 2307 04ab 77000000 		.4byte	0x77
 2308 04af 06       		.byte	0x6
 2309 04b0 10       		.uleb128 0x10
 2310 04b1 FB000000 		.4byte	.LASF69
 2311 04b5 04       		.byte	0x4
 2312 04b6 DD01     		.2byte	0x1dd
 2313 04b8 77000000 		.4byte	0x77
 2314 04bc 08       		.byte	0x8
 2315 04bd 10       		.uleb128 0x10
 2316 04be 3D050000 		.4byte	.LASF70
 2317 04c2 04       		.byte	0x4
 2318 04c3 E201     		.2byte	0x1e2
 2319 04c5 C1000000 		.4byte	0xc1
 2320 04c9 0C       		.byte	0xc
 2321 04ca 10       		.uleb128 0x10
 2322 04cb 50080000 		.4byte	.LASF71
 2323 04cf 04       		.byte	0x4
 2324 04d0 E801     		.2byte	0x1e8
 2325 04d2 8E050000 		.4byte	0x58e
 2326 04d6 10       		.byte	0x10
 2327 04d7 10       		.uleb128 0x10
 2328 04d8 27020000 		.4byte	.LASF72
 2329 04dc 04       		.byte	0x4
 2330 04dd EE01     		.2byte	0x1ee
 2331 04df 8E050000 		.4byte	0x58e
 2332 04e3 14       		.byte	0x14
 2333 04e4 10       		.uleb128 0x10
 2334 04e5 E1080000 		.4byte	.LASF73
 2335 04e9 04       		.byte	0x4
 2336 04ea F501     		.2byte	0x1f5
 2337 04ec 8E050000 		.4byte	0x58e
 2338 04f0 18       		.byte	0x18
 2339 04f1 10       		.uleb128 0x10
 2340 04f2 B3070000 		.4byte	.LASF74
 2341 04f6 04       		.byte	0x4
 2342 04f7 0502     		.2byte	0x205
 2343 04f9 9E050000 		.4byte	0x59e
 2344 04fd 1C       		.byte	0x1c
 2345 04fe 10       		.uleb128 0x10
 2346 04ff 96060000 		.4byte	.LASF75
 2347 0503 04       		.byte	0x4
 2348 0504 0B02     		.2byte	0x20b
 2349 0506 77000000 		.4byte	0x77
 2350 050a 1E       		.byte	0x1e
 2351 050b 10       		.uleb128 0x10
 2352 050c C6030000 		.4byte	.LASF76
 2353 0510 04       		.byte	0x4
 2354 0511 1002     		.2byte	0x210
 2355 0513 6B000000 		.4byte	0x6b
 2356 0517 20       		.byte	0x20
 2357 0518 10       		.uleb128 0x10
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 96


 2358 0519 ED0B0000 		.4byte	.LASF77
 2359 051d 04       		.byte	0x4
 2360 051e 1502     		.2byte	0x215
 2361 0520 77000000 		.4byte	0x77
 2362 0524 22       		.byte	0x22
 2363 0525 10       		.uleb128 0x10
 2364 0526 0A060000 		.4byte	.LASF78
 2365 052a 04       		.byte	0x4
 2366 052b 1A02     		.2byte	0x21a
 2367 052d 97020000 		.4byte	0x297
 2368 0531 24       		.byte	0x24
 2369 0532 10       		.uleb128 0x10
 2370 0533 27030000 		.4byte	.LASF79
 2371 0537 04       		.byte	0x4
 2372 0538 1F02     		.2byte	0x21f
 2373 053a 68030000 		.4byte	0x368
 2374 053e 44       		.byte	0x44
 2375 053f 10       		.uleb128 0x10
 2376 0540 20070000 		.4byte	.LASF80
 2377 0544 04       		.byte	0x4
 2378 0545 2402     		.2byte	0x224
 2379 0547 37040000 		.4byte	0x437
 2380 054b 5C       		.byte	0x5c
 2381 054c 10       		.uleb128 0x10
 2382 054d 0F040000 		.4byte	.LASF81
 2383 0551 04       		.byte	0x4
 2384 0552 2902     		.2byte	0x229
 2385 0554 67040000 		.4byte	0x467
 2386 0558 74       		.byte	0x74
 2387 0559 10       		.uleb128 0x10
 2388 055a C9000000 		.4byte	.LASF82
 2389 055e 04       		.byte	0x4
 2390 055f 2E02     		.2byte	0x22e
 2391 0561 6B000000 		.4byte	0x6b
 2392 0565 76       		.byte	0x76
 2393 0566 10       		.uleb128 0x10
 2394 0567 74030000 		.4byte	.LASF83
 2395 056b 04       		.byte	0x4
 2396 056c 3302     		.2byte	0x233
 2397 056e 6B000000 		.4byte	0x6b
 2398 0572 77       		.byte	0x77
 2399 0573 10       		.uleb128 0x10
 2400 0574 8C070000 		.4byte	.LASF84
 2401 0578 04       		.byte	0x4
 2402 0579 3802     		.2byte	0x238
 2403 057b 77000000 		.4byte	0x77
 2404 057f 78       		.byte	0x78
 2405 0580 10       		.uleb128 0x10
 2406 0581 70060000 		.4byte	.LASF85
 2407 0585 04       		.byte	0x4
 2408 0586 3D02     		.2byte	0x23d
 2409 0588 08030000 		.4byte	0x308
 2410 058c 7A       		.byte	0x7a
 2411 058d 00       		.byte	0
 2412 058e 0E       		.uleb128 0xe
 2413 058f 83000000 		.4byte	0x83
 2414 0593 9E050000 		.4byte	0x59e
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 97


 2415 0597 0F       		.uleb128 0xf
 2416 0598 C4010000 		.4byte	0x1c4
 2417 059c 00       		.byte	0
 2418 059d 00       		.byte	0
 2419 059e 0E       		.uleb128 0xe
 2420 059f 6B000000 		.4byte	0x6b
 2421 05a3 AE050000 		.4byte	0x5ae
 2422 05a7 0F       		.uleb128 0xf
 2423 05a8 C4010000 		.4byte	0x1c4
 2424 05ac 01       		.byte	0x1
 2425 05ad 00       		.byte	0
 2426 05ae 04       		.uleb128 0x4
 2427 05af 19080000 		.4byte	.LASF86
 2428 05b3 04       		.byte	0x4
 2429 05b4 3E02     		.2byte	0x23e
 2430 05b6 73040000 		.4byte	0x473
 2431 05ba 11       		.uleb128 0x11
 2432 05bb 20       		.byte	0x20
 2433 05bc 04       		.byte	0x4
 2434 05bd 4402     		.2byte	0x244
 2435 05bf 46060000 		.4byte	0x646
 2436 05c3 10       		.uleb128 0x10
 2437 05c4 CA060000 		.4byte	.LASF87
 2438 05c8 04       		.byte	0x4
 2439 05c9 4902     		.2byte	0x249
 2440 05cb 46060000 		.4byte	0x646
 2441 05cf 00       		.byte	0
 2442 05d0 10       		.uleb128 0x10
 2443 05d1 BA050000 		.4byte	.LASF88
 2444 05d5 04       		.byte	0x4
 2445 05d6 4E02     		.2byte	0x24e
 2446 05d8 46060000 		.4byte	0x646
 2447 05dc 04       		.byte	0x4
 2448 05dd 10       		.uleb128 0x10
 2449 05de 32010000 		.4byte	.LASF89
 2450 05e2 04       		.byte	0x4
 2451 05e3 5302     		.2byte	0x253
 2452 05e5 46060000 		.4byte	0x646
 2453 05e9 08       		.byte	0x8
 2454 05ea 10       		.uleb128 0x10
 2455 05eb 02040000 		.4byte	.LASF90
 2456 05ef 04       		.byte	0x4
 2457 05f0 5802     		.2byte	0x258
 2458 05f2 46060000 		.4byte	0x646
 2459 05f6 0C       		.byte	0xc
 2460 05f7 10       		.uleb128 0x10
 2461 05f8 85080000 		.4byte	.LASF91
 2462 05fc 04       		.byte	0x4
 2463 05fd 5D02     		.2byte	0x25d
 2464 05ff 46060000 		.4byte	0x646
 2465 0603 10       		.byte	0x10
 2466 0604 10       		.uleb128 0x10
 2467 0605 050B0000 		.4byte	.LASF92
 2468 0609 04       		.byte	0x4
 2469 060a 6202     		.2byte	0x262
 2470 060c 83000000 		.4byte	0x83
 2471 0610 14       		.byte	0x14
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 98


 2472 0611 10       		.uleb128 0x10
 2473 0612 FF060000 		.4byte	.LASF93
 2474 0616 04       		.byte	0x4
 2475 0617 6702     		.2byte	0x267
 2476 0619 83000000 		.4byte	0x83
 2477 061d 18       		.byte	0x18
 2478 061e 10       		.uleb128 0x10
 2479 061f B5010000 		.4byte	.LASF94
 2480 0623 04       		.byte	0x4
 2481 0624 6C02     		.2byte	0x26c
 2482 0626 6B000000 		.4byte	0x6b
 2483 062a 1C       		.byte	0x1c
 2484 062b 10       		.uleb128 0x10
 2485 062c AA090000 		.4byte	.LASF95
 2486 0630 04       		.byte	0x4
 2487 0631 7102     		.2byte	0x271
 2488 0633 6B000000 		.4byte	0x6b
 2489 0637 1D       		.byte	0x1d
 2490 0638 10       		.uleb128 0x10
 2491 0639 52020000 		.4byte	.LASF96
 2492 063d 04       		.byte	0x4
 2493 063e 7602     		.2byte	0x276
 2494 0640 6B000000 		.4byte	0x6b
 2495 0644 1E       		.byte	0x1e
 2496 0645 00       		.byte	0
 2497 0646 06       		.uleb128 0x6
 2498 0647 04       		.byte	0x4
 2499 0648 B5000000 		.4byte	0xb5
 2500 064c 04       		.uleb128 0x4
 2501 064d 5B030000 		.4byte	.LASF97
 2502 0651 04       		.byte	0x4
 2503 0652 7702     		.2byte	0x277
 2504 0654 BA050000 		.4byte	0x5ba
 2505 0658 11       		.uleb128 0x11
 2506 0659 20       		.byte	0x20
 2507 065a 04       		.byte	0x4
 2508 065b AA02     		.2byte	0x2aa
 2509 065d E4060000 		.4byte	0x6e4
 2510 0661 10       		.uleb128 0x10
 2511 0662 C90B0000 		.4byte	.LASF98
 2512 0666 04       		.byte	0x4
 2513 0667 B302     		.2byte	0x2b3
 2514 0669 E4060000 		.4byte	0x6e4
 2515 066d 00       		.byte	0
 2516 066e 10       		.uleb128 0x10
 2517 066f 7A0A0000 		.4byte	.LASF99
 2518 0673 04       		.byte	0x4
 2519 0674 BA02     		.2byte	0x2ba
 2520 0676 EB060000 		.4byte	0x6eb
 2521 067a 04       		.byte	0x4
 2522 067b 10       		.uleb128 0x10
 2523 067c A8070000 		.4byte	.LASF100
 2524 0680 04       		.byte	0x4
 2525 0681 C002     		.2byte	0x2c0
 2526 0683 ED060000 		.4byte	0x6ed
 2527 0687 08       		.byte	0x8
 2528 0688 10       		.uleb128 0x10
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 99


 2529 0689 DA060000 		.4byte	.LASF101
 2530 068d 04       		.byte	0x4
 2531 068e C602     		.2byte	0x2c6
 2532 0690 EB060000 		.4byte	0x6eb
 2533 0694 0C       		.byte	0xc
 2534 0695 10       		.uleb128 0x10
 2535 0696 FC090000 		.4byte	.LASF102
 2536 069a 04       		.byte	0x4
 2537 069b CD02     		.2byte	0x2cd
 2538 069d F3060000 		.4byte	0x6f3
 2539 06a1 10       		.byte	0x10
 2540 06a2 10       		.uleb128 0x10
 2541 06a3 670A0000 		.4byte	.LASF103
 2542 06a7 04       		.byte	0x4
 2543 06a8 D202     		.2byte	0x2d2
 2544 06aa 83000000 		.4byte	0x83
 2545 06ae 14       		.byte	0x14
 2546 06af 10       		.uleb128 0x10
 2547 06b0 53040000 		.4byte	.LASF104
 2548 06b4 04       		.byte	0x4
 2549 06b5 D902     		.2byte	0x2d9
 2550 06b7 77000000 		.4byte	0x77
 2551 06bb 18       		.byte	0x18
 2552 06bc 10       		.uleb128 0x10
 2553 06bd 84030000 		.4byte	.LASF105
 2554 06c1 04       		.byte	0x4
 2555 06c2 E002     		.2byte	0x2e0
 2556 06c4 6B000000 		.4byte	0x6b
 2557 06c8 1A       		.byte	0x1a
 2558 06c9 10       		.uleb128 0x10
 2559 06ca CE050000 		.4byte	.LASF106
 2560 06ce 04       		.byte	0x4
 2561 06cf EA02     		.2byte	0x2ea
 2562 06d1 6B000000 		.4byte	0x6b
 2563 06d5 1B       		.byte	0x1b
 2564 06d6 10       		.uleb128 0x10
 2565 06d7 54060000 		.4byte	.LASF107
 2566 06db 04       		.byte	0x4
 2567 06dc EF02     		.2byte	0x2ef
 2568 06de F3060000 		.4byte	0x6f3
 2569 06e2 1C       		.byte	0x1c
 2570 06e3 00       		.byte	0
 2571 06e4 06       		.uleb128 0x6
 2572 06e5 04       		.byte	0x4
 2573 06e6 EA060000 		.4byte	0x6ea
 2574 06ea 13       		.uleb128 0x13
 2575 06eb 14       		.uleb128 0x14
 2576 06ec 04       		.byte	0x4
 2577 06ed 06       		.uleb128 0x6
 2578 06ee 04       		.byte	0x4
 2579 06ef 28030000 		.4byte	0x328
 2580 06f3 06       		.uleb128 0x6
 2581 06f4 04       		.byte	0x4
 2582 06f5 6B000000 		.4byte	0x6b
 2583 06f9 04       		.uleb128 0x4
 2584 06fa 20040000 		.4byte	.LASF108
 2585 06fe 04       		.byte	0x4
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 100


 2586 06ff F002     		.2byte	0x2f0
 2587 0701 58060000 		.4byte	0x658
 2588 0705 11       		.uleb128 0x11
 2589 0706 40       		.byte	0x40
 2590 0707 04       		.byte	0x4
 2591 0708 F602     		.2byte	0x2f6
 2592 070a 1C070000 		.4byte	0x71c
 2593 070e 10       		.uleb128 0x10
 2594 070f 0B0D0000 		.4byte	.LASF109
 2595 0713 04       		.byte	0x4
 2596 0714 FB02     		.2byte	0x2fb
 2597 0716 1C070000 		.4byte	0x71c
 2598 071a 00       		.byte	0
 2599 071b 00       		.byte	0
 2600 071c 0E       		.uleb128 0xe
 2601 071d F9060000 		.4byte	0x6f9
 2602 0721 2C070000 		.4byte	0x72c
 2603 0725 0F       		.uleb128 0xf
 2604 0726 C4010000 		.4byte	0x1c4
 2605 072a 01       		.byte	0x1
 2606 072b 00       		.byte	0
 2607 072c 04       		.uleb128 0x4
 2608 072d 30060000 		.4byte	.LASF110
 2609 0731 04       		.byte	0x4
 2610 0732 FC02     		.2byte	0x2fc
 2611 0734 05070000 		.4byte	0x705
 2612 0738 02       		.uleb128 0x2
 2613 0739 08       		.byte	0x8
 2614 073a 04       		.byte	0x4
 2615 073b 7A070000 		.4byte	.LASF111
 2616 073f 15       		.uleb128 0x15
 2617 0740 33070000 		.4byte	.LASF114
 2618 0744 01       		.byte	0x1
 2619 0745 6009     		.2byte	0x960
 2620 0747 6B000000 		.4byte	0x6b
 2621 074b 00000000 		.4byte	.LFB19
 2622 074f 84000000 		.4byte	.LFE19-.LFB19
 2623 0753 01       		.uleb128 0x1
 2624 0754 9C       		.byte	0x9c
 2625 0755 8A070000 		.4byte	0x78a
 2626 0759 16       		.uleb128 0x16
 2627 075a 250C0000 		.4byte	.LASF112
 2628 075e 01       		.byte	0x1
 2629 075f 6009     		.2byte	0x960
 2630 0761 83000000 		.4byte	0x83
 2631 0765 00000000 		.4byte	.LLST0
 2632 0769 16       		.uleb128 0x16
 2633 076a F0040000 		.4byte	.LASF113
 2634 076e 01       		.byte	0x1
 2635 076f 6009     		.2byte	0x960
 2636 0771 83000000 		.4byte	0x83
 2637 0775 2C000000 		.4byte	.LLST1
 2638 0779 17       		.uleb128 0x17
 2639 077a 8D030000 		.4byte	.LASF116
 2640 077e 01       		.byte	0x1
 2641 077f 6209     		.2byte	0x962
 2642 0781 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 101


 2643 0785 58000000 		.4byte	.LLST2
 2644 0789 00       		.byte	0
 2645 078a 15       		.uleb128 0x15
 2646 078b 33020000 		.4byte	.LASF115
 2647 078f 01       		.byte	0x1
 2648 0790 AC09     		.2byte	0x9ac
 2649 0792 6B000000 		.4byte	0x6b
 2650 0796 00000000 		.4byte	.LFB20
 2651 079a 42000000 		.4byte	.LFE20-.LFB20
 2652 079e 01       		.uleb128 0x1
 2653 079f 9C       		.byte	0x9c
 2654 07a0 F5070000 		.4byte	0x7f5
 2655 07a4 16       		.uleb128 0x16
 2656 07a5 250C0000 		.4byte	.LASF112
 2657 07a9 01       		.byte	0x1
 2658 07aa AC09     		.2byte	0x9ac
 2659 07ac 83000000 		.4byte	0x83
 2660 07b0 77000000 		.4byte	.LLST3
 2661 07b4 16       		.uleb128 0x16
 2662 07b5 8D030000 		.4byte	.LASF116
 2663 07b9 01       		.byte	0x1
 2664 07ba AC09     		.2byte	0x9ac
 2665 07bc 6B000000 		.4byte	0x6b
 2666 07c0 BC000000 		.4byte	.LLST4
 2667 07c4 17       		.uleb128 0x17
 2668 07c5 39010000 		.4byte	.LASF117
 2669 07c9 01       		.byte	0x1
 2670 07ca AE09     		.2byte	0x9ae
 2671 07cc 83000000 		.4byte	0x83
 2672 07d0 F6000000 		.4byte	.LLST5
 2673 07d4 17       		.uleb128 0x17
 2674 07d5 4E010000 		.4byte	.LASF118
 2675 07d9 01       		.byte	0x1
 2676 07da AF09     		.2byte	0x9af
 2677 07dc 83000000 		.4byte	0x83
 2678 07e0 20010000 		.4byte	.LLST6
 2679 07e4 17       		.uleb128 0x17
 2680 07e5 D60B0000 		.4byte	.LASF119
 2681 07e9 01       		.byte	0x1
 2682 07ea B009     		.2byte	0x9b0
 2683 07ec 83000000 		.4byte	0x83
 2684 07f0 49010000 		.4byte	.LLST7
 2685 07f4 00       		.byte	0
 2686 07f5 18       		.uleb128 0x18
 2687 07f6 3B000000 		.4byte	.LASF162
 2688 07fa 01       		.byte	0x1
 2689 07fb FA02     		.2byte	0x2fa
 2690 07fd 00000000 		.4byte	.LFB7
 2691 0801 38000000 		.4byte	.LFE7-.LFB7
 2692 0805 01       		.uleb128 0x1
 2693 0806 9C       		.byte	0x9c
 2694 0807 2E080000 		.4byte	0x82e
 2695 080b 17       		.uleb128 0x17
 2696 080c E10B0000 		.4byte	.LASF120
 2697 0810 01       		.byte	0x1
 2698 0811 FC02     		.2byte	0x2fc
 2699 0813 83000000 		.4byte	0x83
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 102


 2700 0817 5C010000 		.4byte	.LLST8
 2701 081b 19       		.uleb128 0x19
 2702 081c 1A000000 		.4byte	.LVL29
 2703 0820 82100000 		.4byte	0x1082
 2704 0824 19       		.uleb128 0x19
 2705 0825 26000000 		.4byte	.LVL32
 2706 0829 8E100000 		.4byte	0x108e
 2707 082d 00       		.byte	0
 2708 082e 1A       		.uleb128 0x1a
 2709 082f 5D010000 		.4byte	.LASF197
 2710 0833 01       		.byte	0x1
 2711 0834 E9       		.byte	0xe9
 2712 0835 83000000 		.4byte	0x83
 2713 0839 00000000 		.4byte	.LFB1
 2714 083d 10000000 		.4byte	.LFE1-.LFB1
 2715 0841 01       		.uleb128 0x1
 2716 0842 9C       		.byte	0x9c
 2717 0843 1B       		.uleb128 0x1b
 2718 0844 8B080000 		.4byte	.LASF123
 2719 0848 01       		.byte	0x1
 2720 0849 1D01     		.2byte	0x11d
 2721 084b A4000000 		.4byte	0xa4
 2722 084f 00000000 		.4byte	.LFB2
 2723 0853 4C000000 		.4byte	.LFE2-.LFB2
 2724 0857 01       		.uleb128 0x1
 2725 0858 9C       		.byte	0x9c
 2726 0859 87080000 		.4byte	0x887
 2727 085d 16       		.uleb128 0x16
 2728 085e 570C0000 		.4byte	.LASF121
 2729 0862 01       		.byte	0x1
 2730 0863 1D01     		.2byte	0x11d
 2731 0865 83000000 		.4byte	0x83
 2732 0869 90010000 		.4byte	.LLST9
 2733 086d 17       		.uleb128 0x17
 2734 086e 4A0C0000 		.4byte	.LASF122
 2735 0872 01       		.byte	0x1
 2736 0873 1F01     		.2byte	0x11f
 2737 0875 A4000000 		.4byte	0xa4
 2738 0879 B1010000 		.4byte	.LLST10
 2739 087d 19       		.uleb128 0x19
 2740 087e 42000000 		.4byte	.LVL35
 2741 0882 9A100000 		.4byte	0x109a
 2742 0886 00       		.byte	0
 2743 0887 1B       		.uleb128 0x1b
 2744 0888 46060000 		.4byte	.LASF124
 2745 088c 01       		.byte	0x1
 2746 088d 7001     		.2byte	0x170
 2747 088f A4000000 		.4byte	0xa4
 2748 0893 00000000 		.4byte	.LFB3
 2749 0897 2C000000 		.4byte	.LFE3-.LFB3
 2750 089b 01       		.uleb128 0x1
 2751 089c 9C       		.byte	0x9c
 2752 089d BB080000 		.4byte	0x8bb
 2753 08a1 17       		.uleb128 0x17
 2754 08a2 30000000 		.4byte	.LASF125
 2755 08a6 01       		.byte	0x1
 2756 08a7 7201     		.2byte	0x172
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 103


 2757 08a9 A4000000 		.4byte	0xa4
 2758 08ad CF010000 		.4byte	.LLST11
 2759 08b1 19       		.uleb128 0x19
 2760 08b2 16000000 		.4byte	.LVL38
 2761 08b6 A6100000 		.4byte	0x10a6
 2762 08ba 00       		.byte	0
 2763 08bb 1B       		.uleb128 0x1b
 2764 08bc ED0A0000 		.4byte	.LASF126
 2765 08c0 01       		.byte	0x1
 2766 08c1 AE01     		.2byte	0x1ae
 2767 08c3 A4000000 		.4byte	0xa4
 2768 08c7 00000000 		.4byte	.LFB4
 2769 08cb 48000000 		.4byte	.LFE4-.LFB4
 2770 08cf 01       		.uleb128 0x1
 2771 08d0 9C       		.byte	0x9c
 2772 08d1 13090000 		.4byte	0x913
 2773 08d5 17       		.uleb128 0x17
 2774 08d6 30000000 		.4byte	.LASF125
 2775 08da 01       		.byte	0x1
 2776 08db B001     		.2byte	0x1b0
 2777 08dd A4000000 		.4byte	0xa4
 2778 08e1 EE010000 		.4byte	.LLST12
 2779 08e5 17       		.uleb128 0x17
 2780 08e6 4B070000 		.4byte	.LASF127
 2781 08ea 01       		.byte	0x1
 2782 08eb B201     		.2byte	0x1b2
 2783 08ed 83000000 		.4byte	0x83
 2784 08f1 3C020000 		.4byte	.LLST13
 2785 08f5 1C       		.uleb128 0x1c
 2786 08f6 18000000 		.4byte	.LVL43
 2787 08fa 43080000 		.4byte	0x843
 2788 08fe 09090000 		.4byte	0x909
 2789 0902 1D       		.uleb128 0x1d
 2790 0903 01       		.uleb128 0x1
 2791 0904 50       		.byte	0x50
 2792 0905 02       		.uleb128 0x2
 2793 0906 74       		.byte	0x74
 2794 0907 00       		.sleb128 0
 2795 0908 00       		.byte	0
 2796 0909 19       		.uleb128 0x19
 2797 090a 32000000 		.4byte	.LVL44
 2798 090e 87080000 		.4byte	0x887
 2799 0912 00       		.byte	0
 2800 0913 1E       		.uleb128 0x1e
 2801 0914 520A0000 		.4byte	.LASF134
 2802 0918 01       		.byte	0x1
 2803 0919 8902     		.2byte	0x289
 2804 091b 00000000 		.4byte	.LFB6
 2805 091f B4000000 		.4byte	.LFE6-.LFB6
 2806 0923 01       		.uleb128 0x1
 2807 0924 9C       		.byte	0x9c
 2808 0925 F3090000 		.4byte	0x9f3
 2809 0929 16       		.uleb128 0x16
 2810 092a 570C0000 		.4byte	.LASF121
 2811 092e 01       		.byte	0x1
 2812 092f 8902     		.2byte	0x289
 2813 0931 83000000 		.4byte	0x83
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 104


 2814 0935 4F020000 		.4byte	.LLST14
 2815 0939 16       		.uleb128 0x16
 2816 093a 22000000 		.4byte	.LASF128
 2817 093e 01       		.byte	0x1
 2818 093f 8902     		.2byte	0x289
 2819 0941 83000000 		.4byte	0x83
 2820 0945 70020000 		.4byte	.LLST15
 2821 0949 16       		.uleb128 0x16
 2822 094a D50A0000 		.4byte	.LASF129
 2823 094e 01       		.byte	0x1
 2824 094f 8902     		.2byte	0x289
 2825 0951 83000000 		.4byte	0x83
 2826 0955 91020000 		.4byte	.LLST16
 2827 0959 1F       		.uleb128 0x1f
 2828 095a DC010000 		.4byte	.LASF130
 2829 095e 01       		.byte	0x1
 2830 095f 8B02     		.2byte	0x28b
 2831 0961 83000000 		.4byte	0x83
 2832 0965 01       		.byte	0x1
 2833 0966 17       		.uleb128 0x17
 2834 0967 E30A0000 		.4byte	.LASF131
 2835 096b 01       		.byte	0x1
 2836 096c 8C02     		.2byte	0x28c
 2837 096e 83000000 		.4byte	0x83
 2838 0972 BD020000 		.4byte	.LLST17
 2839 0976 17       		.uleb128 0x17
 2840 0977 23010000 		.4byte	.LASF132
 2841 097b 01       		.byte	0x1
 2842 097c 8D02     		.2byte	0x28d
 2843 097e 6B000000 		.4byte	0x6b
 2844 0982 DC020000 		.4byte	.LLST18
 2845 0986 17       		.uleb128 0x17
 2846 0987 740A0000 		.4byte	.LASF133
 2847 098b 01       		.byte	0x1
 2848 098c 8E02     		.2byte	0x28e
 2849 098e F3090000 		.4byte	0x9f3
 2850 0992 10030000 		.4byte	.LLST19
 2851 0996 19       		.uleb128 0x19
 2852 0997 16000000 		.4byte	.LVL53
 2853 099b B2100000 		.4byte	0x10b2
 2854 099f 19       		.uleb128 0x19
 2855 09a0 36000000 		.4byte	.LVL54
 2856 09a4 BD100000 		.4byte	0x10bd
 2857 09a8 19       		.uleb128 0x19
 2858 09a9 4C000000 		.4byte	.LVL55
 2859 09ad B2100000 		.4byte	0x10b2
 2860 09b1 19       		.uleb128 0x19
 2861 09b2 6C000000 		.4byte	.LVL56
 2862 09b6 BD100000 		.4byte	0x10bd
 2863 09ba 19       		.uleb128 0x19
 2864 09bb 72000000 		.4byte	.LVL57
 2865 09bf B2100000 		.4byte	0x10b2
 2866 09c3 19       		.uleb128 0x19
 2867 09c4 84000000 		.4byte	.LVL58
 2868 09c8 BD100000 		.4byte	0x10bd
 2869 09cc 1C       		.uleb128 0x1c
 2870 09cd 8C000000 		.4byte	.LVL59
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 105


 2871 09d1 C8100000 		.4byte	0x10c8
 2872 09d5 E0090000 		.4byte	0x9e0
 2873 09d9 1D       		.uleb128 0x1d
 2874 09da 01       		.uleb128 0x1
 2875 09db 50       		.byte	0x50
 2876 09dc 02       		.uleb128 0x2
 2877 09dd 74       		.byte	0x74
 2878 09de 00       		.sleb128 0
 2879 09df 00       		.byte	0
 2880 09e0 19       		.uleb128 0x19
 2881 09e1 92000000 		.4byte	.LVL60
 2882 09e5 B2100000 		.4byte	0x10b2
 2883 09e9 19       		.uleb128 0x19
 2884 09ea A4000000 		.4byte	.LVL61
 2885 09ee BD100000 		.4byte	0x10bd
 2886 09f2 00       		.byte	0
 2887 09f3 06       		.uleb128 0x6
 2888 09f4 04       		.byte	0x4
 2889 09f5 F9090000 		.4byte	0x9f9
 2890 09f9 20       		.uleb128 0x20
 2891 09fa 4C060000 		.4byte	0x64c
 2892 09fe 1E       		.uleb128 0x1e
 2893 09ff 1C0B0000 		.4byte	.LASF135
 2894 0a03 01       		.byte	0x1
 2895 0a04 8503     		.2byte	0x385
 2896 0a06 00000000 		.4byte	.LFB8
 2897 0a0a 5C000000 		.4byte	.LFE8-.LFB8
 2898 0a0e 01       		.uleb128 0x1
 2899 0a0f 9C       		.byte	0x9c
 2900 0a10 490A0000 		.4byte	0xa49
 2901 0a14 16       		.uleb128 0x16
 2902 0a15 58010000 		.4byte	.LASF136
 2903 0a19 01       		.byte	0x1
 2904 0a1a 8503     		.2byte	0x385
 2905 0a1c 1C010000 		.4byte	0x11c
 2906 0a20 23030000 		.4byte	.LLST20
 2907 0a24 19       		.uleb128 0x19
 2908 0a25 14000000 		.4byte	.LVL68
 2909 0a29 F5070000 		.4byte	0x7f5
 2910 0a2d 19       		.uleb128 0x19
 2911 0a2e 26000000 		.4byte	.LVL70
 2912 0a32 D4100000 		.4byte	0x10d4
 2913 0a36 19       		.uleb128 0x19
 2914 0a37 2E000000 		.4byte	.LVL71
 2915 0a3b DF100000 		.4byte	0x10df
 2916 0a3f 19       		.uleb128 0x19
 2917 0a40 46000000 		.4byte	.LVL72
 2918 0a44 EB100000 		.4byte	0x10eb
 2919 0a48 00       		.byte	0
 2920 0a49 1E       		.uleb128 0x1e
 2921 0a4a 55000000 		.4byte	.LASF137
 2922 0a4e 01       		.byte	0x1
 2923 0a4f E803     		.2byte	0x3e8
 2924 0a51 00000000 		.4byte	.LFB9
 2925 0a55 40000000 		.4byte	.LFE9-.LFB9
 2926 0a59 01       		.uleb128 0x1
 2927 0a5a 9C       		.byte	0x9c
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 106


 2928 0a5b 900A0000 		.4byte	0xa90
 2929 0a5f 17       		.uleb128 0x17
 2930 0a60 740A0000 		.4byte	.LASF133
 2931 0a64 01       		.byte	0x1
 2932 0a65 EA03     		.2byte	0x3ea
 2933 0a67 F3090000 		.4byte	0x9f3
 2934 0a6b 5D030000 		.4byte	.LLST21
 2935 0a6f 17       		.uleb128 0x17
 2936 0a70 1D020000 		.4byte	.LASF138
 2937 0a74 01       		.byte	0x1
 2938 0a75 EB03     		.2byte	0x3eb
 2939 0a77 83000000 		.4byte	0x83
 2940 0a7b 70030000 		.4byte	.LLST22
 2941 0a7f 17       		.uleb128 0x17
 2942 0a80 1A010000 		.4byte	.LASF139
 2943 0a84 01       		.byte	0x1
 2944 0a85 EC03     		.2byte	0x3ec
 2945 0a87 83000000 		.4byte	0x83
 2946 0a8b 8F030000 		.4byte	.LLST23
 2947 0a8f 00       		.byte	0
 2948 0a90 1E       		.uleb128 0x1e
 2949 0a91 AB0B0000 		.4byte	.LASF140
 2950 0a95 01       		.byte	0x1
 2951 0a96 6204     		.2byte	0x462
 2952 0a98 00000000 		.4byte	.LFB10
 2953 0a9c 78000000 		.4byte	.LFE10-.LFB10
 2954 0aa0 01       		.uleb128 0x1
 2955 0aa1 9C       		.byte	0x9c
 2956 0aa2 C90A0000 		.4byte	0xac9
 2957 0aa6 17       		.uleb128 0x17
 2958 0aa7 BD070000 		.4byte	.LASF141
 2959 0aab 01       		.byte	0x1
 2960 0aac 6A04     		.2byte	0x46a
 2961 0aae A4000000 		.4byte	0xa4
 2962 0ab2 B8030000 		.4byte	.LLST24
 2963 0ab6 19       		.uleb128 0x19
 2964 0ab7 14000000 		.4byte	.LVL85
 2965 0abb 43080000 		.4byte	0x843
 2966 0abf 19       		.uleb128 0x19
 2967 0ac0 2A000000 		.4byte	.LVL87
 2968 0ac4 87080000 		.4byte	0x887
 2969 0ac8 00       		.byte	0
 2970 0ac9 1E       		.uleb128 0x1e
 2971 0aca F6070000 		.4byte	.LASF142
 2972 0ace 01       		.byte	0x1
 2973 0acf AF04     		.2byte	0x4af
 2974 0ad1 00000000 		.4byte	.LFB11
 2975 0ad5 08000000 		.4byte	.LFE11-.LFB11
 2976 0ad9 01       		.uleb128 0x1
 2977 0ada 9C       		.byte	0x9c
 2978 0adb 010B0000 		.4byte	0xb01
 2979 0adf 16       		.uleb128 0x16
 2980 0ae0 CB090000 		.4byte	.LASF143
 2981 0ae4 01       		.byte	0x1
 2982 0ae5 AF04     		.2byte	0x4af
 2983 0ae7 C6000000 		.4byte	0xc6
 2984 0aeb 03040000 		.4byte	.LLST25
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 107


 2985 0aef 21       		.uleb128 0x21
 2986 0af0 06000000 		.4byte	.LVL94
 2987 0af4 F6100000 		.4byte	0x10f6
 2988 0af8 1D       		.uleb128 0x1d
 2989 0af9 01       		.uleb128 0x1
 2990 0afa 50       		.byte	0x50
 2991 0afb 03       		.uleb128 0x3
 2992 0afc F3       		.byte	0xf3
 2993 0afd 01       		.uleb128 0x1
 2994 0afe 50       		.byte	0x50
 2995 0aff 00       		.byte	0
 2996 0b00 00       		.byte	0
 2997 0b01 1E       		.uleb128 0x1e
 2998 0b02 88010000 		.4byte	.LASF144
 2999 0b06 01       		.byte	0x1
 3000 0b07 C604     		.2byte	0x4c6
 3001 0b09 00000000 		.4byte	.LFB12
 3002 0b0d 30000000 		.4byte	.LFE12-.LFB12
 3003 0b11 01       		.uleb128 0x1
 3004 0b12 9C       		.byte	0x9c
 3005 0b13 280B0000 		.4byte	0xb28
 3006 0b17 16       		.uleb128 0x16
 3007 0b18 08040000 		.4byte	.LASF145
 3008 0b1c 01       		.byte	0x1
 3009 0b1d C604     		.2byte	0x4c6
 3010 0b1f 83000000 		.4byte	0x83
 3011 0b23 24040000 		.4byte	.LLST26
 3012 0b27 00       		.byte	0
 3013 0b28 1E       		.uleb128 0x1e
 3014 0b29 78050000 		.4byte	.LASF146
 3015 0b2d 01       		.byte	0x1
 3016 0b2e 0A05     		.2byte	0x50a
 3017 0b30 00000000 		.4byte	.LFB13
 3018 0b34 14000000 		.4byte	.LFE13-.LFB13
 3019 0b38 01       		.uleb128 0x1
 3020 0b39 9C       		.byte	0x9c
 3021 0b3a 5F0B0000 		.4byte	0xb5f
 3022 0b3e 16       		.uleb128 0x16
 3023 0b3f 150B0000 		.4byte	.LASF34
 3024 0b43 01       		.byte	0x1
 3025 0b44 0A05     		.2byte	0x50a
 3026 0b46 83000000 		.4byte	0x83
 3027 0b4a 52040000 		.4byte	.LLST27
 3028 0b4e 17       		.uleb128 0x17
 3029 0b4f E10B0000 		.4byte	.LASF120
 3030 0b53 01       		.byte	0x1
 3031 0b54 0D05     		.2byte	0x50d
 3032 0b56 83000000 		.4byte	0x83
 3033 0b5a 80040000 		.4byte	.LLST28
 3034 0b5e 00       		.byte	0
 3035 0b5f 1E       		.uleb128 0x1e
 3036 0b60 04070000 		.4byte	.LASF147
 3037 0b64 01       		.byte	0x1
 3038 0b65 5E05     		.2byte	0x55e
 3039 0b67 00000000 		.4byte	.LFB14
 3040 0b6b 12000000 		.4byte	.LFE14-.LFB14
 3041 0b6f 01       		.uleb128 0x1
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 108


 3042 0b70 9C       		.byte	0x9c
 3043 0b71 BB0B0000 		.4byte	0xbbb
 3044 0b75 16       		.uleb128 0x16
 3045 0b76 150B0000 		.4byte	.LASF34
 3046 0b7a 01       		.byte	0x1
 3047 0b7b 5E05     		.2byte	0x55e
 3048 0b7d 83000000 		.4byte	0x83
 3049 0b81 A9040000 		.4byte	.LLST29
 3050 0b85 16       		.uleb128 0x16
 3051 0b86 08040000 		.4byte	.LASF145
 3052 0b8a 01       		.byte	0x1
 3053 0b8b 5E05     		.2byte	0x55e
 3054 0b8d 83000000 		.4byte	0x83
 3055 0b91 D5040000 		.4byte	.LLST30
 3056 0b95 1C       		.uleb128 0x1c
 3057 0b96 0A000000 		.4byte	.LVL106
 3058 0b9a 010B0000 		.4byte	0xb01
 3059 0b9e AA0B0000 		.4byte	0xbaa
 3060 0ba2 1D       		.uleb128 0x1d
 3061 0ba3 01       		.uleb128 0x1
 3062 0ba4 50       		.byte	0x50
 3063 0ba5 03       		.uleb128 0x3
 3064 0ba6 F3       		.byte	0xf3
 3065 0ba7 01       		.uleb128 0x1
 3066 0ba8 51       		.byte	0x51
 3067 0ba9 00       		.byte	0
 3068 0baa 21       		.uleb128 0x21
 3069 0bab 10000000 		.4byte	.LVL107
 3070 0baf 280B0000 		.4byte	0xb28
 3071 0bb3 1D       		.uleb128 0x1d
 3072 0bb4 01       		.uleb128 0x1
 3073 0bb5 50       		.byte	0x50
 3074 0bb6 02       		.uleb128 0x2
 3075 0bb7 74       		.byte	0x74
 3076 0bb8 00       		.sleb128 0
 3077 0bb9 00       		.byte	0
 3078 0bba 00       		.byte	0
 3079 0bbb 1B       		.uleb128 0x1b
 3080 0bbc 44050000 		.4byte	.LASF148
 3081 0bc0 01       		.byte	0x1
 3082 0bc1 9205     		.2byte	0x592
 3083 0bc3 A4000000 		.4byte	0xa4
 3084 0bc7 00000000 		.4byte	.LFB15
 3085 0bcb 44000000 		.4byte	.LFE15-.LFB15
 3086 0bcf 01       		.uleb128 0x1
 3087 0bd0 9C       		.byte	0x9c
 3088 0bd1 200C0000 		.4byte	0xc20
 3089 0bd5 16       		.uleb128 0x16
 3090 0bd6 570C0000 		.4byte	.LASF121
 3091 0bda 01       		.byte	0x1
 3092 0bdb 9205     		.2byte	0x592
 3093 0bdd 83000000 		.4byte	0x83
 3094 0be1 F6040000 		.4byte	.LLST31
 3095 0be5 17       		.uleb128 0x17
 3096 0be6 FA050000 		.4byte	.LASF149
 3097 0bea 01       		.byte	0x1
 3098 0beb 9405     		.2byte	0x594
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 109


 3099 0bed A4000000 		.4byte	0xa4
 3100 0bf1 22050000 		.4byte	.LLST32
 3101 0bf5 1C       		.uleb128 0x1c
 3102 0bf6 34000000 		.4byte	.LVL113
 3103 0bfa 01110000 		.4byte	0x1101
 3104 0bfe 0F0C0000 		.4byte	0xc0f
 3105 0c02 1D       		.uleb128 0x1d
 3106 0c03 01       		.uleb128 0x1
 3107 0c04 50       		.byte	0x50
 3108 0c05 02       		.uleb128 0x2
 3109 0c06 74       		.byte	0x74
 3110 0c07 00       		.sleb128 0
 3111 0c08 1D       		.uleb128 0x1d
 3112 0c09 01       		.uleb128 0x1
 3113 0c0a 51       		.byte	0x51
 3114 0c0b 02       		.uleb128 0x2
 3115 0c0c 08       		.byte	0x8
 3116 0c0d 46       		.byte	0x46
 3117 0c0e 00       		.byte	0
 3118 0c0f 21       		.uleb128 0x21
 3119 0c10 3C000000 		.4byte	.LVL116
 3120 0c14 0D110000 		.4byte	0x110d
 3121 0c18 1D       		.uleb128 0x1d
 3122 0c19 01       		.uleb128 0x1
 3123 0c1a 50       		.byte	0x50
 3124 0c1b 02       		.uleb128 0x2
 3125 0c1c 74       		.byte	0x74
 3126 0c1d 00       		.sleb128 0
 3127 0c1e 00       		.byte	0
 3128 0c1f 00       		.byte	0
 3129 0c20 1B       		.uleb128 0x1b
 3130 0c21 13060000 		.4byte	.LASF150
 3131 0c25 01       		.byte	0x1
 3132 0c26 0306     		.2byte	0x603
 3133 0c28 A4000000 		.4byte	0xa4
 3134 0c2c 00000000 		.4byte	.LFB16
 3135 0c30 1A000000 		.4byte	.LFE16-.LFB16
 3136 0c34 01       		.uleb128 0x1
 3137 0c35 9C       		.byte	0x9c
 3138 0c36 6B0C0000 		.4byte	0xc6b
 3139 0c3a 17       		.uleb128 0x17
 3140 0c3b FA050000 		.4byte	.LASF149
 3141 0c3f 01       		.byte	0x1
 3142 0c40 0506     		.2byte	0x605
 3143 0c42 A4000000 		.4byte	0xa4
 3144 0c46 62050000 		.4byte	.LLST33
 3145 0c4a 17       		.uleb128 0x17
 3146 0c4b 4B070000 		.4byte	.LASF127
 3147 0c4f 01       		.byte	0x1
 3148 0c50 0606     		.2byte	0x606
 3149 0c52 83000000 		.4byte	0x83
 3150 0c56 8C050000 		.4byte	.LLST34
 3151 0c5a 21       		.uleb128 0x21
 3152 0c5b 0E000000 		.4byte	.LVL121
 3153 0c5f BB0B0000 		.4byte	0xbbb
 3154 0c63 1D       		.uleb128 0x1d
 3155 0c64 01       		.uleb128 0x1
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 110


 3156 0c65 50       		.byte	0x50
 3157 0c66 02       		.uleb128 0x2
 3158 0c67 74       		.byte	0x74
 3159 0c68 00       		.sleb128 0
 3160 0c69 00       		.byte	0
 3161 0c6a 00       		.byte	0
 3162 0c6b 1E       		.uleb128 0x1e
 3163 0c6c 58020000 		.4byte	.LASF151
 3164 0c70 01       		.byte	0x1
 3165 0c71 060A     		.2byte	0xa06
 3166 0c73 00000000 		.4byte	.LFB21
 3167 0c77 34000000 		.4byte	.LFE21-.LFB21
 3168 0c7b 01       		.uleb128 0x1
 3169 0c7c 9C       		.byte	0x9c
 3170 0c7d C70C0000 		.4byte	0xcc7
 3171 0c81 17       		.uleb128 0x17
 3172 0c82 4B070000 		.4byte	.LASF127
 3173 0c86 01       		.byte	0x1
 3174 0c87 080A     		.2byte	0xa08
 3175 0c89 83000000 		.4byte	0x83
 3176 0c8d AB050000 		.4byte	.LLST35
 3177 0c91 17       		.uleb128 0x17
 3178 0c92 55070000 		.4byte	.LASF152
 3179 0c96 01       		.byte	0x1
 3180 0c97 090A     		.2byte	0xa09
 3181 0c99 83000000 		.4byte	0x83
 3182 0c9d CA050000 		.4byte	.LLST36
 3183 0ca1 17       		.uleb128 0x17
 3184 0ca2 A9010000 		.4byte	.LASF153
 3185 0ca6 01       		.byte	0x1
 3186 0ca7 150A     		.2byte	0xa15
 3187 0ca9 F3090000 		.4byte	0x9f3
 3188 0cad E9050000 		.4byte	.LLST37
 3189 0cb1 21       		.uleb128 0x21
 3190 0cb2 18000000 		.4byte	.LVL130
 3191 0cb6 18110000 		.4byte	0x1118
 3192 0cba 1D       		.uleb128 0x1d
 3193 0cbb 01       		.uleb128 0x1
 3194 0cbc 50       		.byte	0x50
 3195 0cbd 07       		.uleb128 0x7
 3196 0cbe 74       		.byte	0x74
 3197 0cbf 00       		.sleb128 0
 3198 0cc0 35       		.byte	0x35
 3199 0cc1 24       		.byte	0x24
 3200 0cc2 76       		.byte	0x76
 3201 0cc3 00       		.sleb128 0
 3202 0cc4 22       		.byte	0x22
 3203 0cc5 00       		.byte	0
 3204 0cc6 00       		.byte	0
 3205 0cc7 1B       		.uleb128 0x1b
 3206 0cc8 00000000 		.4byte	.LASF154
 3207 0ccc 01       		.byte	0x1
 3208 0ccd 580A     		.2byte	0xa58
 3209 0ccf 83000000 		.4byte	0x83
 3210 0cd3 00000000 		.4byte	.LFB22
 3211 0cd7 10000000 		.4byte	.LFE22-.LFB22
 3212 0cdb 01       		.uleb128 0x1
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 111


 3213 0cdc 9C       		.byte	0x9c
 3214 0cdd 0E0D0000 		.4byte	0xd0e
 3215 0ce1 16       		.uleb128 0x16
 3216 0ce2 570C0000 		.4byte	.LASF121
 3217 0ce6 01       		.byte	0x1
 3218 0ce7 580A     		.2byte	0xa58
 3219 0ce9 83000000 		.4byte	0x83
 3220 0ced FC050000 		.4byte	.LLST38
 3221 0cf1 22       		.uleb128 0x22
 3222 0cf2 C4090000 		.4byte	.LASF155
 3223 0cf6 01       		.byte	0x1
 3224 0cf7 5A0A     		.2byte	0xa5a
 3225 0cf9 83000000 		.4byte	0x83
 3226 0cfd 01       		.uleb128 0x1
 3227 0cfe 50       		.byte	0x50
 3228 0cff 22       		.uleb128 0x22
 3229 0d00 F5010000 		.4byte	.LASF156
 3230 0d04 01       		.byte	0x1
 3231 0d05 5E0A     		.2byte	0xa5e
 3232 0d07 0E0D0000 		.4byte	0xd0e
 3233 0d0b 01       		.uleb128 0x1
 3234 0d0c 53       		.byte	0x53
 3235 0d0d 00       		.byte	0
 3236 0d0e 06       		.uleb128 0x6
 3237 0d0f 04       		.byte	0x4
 3238 0d10 CB010000 		.4byte	0x1cb
 3239 0d14 1E       		.uleb128 0x1e
 3240 0d15 96030000 		.4byte	.LASF157
 3241 0d19 01       		.byte	0x1
 3242 0d1a 820A     		.2byte	0xa82
 3243 0d1c 00000000 		.4byte	.LFB23
 3244 0d20 10000000 		.4byte	.LFE23-.LFB23
 3245 0d24 01       		.uleb128 0x1
 3246 0d25 9C       		.byte	0x9c
 3247 0d26 570D0000 		.4byte	0xd57
 3248 0d2a 16       		.uleb128 0x16
 3249 0d2b 570C0000 		.4byte	.LASF121
 3250 0d2f 01       		.byte	0x1
 3251 0d30 820A     		.2byte	0xa82
 3252 0d32 83000000 		.4byte	0x83
 3253 0d36 1D060000 		.4byte	.LLST39
 3254 0d3a 23       		.uleb128 0x23
 3255 0d3b 43010000 		.4byte	.LASF158
 3256 0d3f 01       		.byte	0x1
 3257 0d40 820A     		.2byte	0xa82
 3258 0d42 83000000 		.4byte	0x83
 3259 0d46 01       		.uleb128 0x1
 3260 0d47 51       		.byte	0x51
 3261 0d48 22       		.uleb128 0x22
 3262 0d49 F5010000 		.4byte	.LASF156
 3263 0d4d 01       		.byte	0x1
 3264 0d4e 860A     		.2byte	0xa86
 3265 0d50 0E0D0000 		.4byte	0xd0e
 3266 0d54 01       		.uleb128 0x1
 3267 0d55 53       		.byte	0x53
 3268 0d56 00       		.byte	0
 3269 0d57 1B       		.uleb128 0x1b
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 112


 3270 0d58 E8030000 		.4byte	.LASF159
 3271 0d5c 01       		.byte	0x1
 3272 0d5d D60A     		.2byte	0xad6
 3273 0d5f 6B000000 		.4byte	0x6b
 3274 0d63 00000000 		.4byte	.LFB24
 3275 0d67 24000000 		.4byte	.LFE24-.LFB24
 3276 0d6b 01       		.uleb128 0x1
 3277 0d6c 9C       		.byte	0x9c
 3278 0d6d AD0D0000 		.4byte	0xdad
 3279 0d71 16       		.uleb128 0x16
 3280 0d72 250C0000 		.4byte	.LASF112
 3281 0d76 01       		.byte	0x1
 3282 0d77 D60A     		.2byte	0xad6
 3283 0d79 83000000 		.4byte	0x83
 3284 0d7d 3E060000 		.4byte	.LLST40
 3285 0d81 23       		.uleb128 0x23
 3286 0d82 32050000 		.4byte	.LASF26
 3287 0d86 01       		.byte	0x1
 3288 0d87 D60A     		.2byte	0xad6
 3289 0d89 83000000 		.4byte	0x83
 3290 0d8d 01       		.uleb128 0x1
 3291 0d8e 51       		.byte	0x51
 3292 0d8f 17       		.uleb128 0x17
 3293 0d90 99090000 		.4byte	.LASF160
 3294 0d94 01       		.byte	0x1
 3295 0d95 D80A     		.2byte	0xad8
 3296 0d97 83000000 		.4byte	0x83
 3297 0d9b 78060000 		.4byte	.LLST41
 3298 0d9f 1F       		.uleb128 0x1f
 3299 0da0 330C0000 		.4byte	.LASF161
 3300 0da4 01       		.byte	0x1
 3301 0da5 D90A     		.2byte	0xad9
 3302 0da7 83000000 		.4byte	0x83
 3303 0dab 01       		.byte	0x1
 3304 0dac 00       		.byte	0
 3305 0dad 18       		.uleb128 0x18
 3306 0dae FD010000 		.4byte	.LASF163
 3307 0db2 01       		.byte	0x1
 3308 0db3 BE08     		.2byte	0x8be
 3309 0db5 00000000 		.4byte	.LFB18
 3310 0db9 3A000000 		.4byte	.LFE18-.LFB18
 3311 0dbd 01       		.uleb128 0x1
 3312 0dbe 9C       		.byte	0x9c
 3313 0dbf 920E0000 		.4byte	0xe92
 3314 0dc3 16       		.uleb128 0x16
 3315 0dc4 4B070000 		.4byte	.LASF127
 3316 0dc8 01       		.byte	0x1
 3317 0dc9 BE08     		.2byte	0x8be
 3318 0dcb 83000000 		.4byte	0x83
 3319 0dcf 8B060000 		.4byte	.LLST42
 3320 0dd3 16       		.uleb128 0x16
 3321 0dd4 F5010000 		.4byte	.LASF156
 3322 0dd8 01       		.byte	0x1
 3323 0dd9 BE08     		.2byte	0x8be
 3324 0ddb 0E0D0000 		.4byte	0xd0e
 3325 0ddf AC060000 		.4byte	.LLST43
 3326 0de3 17       		.uleb128 0x17
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 113


 3327 0de4 8D030000 		.4byte	.LASF116
 3328 0de8 01       		.byte	0x1
 3329 0de9 C008     		.2byte	0x8c0
 3330 0deb 6B000000 		.4byte	0x6b
 3331 0def D8060000 		.4byte	.LLST44
 3332 0df3 17       		.uleb128 0x17
 3333 0df4 39010000 		.4byte	.LASF117
 3334 0df8 01       		.byte	0x1
 3335 0df9 C108     		.2byte	0x8c1
 3336 0dfb 6B000000 		.4byte	0x6b
 3337 0dff F6060000 		.4byte	.LLST45
 3338 0e03 17       		.uleb128 0x17
 3339 0e04 F0040000 		.4byte	.LASF113
 3340 0e08 01       		.byte	0x1
 3341 0e09 C508     		.2byte	0x8c5
 3342 0e0b 83000000 		.4byte	0x83
 3343 0e0f 09070000 		.4byte	.LLST46
 3344 0e13 17       		.uleb128 0x17
 3345 0e14 250C0000 		.4byte	.LASF112
 3346 0e18 01       		.byte	0x1
 3347 0e19 C708     		.2byte	0x8c7
 3348 0e1b 83000000 		.4byte	0x83
 3349 0e1f 27070000 		.4byte	.LLST47
 3350 0e23 1C       		.uleb128 0x1c
 3351 0e24 08000000 		.4byte	.LVL148
 3352 0e28 C70C0000 		.4byte	0xcc7
 3353 0e2c 380E0000 		.4byte	0xe38
 3354 0e30 1D       		.uleb128 0x1d
 3355 0e31 01       		.uleb128 0x1
 3356 0e32 50       		.byte	0x50
 3357 0e33 03       		.uleb128 0x3
 3358 0e34 F3       		.byte	0xf3
 3359 0e35 01       		.uleb128 0x1
 3360 0e36 50       		.byte	0x50
 3361 0e37 00       		.byte	0
 3362 0e38 1C       		.uleb128 0x1c
 3363 0e39 12000000 		.4byte	.LVL150
 3364 0e3d 24110000 		.4byte	0x1124
 3365 0e41 510E0000 		.4byte	0xe51
 3366 0e45 1D       		.uleb128 0x1d
 3367 0e46 01       		.uleb128 0x1
 3368 0e47 50       		.byte	0x50
 3369 0e48 02       		.uleb128 0x2
 3370 0e49 75       		.byte	0x75
 3371 0e4a 00       		.sleb128 0
 3372 0e4b 1D       		.uleb128 0x1d
 3373 0e4c 01       		.uleb128 0x1
 3374 0e4d 52       		.byte	0x52
 3375 0e4e 01       		.uleb128 0x1
 3376 0e4f 30       		.byte	0x30
 3377 0e50 00       		.byte	0
 3378 0e51 1C       		.uleb128 0x1c
 3379 0e52 1A000000 		.4byte	.LVL153
 3380 0e56 3F070000 		.4byte	0x73f
 3381 0e5a 650E0000 		.4byte	0xe65
 3382 0e5e 1D       		.uleb128 0x1d
 3383 0e5f 01       		.uleb128 0x1
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 114


 3384 0e60 50       		.byte	0x50
 3385 0e61 02       		.uleb128 0x2
 3386 0e62 75       		.byte	0x75
 3387 0e63 00       		.sleb128 0
 3388 0e64 00       		.byte	0
 3389 0e65 1C       		.uleb128 0x1c
 3390 0e66 26000000 		.4byte	.LVL156
 3391 0e6a 570D0000 		.4byte	0xd57
 3392 0e6e 7B0E0000 		.4byte	0xe7b
 3393 0e72 1D       		.uleb128 0x1d
 3394 0e73 01       		.uleb128 0x1
 3395 0e74 50       		.byte	0x50
 3396 0e75 04       		.uleb128 0x4
 3397 0e76 75       		.byte	0x75
 3398 0e77 00       		.sleb128 0
 3399 0e78 31       		.byte	0x31
 3400 0e79 24       		.byte	0x24
 3401 0e7a 00       		.byte	0
 3402 0e7b 21       		.uleb128 0x21
 3403 0e7c 30000000 		.4byte	.LVL158
 3404 0e80 8A070000 		.4byte	0x78a
 3405 0e84 1D       		.uleb128 0x1d
 3406 0e85 01       		.uleb128 0x1
 3407 0e86 50       		.byte	0x50
 3408 0e87 02       		.uleb128 0x2
 3409 0e88 75       		.byte	0x75
 3410 0e89 00       		.sleb128 0
 3411 0e8a 1D       		.uleb128 0x1d
 3412 0e8b 01       		.uleb128 0x1
 3413 0e8c 51       		.byte	0x51
 3414 0e8d 02       		.uleb128 0x2
 3415 0e8e 74       		.byte	0x74
 3416 0e8f 00       		.sleb128 0
 3417 0e90 00       		.byte	0
 3418 0e91 00       		.byte	0
 3419 0e92 1E       		.uleb128 0x1e
 3420 0e93 7E0C0000 		.4byte	.LASF164
 3421 0e97 01       		.byte	0x1
 3422 0e98 8908     		.2byte	0x889
 3423 0e9a 00000000 		.4byte	.LFB17
 3424 0e9e 28000000 		.4byte	.LFE17-.LFB17
 3425 0ea2 01       		.uleb128 0x1
 3426 0ea3 9C       		.byte	0x9c
 3427 0ea4 ED0E0000 		.4byte	0xeed
 3428 0ea8 17       		.uleb128 0x17
 3429 0ea9 4B070000 		.4byte	.LASF127
 3430 0ead 01       		.byte	0x1
 3431 0eae 8B08     		.2byte	0x88b
 3432 0eb0 83000000 		.4byte	0x83
 3433 0eb4 45070000 		.4byte	.LLST48
 3434 0eb8 17       		.uleb128 0x17
 3435 0eb9 F5010000 		.4byte	.LASF156
 3436 0ebd 01       		.byte	0x1
 3437 0ebe 8C08     		.2byte	0x88c
 3438 0ec0 0E0D0000 		.4byte	0xd0e
 3439 0ec4 64070000 		.4byte	.LLST49
 3440 0ec8 1C       		.uleb128 0x1c
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 115


 3441 0ec9 14000000 		.4byte	.LVL166
 3442 0ecd AD0D0000 		.4byte	0xdad
 3443 0ed1 DC0E0000 		.4byte	0xedc
 3444 0ed5 1D       		.uleb128 0x1d
 3445 0ed6 01       		.uleb128 0x1
 3446 0ed7 50       		.byte	0x50
 3447 0ed8 02       		.uleb128 0x2
 3448 0ed9 74       		.byte	0x74
 3449 0eda 00       		.sleb128 0
 3450 0edb 00       		.byte	0
 3451 0edc 21       		.uleb128 0x21
 3452 0edd 1A000000 		.4byte	.LVL167
 3453 0ee1 0D110000 		.4byte	0x110d
 3454 0ee5 1D       		.uleb128 0x1d
 3455 0ee6 01       		.uleb128 0x1
 3456 0ee7 50       		.byte	0x50
 3457 0ee8 02       		.uleb128 0x2
 3458 0ee9 74       		.byte	0x74
 3459 0eea 00       		.sleb128 0
 3460 0eeb 00       		.byte	0
 3461 0eec 00       		.byte	0
 3462 0eed 1B       		.uleb128 0x1b
 3463 0eee 0F0C0000 		.4byte	.LASF165
 3464 0ef2 01       		.byte	0x1
 3465 0ef3 0402     		.2byte	0x204
 3466 0ef5 A4000000 		.4byte	0xa4
 3467 0ef9 00000000 		.4byte	.LFB5
 3468 0efd 14000000 		.4byte	.LFE5-.LFB5
 3469 0f01 01       		.uleb128 0x1
 3470 0f02 9C       		.byte	0x9c
 3471 0f03 360F0000 		.4byte	0xf36
 3472 0f07 1F       		.uleb128 0x1f
 3473 0f08 0F010000 		.4byte	.LASF166
 3474 0f0c 01       		.byte	0x1
 3475 0f0d 0602     		.2byte	0x206
 3476 0f0f A4000000 		.4byte	0xa4
 3477 0f13 00       		.byte	0
 3478 0f14 19       		.uleb128 0x19
 3479 0f15 06000000 		.4byte	.LVL171
 3480 0f19 920E0000 		.4byte	0xe92
 3481 0f1d 19       		.uleb128 0x19
 3482 0f1e 0A000000 		.4byte	.LVL172
 3483 0f22 490A0000 		.4byte	0xa49
 3484 0f26 21       		.uleb128 0x21
 3485 0f27 10000000 		.4byte	.LVL173
 3486 0f2b FE090000 		.4byte	0x9fe
 3487 0f2f 1D       		.uleb128 0x1d
 3488 0f30 01       		.uleb128 0x1
 3489 0f31 50       		.byte	0x50
 3490 0f32 01       		.uleb128 0x1
 3491 0f33 30       		.byte	0x30
 3492 0f34 00       		.byte	0
 3493 0f35 00       		.byte	0
 3494 0f36 1E       		.uleb128 0x1e
 3495 0f37 75000000 		.4byte	.LASF167
 3496 0f3b 01       		.byte	0x1
 3497 0f3c 060B     		.2byte	0xb06
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 116


 3498 0f3e 00000000 		.4byte	.LFB25
 3499 0f42 68000000 		.4byte	.LFE25-.LFB25
 3500 0f46 01       		.uleb128 0x1
 3501 0f47 9C       		.byte	0x9c
 3502 0f48 C80F0000 		.4byte	0xfc8
 3503 0f4c 17       		.uleb128 0x17
 3504 0f4d E10B0000 		.4byte	.LASF120
 3505 0f51 01       		.byte	0x1
 3506 0f52 080B     		.2byte	0xb08
 3507 0f54 83000000 		.4byte	0x83
 3508 0f58 77070000 		.4byte	.LLST50
 3509 0f5c 17       		.uleb128 0x17
 3510 0f5d 23010000 		.4byte	.LASF132
 3511 0f61 01       		.byte	0x1
 3512 0f62 090B     		.2byte	0xb09
 3513 0f64 6B000000 		.4byte	0x6b
 3514 0f68 C1070000 		.4byte	.LLST51
 3515 0f6c 19       		.uleb128 0x19
 3516 0f6d 06000000 		.4byte	.LVL174
 3517 0f71 B2100000 		.4byte	0x10b2
 3518 0f75 19       		.uleb128 0x19
 3519 0f76 14000000 		.4byte	.LVL177
 3520 0f7a BD100000 		.4byte	0x10bd
 3521 0f7e 19       		.uleb128 0x19
 3522 0f7f 18000000 		.4byte	.LVL178
 3523 0f83 B2100000 		.4byte	0x10b2
 3524 0f87 19       		.uleb128 0x19
 3525 0f88 26000000 		.4byte	.LVL181
 3526 0f8c BD100000 		.4byte	0x10bd
 3527 0f90 19       		.uleb128 0x19
 3528 0f91 2A000000 		.4byte	.LVL182
 3529 0f95 B2100000 		.4byte	0x10b2
 3530 0f99 19       		.uleb128 0x19
 3531 0f9a 3E000000 		.4byte	.LVL186
 3532 0f9e BD100000 		.4byte	0x10bd
 3533 0fa2 1C       		.uleb128 0x1c
 3534 0fa3 44000000 		.4byte	.LVL187
 3535 0fa7 30110000 		.4byte	0x1130
 3536 0fab B50F0000 		.4byte	0xfb5
 3537 0faf 1D       		.uleb128 0x1d
 3538 0fb0 01       		.uleb128 0x1
 3539 0fb1 50       		.byte	0x50
 3540 0fb2 01       		.uleb128 0x1
 3541 0fb3 31       		.byte	0x31
 3542 0fb4 00       		.byte	0
 3543 0fb5 19       		.uleb128 0x19
 3544 0fb6 48000000 		.4byte	.LVL188
 3545 0fba B2100000 		.4byte	0x10b2
 3546 0fbe 19       		.uleb128 0x19
 3547 0fbf 52000000 		.4byte	.LVL191
 3548 0fc3 BD100000 		.4byte	0x10bd
 3549 0fc7 00       		.byte	0
 3550 0fc8 24       		.uleb128 0x24
 3551 0fc9 61060000 		.4byte	.LASF168
 3552 0fcd 04       		.byte	0x4
 3553 0fce BE04     		.2byte	0x4be
 3554 0fd0 AE050000 		.4byte	0x5ae
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 117


 3555 0fd4 24       		.uleb128 0x24
 3556 0fd5 E4010000 		.4byte	.LASF169
 3557 0fd9 04       		.byte	0x4
 3558 0fda BF04     		.2byte	0x4bf
 3559 0fdc E00F0000 		.4byte	0xfe0
 3560 0fe0 20       		.uleb128 0x20
 3561 0fe1 2C070000 		.4byte	0x72c
 3562 0fe5 0E       		.uleb128 0xe
 3563 0fe6 F9090000 		.4byte	0x9f9
 3564 0fea F50F0000 		.4byte	0xff5
 3565 0fee 0F       		.uleb128 0xf
 3566 0fef C4010000 		.4byte	0x1c4
 3567 0ff3 01       		.byte	0x1
 3568 0ff4 00       		.byte	0
 3569 0ff5 24       		.uleb128 0x24
 3570 0ff6 EC080000 		.4byte	.LASF170
 3571 0ffa 04       		.byte	0x4
 3572 0ffb C004     		.2byte	0x4c0
 3573 0ffd 01100000 		.4byte	0x1001
 3574 1001 20       		.uleb128 0x20
 3575 1002 E50F0000 		.4byte	0xfe5
 3576 1006 25       		.uleb128 0x25
 3577 1007 99000000 		.4byte	.LASF171
 3578 100b 01       		.byte	0x1
 3579 100c BB       		.byte	0xbb
 3580 100d B0000000 		.4byte	0xb0
 3581 1011 05       		.uleb128 0x5
 3582 1012 03       		.byte	0x3
 3583 1013 00000000 		.4byte	CapSense_widgetIndex
 3584 1017 25       		.uleb128 0x25
 3585 1018 46030000 		.4byte	.LASF172
 3586 101c 01       		.byte	0x1
 3587 101d BC       		.byte	0xbc
 3588 101e B0000000 		.4byte	0xb0
 3589 1022 05       		.uleb128 0x5
 3590 1023 03       		.byte	0x3
 3591 1024 00000000 		.4byte	CapSense_sensorIndex
 3592 1028 25       		.uleb128 0x25
 3593 1029 600C0000 		.4byte	.LASF173
 3594 102d 01       		.byte	0x1
 3595 102e BD       		.byte	0xbd
 3596 102f 6B000000 		.4byte	0x6b
 3597 1033 05       		.uleb128 0x5
 3598 1034 03       		.byte	0x3
 3599 1035 00000000 		.4byte	CapSense_requestScanAllWidget
 3600 1039 25       		.uleb128 0x25
 3601 103a 500B0000 		.4byte	.LASF174
 3602 103e 01       		.byte	0x1
 3603 103f C0       		.byte	0xc0
 3604 1040 ED060000 		.4byte	0x6ed
 3605 1044 05       		.uleb128 0x5
 3606 1045 03       		.byte	0x3
 3607 1046 00000000 		.4byte	CapSense_curRamSnsPtr
 3608 104a 25       		.uleb128 0x25
 3609 104b 7D090000 		.4byte	.LASF175
 3610 104f 01       		.byte	0x1
 3611 1050 AE       		.byte	0xae
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 118


 3612 1051 1C010000 		.4byte	0x11c
 3613 1055 05       		.uleb128 0x5
 3614 1056 03       		.byte	0x3
 3615 1057 00000000 		.4byte	CapSense_currentSenseMethod
 3616 105b 25       		.uleb128 0x25
 3617 105c 720B0000 		.4byte	.LASF176
 3618 1060 01       		.byte	0x1
 3619 1061 B7       		.byte	0xb7
 3620 1062 6C100000 		.4byte	0x106c
 3621 1066 05       		.uleb128 0x5
 3622 1067 03       		.byte	0x3
 3623 1068 00000000 		.4byte	CapSense_scanFreqIndex
 3624 106c 20       		.uleb128 0x20
 3625 106d 6B000000 		.4byte	0x6b
 3626 1071 25       		.uleb128 0x25
 3627 1072 EA060000 		.4byte	.LASF177
 3628 1076 01       		.byte	0x1
 3629 1077 CF       		.byte	0xcf
 3630 1078 F3090000 		.4byte	0x9f3
 3631 107c 05       		.uleb128 0x5
 3632 107d 03       		.byte	0x3
 3633 107e 00000000 		.4byte	CapSense_curSnsIOPtr
 3634 1082 26       		.uleb128 0x26
 3635 1083 D9070000 		.4byte	.LASF178
 3636 1087 D9070000 		.4byte	.LASF178
 3637 108b 05       		.byte	0x5
 3638 108c D401     		.2byte	0x1d4
 3639 108e 26       		.uleb128 0x26
 3640 108f 0C050000 		.4byte	.LASF179
 3641 1093 0C050000 		.4byte	.LASF179
 3642 1097 05       		.byte	0x5
 3643 1098 D701     		.2byte	0x1d7
 3644 109a 26       		.uleb128 0x26
 3645 109b 05030000 		.4byte	.LASF180
 3646 109f 05030000 		.4byte	.LASF180
 3647 10a3 05       		.byte	0x5
 3648 10a4 B701     		.2byte	0x1b7
 3649 10a6 26       		.uleb128 0x26
 3650 10a7 A70A0000 		.4byte	.LASF181
 3651 10ab A70A0000 		.4byte	.LASF181
 3652 10af 05       		.byte	0x5
 3653 10b0 B901     		.2byte	0x1b9
 3654 10b2 27       		.uleb128 0x27
 3655 10b3 390B0000 		.4byte	.LASF182
 3656 10b7 390B0000 		.4byte	.LASF182
 3657 10bb 06       		.byte	0x6
 3658 10bc E5       		.byte	0xe5
 3659 10bd 27       		.uleb128 0x27
 3660 10be 85040000 		.4byte	.LASF183
 3661 10c2 85040000 		.4byte	.LASF183
 3662 10c6 06       		.byte	0x6
 3663 10c7 E6       		.byte	0xe6
 3664 10c8 26       		.uleb128 0x26
 3665 10c9 4A090000 		.4byte	.LASF184
 3666 10cd 4A090000 		.4byte	.LASF184
 3667 10d1 05       		.byte	0x5
 3668 10d2 C001     		.2byte	0x1c0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 119


 3669 10d4 27       		.uleb128 0x27
 3670 10d5 5F040000 		.4byte	.LASF185
 3671 10d9 5F040000 		.4byte	.LASF185
 3672 10dd 07       		.byte	0x7
 3673 10de 8A       		.byte	0x8a
 3674 10df 26       		.uleb128 0x26
 3675 10e0 D6050000 		.4byte	.LASF186
 3676 10e4 D6050000 		.4byte	.LASF186
 3677 10e8 05       		.byte	0x5
 3678 10e9 D001     		.2byte	0x1d0
 3679 10eb 27       		.uleb128 0x27
 3680 10ec FC080000 		.4byte	.LASF187
 3681 10f0 FC080000 		.4byte	.LASF187
 3682 10f4 07       		.byte	0x7
 3683 10f5 89       		.byte	0x89
 3684 10f6 27       		.uleb128 0x27
 3685 10f7 DB090000 		.4byte	.LASF188
 3686 10fb DB090000 		.4byte	.LASF188
 3687 10ff 08       		.byte	0x8
 3688 1100 18       		.byte	0x18
 3689 1101 26       		.uleb128 0x26
 3690 1102 A0080000 		.4byte	.LASF189
 3691 1106 A0080000 		.4byte	.LASF189
 3692 110a 05       		.byte	0x5
 3693 110b BD01     		.2byte	0x1bd
 3694 110d 27       		.uleb128 0x27
 3695 110e AE000000 		.4byte	.LASF190
 3696 1112 AE000000 		.4byte	.LASF190
 3697 1116 07       		.byte	0x7
 3698 1117 83       		.byte	0x83
 3699 1118 26       		.uleb128 0x26
 3700 1119 2D080000 		.4byte	.LASF191
 3701 111d 2D080000 		.4byte	.LASF191
 3702 1121 05       		.byte	0x5
 3703 1122 C101     		.2byte	0x1c1
 3704 1124 26       		.uleb128 0x26
 3705 1125 9B040000 		.4byte	.LASF192
 3706 1129 9B040000 		.4byte	.LASF192
 3707 112d 05       		.byte	0x5
 3708 112e DB01     		.2byte	0x1db
 3709 1130 27       		.uleb128 0x27
 3710 1131 1D030000 		.4byte	.LASF193
 3711 1135 1D030000 		.4byte	.LASF193
 3712 1139 06       		.byte	0x6
 3713 113a DA       		.byte	0xda
 3714 113b 00       		.byte	0
 3715              		.section	.debug_abbrev,"",%progbits
 3716              	.Ldebug_abbrev0:
 3717 0000 01       		.uleb128 0x1
 3718 0001 11       		.uleb128 0x11
 3719 0002 01       		.byte	0x1
 3720 0003 25       		.uleb128 0x25
 3721 0004 0E       		.uleb128 0xe
 3722 0005 13       		.uleb128 0x13
 3723 0006 0B       		.uleb128 0xb
 3724 0007 03       		.uleb128 0x3
 3725 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 120


 3726 0009 1B       		.uleb128 0x1b
 3727 000a 0E       		.uleb128 0xe
 3728 000b 55       		.uleb128 0x55
 3729 000c 17       		.uleb128 0x17
 3730 000d 11       		.uleb128 0x11
 3731 000e 01       		.uleb128 0x1
 3732 000f 10       		.uleb128 0x10
 3733 0010 17       		.uleb128 0x17
 3734 0011 00       		.byte	0
 3735 0012 00       		.byte	0
 3736 0013 02       		.uleb128 0x2
 3737 0014 24       		.uleb128 0x24
 3738 0015 00       		.byte	0
 3739 0016 0B       		.uleb128 0xb
 3740 0017 0B       		.uleb128 0xb
 3741 0018 3E       		.uleb128 0x3e
 3742 0019 0B       		.uleb128 0xb
 3743 001a 03       		.uleb128 0x3
 3744 001b 0E       		.uleb128 0xe
 3745 001c 00       		.byte	0
 3746 001d 00       		.byte	0
 3747 001e 03       		.uleb128 0x3
 3748 001f 24       		.uleb128 0x24
 3749 0020 00       		.byte	0
 3750 0021 0B       		.uleb128 0xb
 3751 0022 0B       		.uleb128 0xb
 3752 0023 3E       		.uleb128 0x3e
 3753 0024 0B       		.uleb128 0xb
 3754 0025 03       		.uleb128 0x3
 3755 0026 08       		.uleb128 0x8
 3756 0027 00       		.byte	0
 3757 0028 00       		.byte	0
 3758 0029 04       		.uleb128 0x4
 3759 002a 16       		.uleb128 0x16
 3760 002b 00       		.byte	0
 3761 002c 03       		.uleb128 0x3
 3762 002d 0E       		.uleb128 0xe
 3763 002e 3A       		.uleb128 0x3a
 3764 002f 0B       		.uleb128 0xb
 3765 0030 3B       		.uleb128 0x3b
 3766 0031 05       		.uleb128 0x5
 3767 0032 49       		.uleb128 0x49
 3768 0033 13       		.uleb128 0x13
 3769 0034 00       		.byte	0
 3770 0035 00       		.byte	0
 3771 0036 05       		.uleb128 0x5
 3772 0037 35       		.uleb128 0x35
 3773 0038 00       		.byte	0
 3774 0039 49       		.uleb128 0x49
 3775 003a 13       		.uleb128 0x13
 3776 003b 00       		.byte	0
 3777 003c 00       		.byte	0
 3778 003d 06       		.uleb128 0x6
 3779 003e 0F       		.uleb128 0xf
 3780 003f 00       		.byte	0
 3781 0040 0B       		.uleb128 0xb
 3782 0041 0B       		.uleb128 0xb
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 121


 3783 0042 49       		.uleb128 0x49
 3784 0043 13       		.uleb128 0x13
 3785 0044 00       		.byte	0
 3786 0045 00       		.byte	0
 3787 0046 07       		.uleb128 0x7
 3788 0047 15       		.uleb128 0x15
 3789 0048 00       		.byte	0
 3790 0049 27       		.uleb128 0x27
 3791 004a 19       		.uleb128 0x19
 3792 004b 00       		.byte	0
 3793 004c 00       		.byte	0
 3794 004d 08       		.uleb128 0x8
 3795 004e 04       		.uleb128 0x4
 3796 004f 01       		.byte	0x1
 3797 0050 0B       		.uleb128 0xb
 3798 0051 0B       		.uleb128 0xb
 3799 0052 49       		.uleb128 0x49
 3800 0053 13       		.uleb128 0x13
 3801 0054 3A       		.uleb128 0x3a
 3802 0055 0B       		.uleb128 0xb
 3803 0056 3B       		.uleb128 0x3b
 3804 0057 0B       		.uleb128 0xb
 3805 0058 01       		.uleb128 0x1
 3806 0059 13       		.uleb128 0x13
 3807 005a 00       		.byte	0
 3808 005b 00       		.byte	0
 3809 005c 09       		.uleb128 0x9
 3810 005d 28       		.uleb128 0x28
 3811 005e 00       		.byte	0
 3812 005f 03       		.uleb128 0x3
 3813 0060 0E       		.uleb128 0xe
 3814 0061 1C       		.uleb128 0x1c
 3815 0062 0B       		.uleb128 0xb
 3816 0063 00       		.byte	0
 3817 0064 00       		.byte	0
 3818 0065 0A       		.uleb128 0xa
 3819 0066 16       		.uleb128 0x16
 3820 0067 00       		.byte	0
 3821 0068 03       		.uleb128 0x3
 3822 0069 0E       		.uleb128 0xe
 3823 006a 3A       		.uleb128 0x3a
 3824 006b 0B       		.uleb128 0xb
 3825 006c 3B       		.uleb128 0x3b
 3826 006d 0B       		.uleb128 0xb
 3827 006e 49       		.uleb128 0x49
 3828 006f 13       		.uleb128 0x13
 3829 0070 00       		.byte	0
 3830 0071 00       		.byte	0
 3831 0072 0B       		.uleb128 0xb
 3832 0073 13       		.uleb128 0x13
 3833 0074 01       		.byte	0x1
 3834 0075 0B       		.uleb128 0xb
 3835 0076 0B       		.uleb128 0xb
 3836 0077 3A       		.uleb128 0x3a
 3837 0078 0B       		.uleb128 0xb
 3838 0079 3B       		.uleb128 0x3b
 3839 007a 0B       		.uleb128 0xb
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 122


 3840 007b 01       		.uleb128 0x1
 3841 007c 13       		.uleb128 0x13
 3842 007d 00       		.byte	0
 3843 007e 00       		.byte	0
 3844 007f 0C       		.uleb128 0xc
 3845 0080 0D       		.uleb128 0xd
 3846 0081 00       		.byte	0
 3847 0082 03       		.uleb128 0x3
 3848 0083 08       		.uleb128 0x8
 3849 0084 3A       		.uleb128 0x3a
 3850 0085 0B       		.uleb128 0xb
 3851 0086 3B       		.uleb128 0x3b
 3852 0087 0B       		.uleb128 0xb
 3853 0088 49       		.uleb128 0x49
 3854 0089 13       		.uleb128 0x13
 3855 008a 38       		.uleb128 0x38
 3856 008b 0B       		.uleb128 0xb
 3857 008c 00       		.byte	0
 3858 008d 00       		.byte	0
 3859 008e 0D       		.uleb128 0xd
 3860 008f 0D       		.uleb128 0xd
 3861 0090 00       		.byte	0
 3862 0091 03       		.uleb128 0x3
 3863 0092 0E       		.uleb128 0xe
 3864 0093 3A       		.uleb128 0x3a
 3865 0094 0B       		.uleb128 0xb
 3866 0095 3B       		.uleb128 0x3b
 3867 0096 0B       		.uleb128 0xb
 3868 0097 49       		.uleb128 0x49
 3869 0098 13       		.uleb128 0x13
 3870 0099 38       		.uleb128 0x38
 3871 009a 0B       		.uleb128 0xb
 3872 009b 00       		.byte	0
 3873 009c 00       		.byte	0
 3874 009d 0E       		.uleb128 0xe
 3875 009e 01       		.uleb128 0x1
 3876 009f 01       		.byte	0x1
 3877 00a0 49       		.uleb128 0x49
 3878 00a1 13       		.uleb128 0x13
 3879 00a2 01       		.uleb128 0x1
 3880 00a3 13       		.uleb128 0x13
 3881 00a4 00       		.byte	0
 3882 00a5 00       		.byte	0
 3883 00a6 0F       		.uleb128 0xf
 3884 00a7 21       		.uleb128 0x21
 3885 00a8 00       		.byte	0
 3886 00a9 49       		.uleb128 0x49
 3887 00aa 13       		.uleb128 0x13
 3888 00ab 2F       		.uleb128 0x2f
 3889 00ac 0B       		.uleb128 0xb
 3890 00ad 00       		.byte	0
 3891 00ae 00       		.byte	0
 3892 00af 10       		.uleb128 0x10
 3893 00b0 0D       		.uleb128 0xd
 3894 00b1 00       		.byte	0
 3895 00b2 03       		.uleb128 0x3
 3896 00b3 0E       		.uleb128 0xe
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 123


 3897 00b4 3A       		.uleb128 0x3a
 3898 00b5 0B       		.uleb128 0xb
 3899 00b6 3B       		.uleb128 0x3b
 3900 00b7 05       		.uleb128 0x5
 3901 00b8 49       		.uleb128 0x49
 3902 00b9 13       		.uleb128 0x13
 3903 00ba 38       		.uleb128 0x38
 3904 00bb 0B       		.uleb128 0xb
 3905 00bc 00       		.byte	0
 3906 00bd 00       		.byte	0
 3907 00be 11       		.uleb128 0x11
 3908 00bf 13       		.uleb128 0x13
 3909 00c0 01       		.byte	0x1
 3910 00c1 0B       		.uleb128 0xb
 3911 00c2 0B       		.uleb128 0xb
 3912 00c3 3A       		.uleb128 0x3a
 3913 00c4 0B       		.uleb128 0xb
 3914 00c5 3B       		.uleb128 0x3b
 3915 00c6 05       		.uleb128 0x5
 3916 00c7 01       		.uleb128 0x1
 3917 00c8 13       		.uleb128 0x13
 3918 00c9 00       		.byte	0
 3919 00ca 00       		.byte	0
 3920 00cb 12       		.uleb128 0x12
 3921 00cc 0D       		.uleb128 0xd
 3922 00cd 00       		.byte	0
 3923 00ce 03       		.uleb128 0x3
 3924 00cf 08       		.uleb128 0x8
 3925 00d0 3A       		.uleb128 0x3a
 3926 00d1 0B       		.uleb128 0xb
 3927 00d2 3B       		.uleb128 0x3b
 3928 00d3 05       		.uleb128 0x5
 3929 00d4 49       		.uleb128 0x49
 3930 00d5 13       		.uleb128 0x13
 3931 00d6 38       		.uleb128 0x38
 3932 00d7 0B       		.uleb128 0xb
 3933 00d8 00       		.byte	0
 3934 00d9 00       		.byte	0
 3935 00da 13       		.uleb128 0x13
 3936 00db 26       		.uleb128 0x26
 3937 00dc 00       		.byte	0
 3938 00dd 00       		.byte	0
 3939 00de 00       		.byte	0
 3940 00df 14       		.uleb128 0x14
 3941 00e0 0F       		.uleb128 0xf
 3942 00e1 00       		.byte	0
 3943 00e2 0B       		.uleb128 0xb
 3944 00e3 0B       		.uleb128 0xb
 3945 00e4 00       		.byte	0
 3946 00e5 00       		.byte	0
 3947 00e6 15       		.uleb128 0x15
 3948 00e7 2E       		.uleb128 0x2e
 3949 00e8 01       		.byte	0x1
 3950 00e9 03       		.uleb128 0x3
 3951 00ea 0E       		.uleb128 0xe
 3952 00eb 3A       		.uleb128 0x3a
 3953 00ec 0B       		.uleb128 0xb
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 124


 3954 00ed 3B       		.uleb128 0x3b
 3955 00ee 05       		.uleb128 0x5
 3956 00ef 27       		.uleb128 0x27
 3957 00f0 19       		.uleb128 0x19
 3958 00f1 49       		.uleb128 0x49
 3959 00f2 13       		.uleb128 0x13
 3960 00f3 11       		.uleb128 0x11
 3961 00f4 01       		.uleb128 0x1
 3962 00f5 12       		.uleb128 0x12
 3963 00f6 06       		.uleb128 0x6
 3964 00f7 40       		.uleb128 0x40
 3965 00f8 18       		.uleb128 0x18
 3966 00f9 9642     		.uleb128 0x2116
 3967 00fb 19       		.uleb128 0x19
 3968 00fc 01       		.uleb128 0x1
 3969 00fd 13       		.uleb128 0x13
 3970 00fe 00       		.byte	0
 3971 00ff 00       		.byte	0
 3972 0100 16       		.uleb128 0x16
 3973 0101 05       		.uleb128 0x5
 3974 0102 00       		.byte	0
 3975 0103 03       		.uleb128 0x3
 3976 0104 0E       		.uleb128 0xe
 3977 0105 3A       		.uleb128 0x3a
 3978 0106 0B       		.uleb128 0xb
 3979 0107 3B       		.uleb128 0x3b
 3980 0108 05       		.uleb128 0x5
 3981 0109 49       		.uleb128 0x49
 3982 010a 13       		.uleb128 0x13
 3983 010b 02       		.uleb128 0x2
 3984 010c 17       		.uleb128 0x17
 3985 010d 00       		.byte	0
 3986 010e 00       		.byte	0
 3987 010f 17       		.uleb128 0x17
 3988 0110 34       		.uleb128 0x34
 3989 0111 00       		.byte	0
 3990 0112 03       		.uleb128 0x3
 3991 0113 0E       		.uleb128 0xe
 3992 0114 3A       		.uleb128 0x3a
 3993 0115 0B       		.uleb128 0xb
 3994 0116 3B       		.uleb128 0x3b
 3995 0117 05       		.uleb128 0x5
 3996 0118 49       		.uleb128 0x49
 3997 0119 13       		.uleb128 0x13
 3998 011a 02       		.uleb128 0x2
 3999 011b 17       		.uleb128 0x17
 4000 011c 00       		.byte	0
 4001 011d 00       		.byte	0
 4002 011e 18       		.uleb128 0x18
 4003 011f 2E       		.uleb128 0x2e
 4004 0120 01       		.byte	0x1
 4005 0121 03       		.uleb128 0x3
 4006 0122 0E       		.uleb128 0xe
 4007 0123 3A       		.uleb128 0x3a
 4008 0124 0B       		.uleb128 0xb
 4009 0125 3B       		.uleb128 0x3b
 4010 0126 05       		.uleb128 0x5
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 125


 4011 0127 27       		.uleb128 0x27
 4012 0128 19       		.uleb128 0x19
 4013 0129 11       		.uleb128 0x11
 4014 012a 01       		.uleb128 0x1
 4015 012b 12       		.uleb128 0x12
 4016 012c 06       		.uleb128 0x6
 4017 012d 40       		.uleb128 0x40
 4018 012e 18       		.uleb128 0x18
 4019 012f 9742     		.uleb128 0x2117
 4020 0131 19       		.uleb128 0x19
 4021 0132 01       		.uleb128 0x1
 4022 0133 13       		.uleb128 0x13
 4023 0134 00       		.byte	0
 4024 0135 00       		.byte	0
 4025 0136 19       		.uleb128 0x19
 4026 0137 898201   		.uleb128 0x4109
 4027 013a 00       		.byte	0
 4028 013b 11       		.uleb128 0x11
 4029 013c 01       		.uleb128 0x1
 4030 013d 31       		.uleb128 0x31
 4031 013e 13       		.uleb128 0x13
 4032 013f 00       		.byte	0
 4033 0140 00       		.byte	0
 4034 0141 1A       		.uleb128 0x1a
 4035 0142 2E       		.uleb128 0x2e
 4036 0143 00       		.byte	0
 4037 0144 3F       		.uleb128 0x3f
 4038 0145 19       		.uleb128 0x19
 4039 0146 03       		.uleb128 0x3
 4040 0147 0E       		.uleb128 0xe
 4041 0148 3A       		.uleb128 0x3a
 4042 0149 0B       		.uleb128 0xb
 4043 014a 3B       		.uleb128 0x3b
 4044 014b 0B       		.uleb128 0xb
 4045 014c 27       		.uleb128 0x27
 4046 014d 19       		.uleb128 0x19
 4047 014e 49       		.uleb128 0x49
 4048 014f 13       		.uleb128 0x13
 4049 0150 11       		.uleb128 0x11
 4050 0151 01       		.uleb128 0x1
 4051 0152 12       		.uleb128 0x12
 4052 0153 06       		.uleb128 0x6
 4053 0154 40       		.uleb128 0x40
 4054 0155 18       		.uleb128 0x18
 4055 0156 9742     		.uleb128 0x2117
 4056 0158 19       		.uleb128 0x19
 4057 0159 00       		.byte	0
 4058 015a 00       		.byte	0
 4059 015b 1B       		.uleb128 0x1b
 4060 015c 2E       		.uleb128 0x2e
 4061 015d 01       		.byte	0x1
 4062 015e 3F       		.uleb128 0x3f
 4063 015f 19       		.uleb128 0x19
 4064 0160 03       		.uleb128 0x3
 4065 0161 0E       		.uleb128 0xe
 4066 0162 3A       		.uleb128 0x3a
 4067 0163 0B       		.uleb128 0xb
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 126


 4068 0164 3B       		.uleb128 0x3b
 4069 0165 05       		.uleb128 0x5
 4070 0166 27       		.uleb128 0x27
 4071 0167 19       		.uleb128 0x19
 4072 0168 49       		.uleb128 0x49
 4073 0169 13       		.uleb128 0x13
 4074 016a 11       		.uleb128 0x11
 4075 016b 01       		.uleb128 0x1
 4076 016c 12       		.uleb128 0x12
 4077 016d 06       		.uleb128 0x6
 4078 016e 40       		.uleb128 0x40
 4079 016f 18       		.uleb128 0x18
 4080 0170 9742     		.uleb128 0x2117
 4081 0172 19       		.uleb128 0x19
 4082 0173 01       		.uleb128 0x1
 4083 0174 13       		.uleb128 0x13
 4084 0175 00       		.byte	0
 4085 0176 00       		.byte	0
 4086 0177 1C       		.uleb128 0x1c
 4087 0178 898201   		.uleb128 0x4109
 4088 017b 01       		.byte	0x1
 4089 017c 11       		.uleb128 0x11
 4090 017d 01       		.uleb128 0x1
 4091 017e 31       		.uleb128 0x31
 4092 017f 13       		.uleb128 0x13
 4093 0180 01       		.uleb128 0x1
 4094 0181 13       		.uleb128 0x13
 4095 0182 00       		.byte	0
 4096 0183 00       		.byte	0
 4097 0184 1D       		.uleb128 0x1d
 4098 0185 8A8201   		.uleb128 0x410a
 4099 0188 00       		.byte	0
 4100 0189 02       		.uleb128 0x2
 4101 018a 18       		.uleb128 0x18
 4102 018b 9142     		.uleb128 0x2111
 4103 018d 18       		.uleb128 0x18
 4104 018e 00       		.byte	0
 4105 018f 00       		.byte	0
 4106 0190 1E       		.uleb128 0x1e
 4107 0191 2E       		.uleb128 0x2e
 4108 0192 01       		.byte	0x1
 4109 0193 3F       		.uleb128 0x3f
 4110 0194 19       		.uleb128 0x19
 4111 0195 03       		.uleb128 0x3
 4112 0196 0E       		.uleb128 0xe
 4113 0197 3A       		.uleb128 0x3a
 4114 0198 0B       		.uleb128 0xb
 4115 0199 3B       		.uleb128 0x3b
 4116 019a 05       		.uleb128 0x5
 4117 019b 27       		.uleb128 0x27
 4118 019c 19       		.uleb128 0x19
 4119 019d 11       		.uleb128 0x11
 4120 019e 01       		.uleb128 0x1
 4121 019f 12       		.uleb128 0x12
 4122 01a0 06       		.uleb128 0x6
 4123 01a1 40       		.uleb128 0x40
 4124 01a2 18       		.uleb128 0x18
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 127


 4125 01a3 9742     		.uleb128 0x2117
 4126 01a5 19       		.uleb128 0x19
 4127 01a6 01       		.uleb128 0x1
 4128 01a7 13       		.uleb128 0x13
 4129 01a8 00       		.byte	0
 4130 01a9 00       		.byte	0
 4131 01aa 1F       		.uleb128 0x1f
 4132 01ab 34       		.uleb128 0x34
 4133 01ac 00       		.byte	0
 4134 01ad 03       		.uleb128 0x3
 4135 01ae 0E       		.uleb128 0xe
 4136 01af 3A       		.uleb128 0x3a
 4137 01b0 0B       		.uleb128 0xb
 4138 01b1 3B       		.uleb128 0x3b
 4139 01b2 05       		.uleb128 0x5
 4140 01b3 49       		.uleb128 0x49
 4141 01b4 13       		.uleb128 0x13
 4142 01b5 1C       		.uleb128 0x1c
 4143 01b6 0B       		.uleb128 0xb
 4144 01b7 00       		.byte	0
 4145 01b8 00       		.byte	0
 4146 01b9 20       		.uleb128 0x20
 4147 01ba 26       		.uleb128 0x26
 4148 01bb 00       		.byte	0
 4149 01bc 49       		.uleb128 0x49
 4150 01bd 13       		.uleb128 0x13
 4151 01be 00       		.byte	0
 4152 01bf 00       		.byte	0
 4153 01c0 21       		.uleb128 0x21
 4154 01c1 898201   		.uleb128 0x4109
 4155 01c4 01       		.byte	0x1
 4156 01c5 11       		.uleb128 0x11
 4157 01c6 01       		.uleb128 0x1
 4158 01c7 31       		.uleb128 0x31
 4159 01c8 13       		.uleb128 0x13
 4160 01c9 00       		.byte	0
 4161 01ca 00       		.byte	0
 4162 01cb 22       		.uleb128 0x22
 4163 01cc 34       		.uleb128 0x34
 4164 01cd 00       		.byte	0
 4165 01ce 03       		.uleb128 0x3
 4166 01cf 0E       		.uleb128 0xe
 4167 01d0 3A       		.uleb128 0x3a
 4168 01d1 0B       		.uleb128 0xb
 4169 01d2 3B       		.uleb128 0x3b
 4170 01d3 05       		.uleb128 0x5
 4171 01d4 49       		.uleb128 0x49
 4172 01d5 13       		.uleb128 0x13
 4173 01d6 02       		.uleb128 0x2
 4174 01d7 18       		.uleb128 0x18
 4175 01d8 00       		.byte	0
 4176 01d9 00       		.byte	0
 4177 01da 23       		.uleb128 0x23
 4178 01db 05       		.uleb128 0x5
 4179 01dc 00       		.byte	0
 4180 01dd 03       		.uleb128 0x3
 4181 01de 0E       		.uleb128 0xe
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 128


 4182 01df 3A       		.uleb128 0x3a
 4183 01e0 0B       		.uleb128 0xb
 4184 01e1 3B       		.uleb128 0x3b
 4185 01e2 05       		.uleb128 0x5
 4186 01e3 49       		.uleb128 0x49
 4187 01e4 13       		.uleb128 0x13
 4188 01e5 02       		.uleb128 0x2
 4189 01e6 18       		.uleb128 0x18
 4190 01e7 00       		.byte	0
 4191 01e8 00       		.byte	0
 4192 01e9 24       		.uleb128 0x24
 4193 01ea 34       		.uleb128 0x34
 4194 01eb 00       		.byte	0
 4195 01ec 03       		.uleb128 0x3
 4196 01ed 0E       		.uleb128 0xe
 4197 01ee 3A       		.uleb128 0x3a
 4198 01ef 0B       		.uleb128 0xb
 4199 01f0 3B       		.uleb128 0x3b
 4200 01f1 05       		.uleb128 0x5
 4201 01f2 49       		.uleb128 0x49
 4202 01f3 13       		.uleb128 0x13
 4203 01f4 3F       		.uleb128 0x3f
 4204 01f5 19       		.uleb128 0x19
 4205 01f6 3C       		.uleb128 0x3c
 4206 01f7 19       		.uleb128 0x19
 4207 01f8 00       		.byte	0
 4208 01f9 00       		.byte	0
 4209 01fa 25       		.uleb128 0x25
 4210 01fb 34       		.uleb128 0x34
 4211 01fc 00       		.byte	0
 4212 01fd 03       		.uleb128 0x3
 4213 01fe 0E       		.uleb128 0xe
 4214 01ff 3A       		.uleb128 0x3a
 4215 0200 0B       		.uleb128 0xb
 4216 0201 3B       		.uleb128 0x3b
 4217 0202 0B       		.uleb128 0xb
 4218 0203 49       		.uleb128 0x49
 4219 0204 13       		.uleb128 0x13
 4220 0205 3F       		.uleb128 0x3f
 4221 0206 19       		.uleb128 0x19
 4222 0207 02       		.uleb128 0x2
 4223 0208 18       		.uleb128 0x18
 4224 0209 00       		.byte	0
 4225 020a 00       		.byte	0
 4226 020b 26       		.uleb128 0x26
 4227 020c 2E       		.uleb128 0x2e
 4228 020d 00       		.byte	0
 4229 020e 3F       		.uleb128 0x3f
 4230 020f 19       		.uleb128 0x19
 4231 0210 3C       		.uleb128 0x3c
 4232 0211 19       		.uleb128 0x19
 4233 0212 6E       		.uleb128 0x6e
 4234 0213 0E       		.uleb128 0xe
 4235 0214 03       		.uleb128 0x3
 4236 0215 0E       		.uleb128 0xe
 4237 0216 3A       		.uleb128 0x3a
 4238 0217 0B       		.uleb128 0xb
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 129


 4239 0218 3B       		.uleb128 0x3b
 4240 0219 05       		.uleb128 0x5
 4241 021a 00       		.byte	0
 4242 021b 00       		.byte	0
 4243 021c 27       		.uleb128 0x27
 4244 021d 2E       		.uleb128 0x2e
 4245 021e 00       		.byte	0
 4246 021f 3F       		.uleb128 0x3f
 4247 0220 19       		.uleb128 0x19
 4248 0221 3C       		.uleb128 0x3c
 4249 0222 19       		.uleb128 0x19
 4250 0223 6E       		.uleb128 0x6e
 4251 0224 0E       		.uleb128 0xe
 4252 0225 03       		.uleb128 0x3
 4253 0226 0E       		.uleb128 0xe
 4254 0227 3A       		.uleb128 0x3a
 4255 0228 0B       		.uleb128 0xb
 4256 0229 3B       		.uleb128 0x3b
 4257 022a 0B       		.uleb128 0xb
 4258 022b 00       		.byte	0
 4259 022c 00       		.byte	0
 4260 022d 00       		.byte	0
 4261              		.section	.debug_loc,"",%progbits
 4262              	.Ldebug_loc0:
 4263              	.LLST0:
 4264 0000 00000000 		.4byte	.LVL0
 4265 0004 14000000 		.4byte	.LVL3
 4266 0008 0100     		.2byte	0x1
 4267 000a 50       		.byte	0x50
 4268 000b 14000000 		.4byte	.LVL3
 4269 000f 76000000 		.4byte	.LVL9
 4270 0013 0100     		.2byte	0x1
 4271 0015 54       		.byte	0x54
 4272 0016 76000000 		.4byte	.LVL9
 4273 001a 84000000 		.4byte	.LFE19
 4274 001e 0400     		.2byte	0x4
 4275 0020 F3       		.byte	0xf3
 4276 0021 01       		.uleb128 0x1
 4277 0022 50       		.byte	0x50
 4278 0023 9F       		.byte	0x9f
 4279 0024 00000000 		.4byte	0
 4280 0028 00000000 		.4byte	0
 4281              	.LLST1:
 4282 002c 00000000 		.4byte	.LVL0
 4283 0030 12000000 		.4byte	.LVL2
 4284 0034 0100     		.2byte	0x1
 4285 0036 51       		.byte	0x51
 4286 0037 12000000 		.4byte	.LVL2
 4287 003b 76000000 		.4byte	.LVL10
 4288 003f 0100     		.2byte	0x1
 4289 0041 55       		.byte	0x55
 4290 0042 76000000 		.4byte	.LVL10
 4291 0046 84000000 		.4byte	.LFE19
 4292 004a 0400     		.2byte	0x4
 4293 004c F3       		.byte	0xf3
 4294 004d 01       		.uleb128 0x1
 4295 004e 51       		.byte	0x51
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 130


 4296 004f 9F       		.byte	0x9f
 4297 0050 00000000 		.4byte	0
 4298 0054 00000000 		.4byte	0
 4299              	.LLST2:
 4300 0058 06000000 		.4byte	.LVL1
 4301 005c 76000000 		.4byte	.LVL8
 4302 0060 0200     		.2byte	0x2
 4303 0062 30       		.byte	0x30
 4304 0063 9F       		.byte	0x9f
 4305 0064 76000000 		.4byte	.LVL8
 4306 0068 84000000 		.4byte	.LFE19
 4307 006c 0100     		.2byte	0x1
 4308 006e 50       		.byte	0x50
 4309 006f 00000000 		.4byte	0
 4310 0073 00000000 		.4byte	0
 4311              	.LLST3:
 4312 0077 00000000 		.4byte	.LVL11
 4313 007b 20000000 		.4byte	.LVL15
 4314 007f 0100     		.2byte	0x1
 4315 0081 50       		.byte	0x50
 4316 0082 20000000 		.4byte	.LVL15
 4317 0086 23000000 		.4byte	.LVL16-1
 4318 008a 0100     		.2byte	0x1
 4319 008c 51       		.byte	0x51
 4320 008d 23000000 		.4byte	.LVL16-1
 4321 0091 38000000 		.4byte	.LVL21
 4322 0095 0400     		.2byte	0x4
 4323 0097 F3       		.byte	0xf3
 4324 0098 01       		.uleb128 0x1
 4325 0099 50       		.byte	0x50
 4326 009a 9F       		.byte	0x9f
 4327 009b 38000000 		.4byte	.LVL21
 4328 009f 3E000000 		.4byte	.LVL24
 4329 00a3 0100     		.2byte	0x1
 4330 00a5 50       		.byte	0x50
 4331 00a6 3E000000 		.4byte	.LVL24
 4332 00aa 42000000 		.4byte	.LFE20
 4333 00ae 0400     		.2byte	0x4
 4334 00b0 F3       		.byte	0xf3
 4335 00b1 01       		.uleb128 0x1
 4336 00b2 50       		.byte	0x50
 4337 00b3 9F       		.byte	0x9f
 4338 00b4 00000000 		.4byte	0
 4339 00b8 00000000 		.4byte	0
 4340              	.LLST4:
 4341 00bc 00000000 		.4byte	.LVL11
 4342 00c0 1E000000 		.4byte	.LVL14
 4343 00c4 0100     		.2byte	0x1
 4344 00c6 51       		.byte	0x51
 4345 00c7 1E000000 		.4byte	.LVL14
 4346 00cb 38000000 		.4byte	.LVL21
 4347 00cf 0400     		.2byte	0x4
 4348 00d1 F3       		.byte	0xf3
 4349 00d2 01       		.uleb128 0x1
 4350 00d3 51       		.byte	0x51
 4351 00d4 9F       		.byte	0x9f
 4352 00d5 38000000 		.4byte	.LVL21
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 131


 4353 00d9 3E000000 		.4byte	.LVL24
 4354 00dd 0100     		.2byte	0x1
 4355 00df 51       		.byte	0x51
 4356 00e0 3E000000 		.4byte	.LVL24
 4357 00e4 42000000 		.4byte	.LFE20
 4358 00e8 0400     		.2byte	0x4
 4359 00ea F3       		.byte	0xf3
 4360 00eb 01       		.uleb128 0x1
 4361 00ec 51       		.byte	0x51
 4362 00ed 9F       		.byte	0x9f
 4363 00ee 00000000 		.4byte	0
 4364 00f2 00000000 		.4byte	0
 4365              	.LLST5:
 4366 00f6 24000000 		.4byte	.LVL16
 4367 00fa 28000000 		.4byte	.LVL17
 4368 00fe 0200     		.2byte	0x2
 4369 0100 30       		.byte	0x30
 4370 0101 9F       		.byte	0x9f
 4371 0102 28000000 		.4byte	.LVL17
 4372 0106 38000000 		.4byte	.LVL21
 4373 010a 0100     		.2byte	0x1
 4374 010c 53       		.byte	0x53
 4375 010d 3E000000 		.4byte	.LVL24
 4376 0111 42000000 		.4byte	.LFE20
 4377 0115 0100     		.2byte	0x1
 4378 0117 53       		.byte	0x53
 4379 0118 00000000 		.4byte	0
 4380 011c 00000000 		.4byte	0
 4381              	.LLST6:
 4382 0120 10000000 		.4byte	.LVL12
 4383 0124 1C000000 		.4byte	.LVL13
 4384 0128 0100     		.2byte	0x1
 4385 012a 53       		.byte	0x53
 4386 012b 38000000 		.4byte	.LVL21
 4387 012f 3A000000 		.4byte	.LVL22
 4388 0133 0100     		.2byte	0x1
 4389 0135 53       		.byte	0x53
 4390 0136 3C000000 		.4byte	.LVL23
 4391 013a 3E000000 		.4byte	.LVL24
 4392 013e 0100     		.2byte	0x1
 4393 0140 53       		.byte	0x53
 4394 0141 00000000 		.4byte	0
 4395 0145 00000000 		.4byte	0
 4396              	.LLST7:
 4397 0149 24000000 		.4byte	.LVL16
 4398 014d 38000000 		.4byte	.LVL21
 4399 0151 0100     		.2byte	0x1
 4400 0153 50       		.byte	0x50
 4401 0154 00000000 		.4byte	0
 4402 0158 00000000 		.4byte	0
 4403              	.LLST8:
 4404 015c 06000000 		.4byte	.LVL25
 4405 0160 0A000000 		.4byte	.LVL26
 4406 0164 0100     		.2byte	0x1
 4407 0166 52       		.byte	0x52
 4408 0167 0A000000 		.4byte	.LVL26
 4409 016b 19000000 		.4byte	.LVL29-1
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 132


 4410 016f 0100     		.2byte	0x1
 4411 0171 53       		.byte	0x53
 4412 0172 1C000000 		.4byte	.LVL30
 4413 0176 20000000 		.4byte	.LVL31
 4414 017a 0100     		.2byte	0x1
 4415 017c 52       		.byte	0x52
 4416 017d 20000000 		.4byte	.LVL31
 4417 0181 25000000 		.4byte	.LVL32-1
 4418 0185 0100     		.2byte	0x1
 4419 0187 53       		.byte	0x53
 4420 0188 00000000 		.4byte	0
 4421 018c 00000000 		.4byte	0
 4422              	.LLST9:
 4423 0190 00000000 		.4byte	.LVL33
 4424 0194 41000000 		.4byte	.LVL35-1
 4425 0198 0100     		.2byte	0x1
 4426 019a 50       		.byte	0x50
 4427 019b 41000000 		.4byte	.LVL35-1
 4428 019f 4C000000 		.4byte	.LFE2
 4429 01a3 0400     		.2byte	0x4
 4430 01a5 F3       		.byte	0xf3
 4431 01a6 01       		.uleb128 0x1
 4432 01a7 50       		.byte	0x50
 4433 01a8 9F       		.byte	0x9f
 4434 01a9 00000000 		.4byte	0
 4435 01ad 00000000 		.4byte	0
 4436              	.LLST10:
 4437 01b1 3A000000 		.4byte	.LVL34
 4438 01b5 44000000 		.4byte	.LVL36
 4439 01b9 0100     		.2byte	0x1
 4440 01bb 54       		.byte	0x54
 4441 01bc 44000000 		.4byte	.LVL36
 4442 01c0 4C000000 		.4byte	.LFE2
 4443 01c4 0100     		.2byte	0x1
 4444 01c6 50       		.byte	0x50
 4445 01c7 00000000 		.4byte	0
 4446 01cb 00000000 		.4byte	0
 4447              	.LLST11:
 4448 01cf 02000000 		.4byte	.LVL37
 4449 01d3 22000000 		.4byte	.LVL39
 4450 01d7 0200     		.2byte	0x2
 4451 01d9 30       		.byte	0x30
 4452 01da 9F       		.byte	0x9f
 4453 01db 22000000 		.4byte	.LVL39
 4454 01df 2C000000 		.4byte	.LFE3
 4455 01e3 0100     		.2byte	0x1
 4456 01e5 50       		.byte	0x50
 4457 01e6 00000000 		.4byte	0
 4458 01ea 00000000 		.4byte	0
 4459              	.LLST12:
 4460 01ee 02000000 		.4byte	.LVL40
 4461 01f2 12000000 		.4byte	.LVL41
 4462 01f6 0300     		.2byte	0x3
 4463 01f8 09       		.byte	0x9
 4464 01f9 FF       		.byte	0xff
 4465 01fa 9F       		.byte	0x9f
 4466 01fb 12000000 		.4byte	.LVL41
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 133


 4467 01ff 14000000 		.4byte	.LVL42
 4468 0203 0100     		.2byte	0x1
 4469 0205 50       		.byte	0x50
 4470 0206 18000000 		.4byte	.LVL43
 4471 020a 31000000 		.4byte	.LVL44-1
 4472 020e 0100     		.2byte	0x1
 4473 0210 50       		.byte	0x50
 4474 0211 32000000 		.4byte	.LVL44
 4475 0215 3C000000 		.4byte	.LVL46
 4476 0219 0100     		.2byte	0x1
 4477 021b 50       		.byte	0x50
 4478 021c 3C000000 		.4byte	.LVL46
 4479 0220 3E000000 		.4byte	.LVL47
 4480 0224 0300     		.2byte	0x3
 4481 0226 09       		.byte	0x9
 4482 0227 FF       		.byte	0xff
 4483 0228 9F       		.byte	0x9f
 4484 0229 3E000000 		.4byte	.LVL47
 4485 022d 48000000 		.4byte	.LFE4
 4486 0231 0100     		.2byte	0x1
 4487 0233 50       		.byte	0x50
 4488 0234 00000000 		.4byte	0
 4489 0238 00000000 		.4byte	0
 4490              	.LLST13:
 4491 023c 12000000 		.4byte	.LVL41
 4492 0240 3C000000 		.4byte	.LVL46
 4493 0244 0100     		.2byte	0x1
 4494 0246 54       		.byte	0x54
 4495 0247 00000000 		.4byte	0
 4496 024b 00000000 		.4byte	0
 4497              	.LLST14:
 4498 024f 00000000 		.4byte	.LVL48
 4499 0253 06000000 		.4byte	.LVL49
 4500 0257 0100     		.2byte	0x1
 4501 0259 50       		.byte	0x50
 4502 025a 06000000 		.4byte	.LVL49
 4503 025e B4000000 		.4byte	.LFE6
 4504 0262 0400     		.2byte	0x4
 4505 0264 F3       		.byte	0xf3
 4506 0265 01       		.uleb128 0x1
 4507 0266 50       		.byte	0x50
 4508 0267 9F       		.byte	0x9f
 4509 0268 00000000 		.4byte	0
 4510 026c 00000000 		.4byte	0
 4511              	.LLST15:
 4512 0270 00000000 		.4byte	.LVL48
 4513 0274 0C000000 		.4byte	.LVL50
 4514 0278 0100     		.2byte	0x1
 4515 027a 51       		.byte	0x51
 4516 027b 0C000000 		.4byte	.LVL50
 4517 027f B4000000 		.4byte	.LFE6
 4518 0283 0400     		.2byte	0x4
 4519 0285 F3       		.byte	0xf3
 4520 0286 01       		.uleb128 0x1
 4521 0287 51       		.byte	0x51
 4522 0288 9F       		.byte	0x9f
 4523 0289 00000000 		.4byte	0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 134


 4524 028d 00000000 		.4byte	0
 4525              	.LLST16:
 4526 0291 00000000 		.4byte	.LVL48
 4527 0295 12000000 		.4byte	.LVL52
 4528 0299 0100     		.2byte	0x1
 4529 029b 52       		.byte	0x52
 4530 029c 12000000 		.4byte	.LVL52
 4531 02a0 AC000000 		.4byte	.LVL66
 4532 02a4 0100     		.2byte	0x1
 4533 02a6 56       		.byte	0x56
 4534 02a7 AC000000 		.4byte	.LVL66
 4535 02ab B4000000 		.4byte	.LFE6
 4536 02af 0400     		.2byte	0x4
 4537 02b1 F3       		.byte	0xf3
 4538 02b2 01       		.uleb128 0x1
 4539 02b3 52       		.byte	0x52
 4540 02b4 9F       		.byte	0x9f
 4541 02b5 00000000 		.4byte	0
 4542 02b9 00000000 		.4byte	0
 4543              	.LLST17:
 4544 02bd 0E000000 		.4byte	.LVL51
 4545 02c1 12000000 		.4byte	.LVL52
 4546 02c5 0200     		.2byte	0x2
 4547 02c7 30       		.byte	0x30
 4548 02c8 9F       		.byte	0x9f
 4549 02c9 12000000 		.4byte	.LVL52
 4550 02cd AC000000 		.4byte	.LVL65
 4551 02d1 0100     		.2byte	0x1
 4552 02d3 55       		.byte	0x55
 4553 02d4 00000000 		.4byte	0
 4554 02d8 00000000 		.4byte	0
 4555              	.LLST18:
 4556 02dc 16000000 		.4byte	.LVL53
 4557 02e0 35000000 		.4byte	.LVL54-1
 4558 02e4 0100     		.2byte	0x1
 4559 02e6 50       		.byte	0x50
 4560 02e7 4C000000 		.4byte	.LVL55
 4561 02eb 6B000000 		.4byte	.LVL56-1
 4562 02ef 0100     		.2byte	0x1
 4563 02f1 50       		.byte	0x50
 4564 02f2 72000000 		.4byte	.LVL57
 4565 02f6 83000000 		.4byte	.LVL58-1
 4566 02fa 0100     		.2byte	0x1
 4567 02fc 50       		.byte	0x50
 4568 02fd 92000000 		.4byte	.LVL60
 4569 0301 A3000000 		.4byte	.LVL61-1
 4570 0305 0100     		.2byte	0x1
 4571 0307 50       		.byte	0x50
 4572 0308 00000000 		.4byte	0
 4573 030c 00000000 		.4byte	0
 4574              	.LLST19:
 4575 0310 0E000000 		.4byte	.LVL51
 4576 0314 AC000000 		.4byte	.LVL64
 4577 0318 0100     		.2byte	0x1
 4578 031a 54       		.byte	0x54
 4579 031b 00000000 		.4byte	0
 4580 031f 00000000 		.4byte	0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 135


 4581              	.LLST20:
 4582 0323 00000000 		.4byte	.LVL67
 4583 0327 13000000 		.4byte	.LVL68-1
 4584 032b 0100     		.2byte	0x1
 4585 032d 50       		.byte	0x50
 4586 032e 13000000 		.4byte	.LVL68-1
 4587 0332 16000000 		.4byte	.LVL69
 4588 0336 0400     		.2byte	0x4
 4589 0338 F3       		.byte	0xf3
 4590 0339 01       		.uleb128 0x1
 4591 033a 50       		.byte	0x50
 4592 033b 9F       		.byte	0x9f
 4593 033c 16000000 		.4byte	.LVL69
 4594 0340 25000000 		.4byte	.LVL70-1
 4595 0344 0100     		.2byte	0x1
 4596 0346 50       		.byte	0x50
 4597 0347 25000000 		.4byte	.LVL70-1
 4598 034b 5C000000 		.4byte	.LFE8
 4599 034f 0400     		.2byte	0x4
 4600 0351 F3       		.byte	0xf3
 4601 0352 01       		.uleb128 0x1
 4602 0353 50       		.byte	0x50
 4603 0354 9F       		.byte	0x9f
 4604 0355 00000000 		.4byte	0
 4605 0359 00000000 		.4byte	0
 4606              	.LLST21:
 4607 035d 08000000 		.4byte	.LVL74
 4608 0361 40000000 		.4byte	.LFE9
 4609 0365 0100     		.2byte	0x1
 4610 0367 53       		.byte	0x53
 4611 0368 00000000 		.4byte	0
 4612 036c 00000000 		.4byte	0
 4613              	.LLST22:
 4614 0370 02000000 		.4byte	.LVL73
 4615 0374 08000000 		.4byte	.LVL74
 4616 0378 0200     		.2byte	0x2
 4617 037a 30       		.byte	0x30
 4618 037b 9F       		.byte	0x9f
 4619 037c 08000000 		.4byte	.LVL74
 4620 0380 40000000 		.4byte	.LFE9
 4621 0384 0100     		.2byte	0x1
 4622 0386 51       		.byte	0x51
 4623 0387 00000000 		.4byte	0
 4624 038b 00000000 		.4byte	0
 4625              	.LLST23:
 4626 038f 0C000000 		.4byte	.LVL75
 4627 0393 1E000000 		.4byte	.LVL78
 4628 0397 0100     		.2byte	0x1
 4629 0399 52       		.byte	0x52
 4630 039a 20000000 		.4byte	.LVL79
 4631 039e 26000000 		.4byte	.LVL80
 4632 03a2 0100     		.2byte	0x1
 4633 03a4 50       		.byte	0x50
 4634 03a5 26000000 		.4byte	.LVL80
 4635 03a9 36000000 		.4byte	.LVL84
 4636 03ad 0100     		.2byte	0x1
 4637 03af 52       		.byte	0x52
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 136


 4638 03b0 00000000 		.4byte	0
 4639 03b4 00000000 		.4byte	0
 4640              	.LLST24:
 4641 03b8 16000000 		.4byte	.LVL86
 4642 03bc 29000000 		.4byte	.LVL87-1
 4643 03c0 0100     		.2byte	0x1
 4644 03c2 50       		.byte	0x50
 4645 03c3 29000000 		.4byte	.LVL87-1
 4646 03c7 2C000000 		.4byte	.LVL88
 4647 03cb 0100     		.2byte	0x1
 4648 03cd 54       		.byte	0x54
 4649 03ce 2C000000 		.4byte	.LVL88
 4650 03d2 54000000 		.4byte	.LVL89
 4651 03d6 0100     		.2byte	0x1
 4652 03d8 50       		.byte	0x50
 4653 03d9 54000000 		.4byte	.LVL89
 4654 03dd 58000000 		.4byte	.LVL90
 4655 03e1 0200     		.2byte	0x2
 4656 03e3 30       		.byte	0x30
 4657 03e4 9F       		.byte	0x9f
 4658 03e5 58000000 		.4byte	.LVL90
 4659 03e9 6A000000 		.4byte	.LVL91
 4660 03ed 0100     		.2byte	0x1
 4661 03ef 50       		.byte	0x50
 4662 03f0 6A000000 		.4byte	.LVL91
 4663 03f4 6E000000 		.4byte	.LVL92
 4664 03f8 0100     		.2byte	0x1
 4665 03fa 54       		.byte	0x54
 4666 03fb 00000000 		.4byte	0
 4667 03ff 00000000 		.4byte	0
 4668              	.LLST25:
 4669 0403 00000000 		.4byte	.LVL93
 4670 0407 05000000 		.4byte	.LVL94-1
 4671 040b 0100     		.2byte	0x1
 4672 040d 50       		.byte	0x50
 4673 040e 05000000 		.4byte	.LVL94-1
 4674 0412 08000000 		.4byte	.LFE11
 4675 0416 0400     		.2byte	0x4
 4676 0418 F3       		.byte	0xf3
 4677 0419 01       		.uleb128 0x1
 4678 041a 50       		.byte	0x50
 4679 041b 9F       		.byte	0x9f
 4680 041c 00000000 		.4byte	0
 4681 0420 00000000 		.4byte	0
 4682              	.LLST26:
 4683 0424 00000000 		.4byte	.LVL95
 4684 0428 08000000 		.4byte	.LVL96
 4685 042c 0100     		.2byte	0x1
 4686 042e 50       		.byte	0x50
 4687 042f 08000000 		.4byte	.LVL96
 4688 0433 0A000000 		.4byte	.LVL97
 4689 0437 0300     		.2byte	0x3
 4690 0439 70       		.byte	0x70
 4691 043a 01       		.sleb128 1
 4692 043b 9F       		.byte	0x9f
 4693 043c 0A000000 		.4byte	.LVL97
 4694 0440 30000000 		.4byte	.LFE12
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 137


 4695 0444 0400     		.2byte	0x4
 4696 0446 F3       		.byte	0xf3
 4697 0447 01       		.uleb128 0x1
 4698 0448 50       		.byte	0x50
 4699 0449 9F       		.byte	0x9f
 4700 044a 00000000 		.4byte	0
 4701 044e 00000000 		.4byte	0
 4702              	.LLST27:
 4703 0452 00000000 		.4byte	.LVL98
 4704 0456 0A000000 		.4byte	.LVL102
 4705 045a 0100     		.2byte	0x1
 4706 045c 50       		.byte	0x50
 4707 045d 0A000000 		.4byte	.LVL102
 4708 0461 0C000000 		.4byte	.LVL103
 4709 0465 0300     		.2byte	0x3
 4710 0467 70       		.byte	0x70
 4711 0468 01       		.sleb128 1
 4712 0469 9F       		.byte	0x9f
 4713 046a 0C000000 		.4byte	.LVL103
 4714 046e 14000000 		.4byte	.LFE13
 4715 0472 0400     		.2byte	0x4
 4716 0474 F3       		.byte	0xf3
 4717 0475 01       		.uleb128 0x1
 4718 0476 50       		.byte	0x50
 4719 0477 9F       		.byte	0x9f
 4720 0478 00000000 		.4byte	0
 4721 047c 00000000 		.4byte	0
 4722              	.LLST28:
 4723 0480 04000000 		.4byte	.LVL99
 4724 0484 06000000 		.4byte	.LVL100
 4725 0488 0100     		.2byte	0x1
 4726 048a 53       		.byte	0x53
 4727 048b 08000000 		.4byte	.LVL101
 4728 048f 0C000000 		.4byte	.LVL103
 4729 0493 0100     		.2byte	0x1
 4730 0495 53       		.byte	0x53
 4731 0496 0C000000 		.4byte	.LVL103
 4732 049a 14000000 		.4byte	.LFE13
 4733 049e 0100     		.2byte	0x1
 4734 04a0 50       		.byte	0x50
 4735 04a1 00000000 		.4byte	0
 4736 04a5 00000000 		.4byte	0
 4737              	.LLST29:
 4738 04a9 00000000 		.4byte	.LVL104
 4739 04ad 06000000 		.4byte	.LVL105
 4740 04b1 0100     		.2byte	0x1
 4741 04b3 50       		.byte	0x50
 4742 04b4 06000000 		.4byte	.LVL105
 4743 04b8 10000000 		.4byte	.LVL108
 4744 04bc 0100     		.2byte	0x1
 4745 04be 54       		.byte	0x54
 4746 04bf 10000000 		.4byte	.LVL108
 4747 04c3 12000000 		.4byte	.LFE14
 4748 04c7 0400     		.2byte	0x4
 4749 04c9 F3       		.byte	0xf3
 4750 04ca 01       		.uleb128 0x1
 4751 04cb 50       		.byte	0x50
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 138


 4752 04cc 9F       		.byte	0x9f
 4753 04cd 00000000 		.4byte	0
 4754 04d1 00000000 		.4byte	0
 4755              	.LLST30:
 4756 04d5 00000000 		.4byte	.LVL104
 4757 04d9 09000000 		.4byte	.LVL106-1
 4758 04dd 0100     		.2byte	0x1
 4759 04df 51       		.byte	0x51
 4760 04e0 09000000 		.4byte	.LVL106-1
 4761 04e4 12000000 		.4byte	.LFE14
 4762 04e8 0400     		.2byte	0x4
 4763 04ea F3       		.byte	0xf3
 4764 04eb 01       		.uleb128 0x1
 4765 04ec 51       		.byte	0x51
 4766 04ed 9F       		.byte	0x9f
 4767 04ee 00000000 		.4byte	0
 4768 04f2 00000000 		.4byte	0
 4769              	.LLST31:
 4770 04f6 00000000 		.4byte	.LVL109
 4771 04fa 12000000 		.4byte	.LVL111
 4772 04fe 0100     		.2byte	0x1
 4773 0500 50       		.byte	0x50
 4774 0501 12000000 		.4byte	.LVL111
 4775 0505 3E000000 		.4byte	.LVL117
 4776 0509 0100     		.2byte	0x1
 4777 050b 54       		.byte	0x54
 4778 050c 3E000000 		.4byte	.LVL117
 4779 0510 44000000 		.4byte	.LFE15
 4780 0514 0400     		.2byte	0x4
 4781 0516 F3       		.byte	0xf3
 4782 0517 01       		.uleb128 0x1
 4783 0518 50       		.byte	0x50
 4784 0519 9F       		.byte	0x9f
 4785 051a 00000000 		.4byte	0
 4786 051e 00000000 		.4byte	0
 4787              	.LLST32:
 4788 0522 04000000 		.4byte	.LVL110
 4789 0526 28000000 		.4byte	.LVL112
 4790 052a 0200     		.2byte	0x2
 4791 052c 30       		.byte	0x30
 4792 052d 9F       		.byte	0x9f
 4793 052e 28000000 		.4byte	.LVL112
 4794 0532 36000000 		.4byte	.LVL114
 4795 0536 0100     		.2byte	0x1
 4796 0538 55       		.byte	0x55
 4797 0539 36000000 		.4byte	.LVL114
 4798 053d 38000000 		.4byte	.LVL115
 4799 0541 0100     		.2byte	0x1
 4800 0543 50       		.byte	0x50
 4801 0544 38000000 		.4byte	.LVL115
 4802 0548 3E000000 		.4byte	.LVL118
 4803 054c 0100     		.2byte	0x1
 4804 054e 55       		.byte	0x55
 4805 054f 3E000000 		.4byte	.LVL118
 4806 0553 44000000 		.4byte	.LFE15
 4807 0557 0100     		.2byte	0x1
 4808 0559 50       		.byte	0x50
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 139


 4809 055a 00000000 		.4byte	0
 4810 055e 00000000 		.4byte	0
 4811              	.LLST33:
 4812 0562 02000000 		.4byte	.LVL119
 4813 0566 08000000 		.4byte	.LVL120
 4814 056a 0200     		.2byte	0x2
 4815 056c 30       		.byte	0x30
 4816 056d 9F       		.byte	0x9f
 4817 056e 08000000 		.4byte	.LVL120
 4818 0572 18000000 		.4byte	.LVL125
 4819 0576 0100     		.2byte	0x1
 4820 0578 55       		.byte	0x55
 4821 0579 18000000 		.4byte	.LVL125
 4822 057d 1A000000 		.4byte	.LFE16
 4823 0581 0100     		.2byte	0x1
 4824 0583 50       		.byte	0x50
 4825 0584 00000000 		.4byte	0
 4826 0588 00000000 		.4byte	0
 4827              	.LLST34:
 4828 058c 02000000 		.4byte	.LVL119
 4829 0590 08000000 		.4byte	.LVL120
 4830 0594 0200     		.2byte	0x2
 4831 0596 30       		.byte	0x30
 4832 0597 9F       		.byte	0x9f
 4833 0598 08000000 		.4byte	.LVL120
 4834 059c 18000000 		.4byte	.LVL124
 4835 05a0 0100     		.2byte	0x1
 4836 05a2 54       		.byte	0x54
 4837 05a3 00000000 		.4byte	0
 4838 05a7 00000000 		.4byte	0
 4839              	.LLST35:
 4840 05ab 02000000 		.4byte	.LVL126
 4841 05af 06000000 		.4byte	.LVL127
 4842 05b3 0200     		.2byte	0x2
 4843 05b5 30       		.byte	0x30
 4844 05b6 9F       		.byte	0x9f
 4845 05b7 06000000 		.4byte	.LVL127
 4846 05bb 2C000000 		.4byte	.LVL133
 4847 05bf 0100     		.2byte	0x1
 4848 05c1 55       		.byte	0x55
 4849 05c2 00000000 		.4byte	0
 4850 05c6 00000000 		.4byte	0
 4851              	.LLST36:
 4852 05ca 0C000000 		.4byte	.LVL128
 4853 05ce 10000000 		.4byte	.LVL129
 4854 05d2 0200     		.2byte	0x2
 4855 05d4 30       		.byte	0x30
 4856 05d5 9F       		.byte	0x9f
 4857 05d6 10000000 		.4byte	.LVL129
 4858 05da 28000000 		.4byte	.LVL132
 4859 05de 0100     		.2byte	0x1
 4860 05e0 54       		.byte	0x54
 4861 05e1 00000000 		.4byte	0
 4862 05e5 00000000 		.4byte	0
 4863              	.LLST37:
 4864 05e9 0C000000 		.4byte	.LVL128
 4865 05ed 28000000 		.4byte	.LVL132
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 140


 4866 05f1 0100     		.2byte	0x1
 4867 05f3 56       		.byte	0x56
 4868 05f4 00000000 		.4byte	0
 4869 05f8 00000000 		.4byte	0
 4870              	.LLST38:
 4871 05fc 00000000 		.4byte	.LVL134
 4872 0600 02000000 		.4byte	.LVL135
 4873 0604 0100     		.2byte	0x1
 4874 0606 50       		.byte	0x50
 4875 0607 02000000 		.4byte	.LVL135
 4876 060b 10000000 		.4byte	.LFE22
 4877 060f 0400     		.2byte	0x4
 4878 0611 F3       		.byte	0xf3
 4879 0612 01       		.uleb128 0x1
 4880 0613 50       		.byte	0x50
 4881 0614 9F       		.byte	0x9f
 4882 0615 00000000 		.4byte	0
 4883 0619 00000000 		.4byte	0
 4884              	.LLST39:
 4885 061d 00000000 		.4byte	.LVL138
 4886 0621 02000000 		.4byte	.LVL139
 4887 0625 0100     		.2byte	0x1
 4888 0627 50       		.byte	0x50
 4889 0628 02000000 		.4byte	.LVL139
 4890 062c 10000000 		.4byte	.LFE23
 4891 0630 0400     		.2byte	0x4
 4892 0632 F3       		.byte	0xf3
 4893 0633 01       		.uleb128 0x1
 4894 0634 50       		.byte	0x50
 4895 0635 9F       		.byte	0x9f
 4896 0636 00000000 		.4byte	0
 4897 063a 00000000 		.4byte	0
 4898              	.LLST40:
 4899 063e 00000000 		.4byte	.LVL141
 4900 0642 12000000 		.4byte	.LVL142
 4901 0646 0100     		.2byte	0x1
 4902 0648 50       		.byte	0x50
 4903 0649 12000000 		.4byte	.LVL142
 4904 064d 1A000000 		.4byte	.LVL143
 4905 0651 0400     		.2byte	0x4
 4906 0653 F3       		.byte	0xf3
 4907 0654 01       		.uleb128 0x1
 4908 0655 50       		.byte	0x50
 4909 0656 9F       		.byte	0x9f
 4910 0657 1A000000 		.4byte	.LVL143
 4911 065b 1C000000 		.4byte	.LVL144
 4912 065f 0100     		.2byte	0x1
 4913 0661 50       		.byte	0x50
 4914 0662 1C000000 		.4byte	.LVL144
 4915 0666 24000000 		.4byte	.LFE24
 4916 066a 0400     		.2byte	0x4
 4917 066c F3       		.byte	0xf3
 4918 066d 01       		.uleb128 0x1
 4919 066e 50       		.byte	0x50
 4920 066f 9F       		.byte	0x9f
 4921 0670 00000000 		.4byte	0
 4922 0674 00000000 		.4byte	0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 141


 4923              	.LLST41:
 4924 0678 20000000 		.4byte	.LVL145
 4925 067c 22000000 		.4byte	.LVL146
 4926 0680 0100     		.2byte	0x1
 4927 0682 50       		.byte	0x50
 4928 0683 00000000 		.4byte	0
 4929 0687 00000000 		.4byte	0
 4930              	.LLST42:
 4931 068b 00000000 		.4byte	.LVL147
 4932 068f 07000000 		.4byte	.LVL148-1
 4933 0693 0100     		.2byte	0x1
 4934 0695 50       		.byte	0x50
 4935 0696 07000000 		.4byte	.LVL148-1
 4936 069a 3A000000 		.4byte	.LFE18
 4937 069e 0400     		.2byte	0x4
 4938 06a0 F3       		.byte	0xf3
 4939 06a1 01       		.uleb128 0x1
 4940 06a2 50       		.byte	0x50
 4941 06a3 9F       		.byte	0x9f
 4942 06a4 00000000 		.4byte	0
 4943 06a8 00000000 		.4byte	0
 4944              	.LLST43:
 4945 06ac 00000000 		.4byte	.LVL147
 4946 06b0 07000000 		.4byte	.LVL148-1
 4947 06b4 0100     		.2byte	0x1
 4948 06b6 51       		.byte	0x51
 4949 06b7 07000000 		.4byte	.LVL148-1
 4950 06bb 38000000 		.4byte	.LVL162
 4951 06bf 0100     		.2byte	0x1
 4952 06c1 56       		.byte	0x56
 4953 06c2 38000000 		.4byte	.LVL162
 4954 06c6 3A000000 		.4byte	.LFE18
 4955 06ca 0400     		.2byte	0x4
 4956 06cc F3       		.byte	0xf3
 4957 06cd 01       		.uleb128 0x1
 4958 06ce 51       		.byte	0x51
 4959 06cf 9F       		.byte	0x9f
 4960 06d0 00000000 		.4byte	0
 4961 06d4 00000000 		.4byte	0
 4962              	.LLST44:
 4963 06d8 1C000000 		.4byte	.LVL154
 4964 06dc 20000000 		.4byte	.LVL155
 4965 06e0 0100     		.2byte	0x1
 4966 06e2 50       		.byte	0x50
 4967 06e3 20000000 		.4byte	.LVL155
 4968 06e7 38000000 		.4byte	.LVL160
 4969 06eb 0100     		.2byte	0x1
 4970 06ed 54       		.byte	0x54
 4971 06ee 00000000 		.4byte	0
 4972 06f2 00000000 		.4byte	0
 4973              	.LLST45:
 4974 06f6 30000000 		.4byte	.LVL158
 4975 06fa 32000000 		.4byte	.LVL159
 4976 06fe 0100     		.2byte	0x1
 4977 0700 50       		.byte	0x50
 4978 0701 00000000 		.4byte	0
 4979 0705 00000000 		.4byte	0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 142


 4980              	.LLST46:
 4981 0709 14000000 		.4byte	.LVL151
 4982 070d 16000000 		.4byte	.LVL152
 4983 0711 0100     		.2byte	0x1
 4984 0713 50       		.byte	0x50
 4985 0714 16000000 		.4byte	.LVL152
 4986 0718 19000000 		.4byte	.LVL153-1
 4987 071c 0100     		.2byte	0x1
 4988 071e 51       		.byte	0x51
 4989 071f 00000000 		.4byte	0
 4990 0723 00000000 		.4byte	0
 4991              	.LLST47:
 4992 0727 0A000000 		.4byte	.LVL149
 4993 072b 11000000 		.4byte	.LVL150-1
 4994 072f 0100     		.2byte	0x1
 4995 0731 50       		.byte	0x50
 4996 0732 11000000 		.4byte	.LVL150-1
 4997 0736 38000000 		.4byte	.LVL161
 4998 073a 0100     		.2byte	0x1
 4999 073c 55       		.byte	0x55
 5000 073d 00000000 		.4byte	0
 5001 0741 00000000 		.4byte	0
 5002              	.LLST48:
 5003 0745 02000000 		.4byte	.LVL163
 5004 0749 06000000 		.4byte	.LVL164
 5005 074d 0200     		.2byte	0x2
 5006 074f 30       		.byte	0x30
 5007 0750 9F       		.byte	0x9f
 5008 0751 06000000 		.4byte	.LVL164
 5009 0755 20000000 		.4byte	.LVL169
 5010 0759 0100     		.2byte	0x1
 5011 075b 54       		.byte	0x54
 5012 075c 00000000 		.4byte	0
 5013 0760 00000000 		.4byte	0
 5014              	.LLST49:
 5015 0764 0E000000 		.4byte	.LVL165
 5016 0768 13000000 		.4byte	.LVL166-1
 5017 076c 0100     		.2byte	0x1
 5018 076e 51       		.byte	0x51
 5019 076f 00000000 		.4byte	0
 5020 0773 00000000 		.4byte	0
 5021              	.LLST50:
 5022 0777 0A000000 		.4byte	.LVL175
 5023 077b 0E000000 		.4byte	.LVL176
 5024 077f 0100     		.2byte	0x1
 5025 0781 51       		.byte	0x51
 5026 0782 0E000000 		.4byte	.LVL176
 5027 0786 13000000 		.4byte	.LVL177-1
 5028 078a 0100     		.2byte	0x1
 5029 078c 53       		.byte	0x53
 5030 078d 1C000000 		.4byte	.LVL179
 5031 0791 25000000 		.4byte	.LVL181-1
 5032 0795 0100     		.2byte	0x1
 5033 0797 53       		.byte	0x53
 5034 0798 2E000000 		.4byte	.LVL183
 5035 079c 3D000000 		.4byte	.LVL186-1
 5036 07a0 0100     		.2byte	0x1
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 143


 5037 07a2 53       		.byte	0x53
 5038 07a3 4A000000 		.4byte	.LVL189
 5039 07a7 4C000000 		.4byte	.LVL190
 5040 07ab 0100     		.2byte	0x1
 5041 07ad 53       		.byte	0x53
 5042 07ae 4C000000 		.4byte	.LVL190
 5043 07b2 52000000 		.4byte	.LVL192
 5044 07b6 0100     		.2byte	0x1
 5045 07b8 55       		.byte	0x55
 5046 07b9 00000000 		.4byte	0
 5047 07bd 00000000 		.4byte	0
 5048              	.LLST51:
 5049 07c1 06000000 		.4byte	.LVL174
 5050 07c5 13000000 		.4byte	.LVL177-1
 5051 07c9 0100     		.2byte	0x1
 5052 07cb 50       		.byte	0x50
 5053 07cc 18000000 		.4byte	.LVL178
 5054 07d0 25000000 		.4byte	.LVL181-1
 5055 07d4 0100     		.2byte	0x1
 5056 07d6 50       		.byte	0x50
 5057 07d7 2A000000 		.4byte	.LVL182
 5058 07db 3D000000 		.4byte	.LVL186-1
 5059 07df 0100     		.2byte	0x1
 5060 07e1 50       		.byte	0x50
 5061 07e2 48000000 		.4byte	.LVL188
 5062 07e6 51000000 		.4byte	.LVL191-1
 5063 07ea 0100     		.2byte	0x1
 5064 07ec 50       		.byte	0x50
 5065 07ed 00000000 		.4byte	0
 5066 07f1 00000000 		.4byte	0
 5067              		.section	.debug_aranges,"",%progbits
 5068 0000 DC000000 		.4byte	0xdc
 5069 0004 0200     		.2byte	0x2
 5070 0006 00000000 		.4byte	.Ldebug_info0
 5071 000a 04       		.byte	0x4
 5072 000b 00       		.byte	0
 5073 000c 0000     		.2byte	0
 5074 000e 0000     		.2byte	0
 5075 0010 00000000 		.4byte	.LFB19
 5076 0014 84000000 		.4byte	.LFE19-.LFB19
 5077 0018 00000000 		.4byte	.LFB20
 5078 001c 42000000 		.4byte	.LFE20-.LFB20
 5079 0020 00000000 		.4byte	.LFB7
 5080 0024 38000000 		.4byte	.LFE7-.LFB7
 5081 0028 00000000 		.4byte	.LFB1
 5082 002c 10000000 		.4byte	.LFE1-.LFB1
 5083 0030 00000000 		.4byte	.LFB2
 5084 0034 4C000000 		.4byte	.LFE2-.LFB2
 5085 0038 00000000 		.4byte	.LFB3
 5086 003c 2C000000 		.4byte	.LFE3-.LFB3
 5087 0040 00000000 		.4byte	.LFB4
 5088 0044 48000000 		.4byte	.LFE4-.LFB4
 5089 0048 00000000 		.4byte	.LFB6
 5090 004c B4000000 		.4byte	.LFE6-.LFB6
 5091 0050 00000000 		.4byte	.LFB8
 5092 0054 5C000000 		.4byte	.LFE8-.LFB8
 5093 0058 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 144


 5094 005c 40000000 		.4byte	.LFE9-.LFB9
 5095 0060 00000000 		.4byte	.LFB10
 5096 0064 78000000 		.4byte	.LFE10-.LFB10
 5097 0068 00000000 		.4byte	.LFB11
 5098 006c 08000000 		.4byte	.LFE11-.LFB11
 5099 0070 00000000 		.4byte	.LFB12
 5100 0074 30000000 		.4byte	.LFE12-.LFB12
 5101 0078 00000000 		.4byte	.LFB13
 5102 007c 14000000 		.4byte	.LFE13-.LFB13
 5103 0080 00000000 		.4byte	.LFB14
 5104 0084 12000000 		.4byte	.LFE14-.LFB14
 5105 0088 00000000 		.4byte	.LFB15
 5106 008c 44000000 		.4byte	.LFE15-.LFB15
 5107 0090 00000000 		.4byte	.LFB16
 5108 0094 1A000000 		.4byte	.LFE16-.LFB16
 5109 0098 00000000 		.4byte	.LFB21
 5110 009c 34000000 		.4byte	.LFE21-.LFB21
 5111 00a0 00000000 		.4byte	.LFB22
 5112 00a4 10000000 		.4byte	.LFE22-.LFB22
 5113 00a8 00000000 		.4byte	.LFB23
 5114 00ac 10000000 		.4byte	.LFE23-.LFB23
 5115 00b0 00000000 		.4byte	.LFB24
 5116 00b4 24000000 		.4byte	.LFE24-.LFB24
 5117 00b8 00000000 		.4byte	.LFB18
 5118 00bc 3A000000 		.4byte	.LFE18-.LFB18
 5119 00c0 00000000 		.4byte	.LFB17
 5120 00c4 28000000 		.4byte	.LFE17-.LFB17
 5121 00c8 00000000 		.4byte	.LFB5
 5122 00cc 14000000 		.4byte	.LFE5-.LFB5
 5123 00d0 00000000 		.4byte	.LFB25
 5124 00d4 68000000 		.4byte	.LFE25-.LFB25
 5125 00d8 00000000 		.4byte	0
 5126 00dc 00000000 		.4byte	0
 5127              		.section	.debug_ranges,"",%progbits
 5128              	.Ldebug_ranges0:
 5129 0000 00000000 		.4byte	.LFB19
 5130 0004 84000000 		.4byte	.LFE19
 5131 0008 00000000 		.4byte	.LFB20
 5132 000c 42000000 		.4byte	.LFE20
 5133 0010 00000000 		.4byte	.LFB7
 5134 0014 38000000 		.4byte	.LFE7
 5135 0018 00000000 		.4byte	.LFB1
 5136 001c 10000000 		.4byte	.LFE1
 5137 0020 00000000 		.4byte	.LFB2
 5138 0024 4C000000 		.4byte	.LFE2
 5139 0028 00000000 		.4byte	.LFB3
 5140 002c 2C000000 		.4byte	.LFE3
 5141 0030 00000000 		.4byte	.LFB4
 5142 0034 48000000 		.4byte	.LFE4
 5143 0038 00000000 		.4byte	.LFB6
 5144 003c B4000000 		.4byte	.LFE6
 5145 0040 00000000 		.4byte	.LFB8
 5146 0044 5C000000 		.4byte	.LFE8
 5147 0048 00000000 		.4byte	.LFB9
 5148 004c 40000000 		.4byte	.LFE9
 5149 0050 00000000 		.4byte	.LFB10
 5150 0054 78000000 		.4byte	.LFE10
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 145


 5151 0058 00000000 		.4byte	.LFB11
 5152 005c 08000000 		.4byte	.LFE11
 5153 0060 00000000 		.4byte	.LFB12
 5154 0064 30000000 		.4byte	.LFE12
 5155 0068 00000000 		.4byte	.LFB13
 5156 006c 14000000 		.4byte	.LFE13
 5157 0070 00000000 		.4byte	.LFB14
 5158 0074 12000000 		.4byte	.LFE14
 5159 0078 00000000 		.4byte	.LFB15
 5160 007c 44000000 		.4byte	.LFE15
 5161 0080 00000000 		.4byte	.LFB16
 5162 0084 1A000000 		.4byte	.LFE16
 5163 0088 00000000 		.4byte	.LFB21
 5164 008c 34000000 		.4byte	.LFE21
 5165 0090 00000000 		.4byte	.LFB22
 5166 0094 10000000 		.4byte	.LFE22
 5167 0098 00000000 		.4byte	.LFB23
 5168 009c 10000000 		.4byte	.LFE23
 5169 00a0 00000000 		.4byte	.LFB24
 5170 00a4 24000000 		.4byte	.LFE24
 5171 00a8 00000000 		.4byte	.LFB18
 5172 00ac 3A000000 		.4byte	.LFE18
 5173 00b0 00000000 		.4byte	.LFB17
 5174 00b4 28000000 		.4byte	.LFE17
 5175 00b8 00000000 		.4byte	.LFB5
 5176 00bc 14000000 		.4byte	.LFE5
 5177 00c0 00000000 		.4byte	.LFB25
 5178 00c4 68000000 		.4byte	.LFE25
 5179 00c8 00000000 		.4byte	0
 5180 00cc 00000000 		.4byte	0
 5181              		.section	.debug_line,"",%progbits
 5182              	.Ldebug_line0:
 5183 0000 66040000 		.section	.debug_str,"MS",%progbits,1
 5183      0200D100 
 5183      00000201 
 5183      FB0E0D00 
 5183      01010101 
 5184              	.LASF154:
 5185 0000 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 5185      656E7365 
 5185      5F537343 
 5185      53444765 
 5185      74436F6C 
 5186              	.LASF128:
 5187 0022 73656E73 		.ascii	"sensorElement\000"
 5187      6F72456C 
 5187      656D656E 
 5187      7400
 5188              	.LASF125:
 5189 0030 7363616E 		.ascii	"scanStatus\000"
 5189      53746174 
 5189      757300
 5190              	.LASF162:
 5191 003b 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 5191      656E7365 
 5191      5F537343 
 5191      53444469 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 146


 5191      7361626C 
 5192              	.LASF137:
 5193 0055 43617053 		.ascii	"CapSense_SsSetIOsInDefaultState\000"
 5193      656E7365 
 5193      5F537353 
 5193      6574494F 
 5193      73496E44 
 5194              	.LASF167:
 5195 0075 43617053 		.ascii	"CapSense_BistDischargeExtCapacitors\000"
 5195      656E7365 
 5195      5F426973 
 5195      74446973 
 5195      63686172 
 5196              	.LASF171:
 5197 0099 43617053 		.ascii	"CapSense_widgetIndex\000"
 5197      656E7365 
 5197      5F776964 
 5197      67657449 
 5197      6E646578 
 5198              	.LASF190:
 5199 00ae 43617053 		.ascii	"CapSense_DsUpdateWidgetCrc\000"
 5199      656E7365 
 5199      5F447355 
 5199      70646174 
 5199      65576964 
 5200              	.LASF82:
 5201 00c9 736E7254 		.ascii	"snrTestWidgetId\000"
 5201      65737457 
 5201      69646765 
 5201      74496400 
 5202              	.LASF20:
 5203 00d9 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 5203      656E7365 
 5203      5F554E44 
 5203      4546494E 
 5203      45445F45 
 5204              	.LASF8:
 5205 00ee 756E7369 		.ascii	"unsigned int\000"
 5205      676E6564 
 5205      20696E74 
 5205      00
 5206              	.LASF69:
 5207 00fb 7363616E 		.ascii	"scanCounter\000"
 5207      436F756E 
 5207      74657200 
 5208              	.LASF67:
 5209 0107 6877436C 		.ascii	"hwClock\000"
 5209      6F636B00 
 5210              	.LASF166:
 5211 010f 696E6974 		.ascii	"initStatus\000"
 5211      53746174 
 5211      757300
 5212              	.LASF139:
 5213 011a 72656756 		.ascii	"regValue\000"
 5213      616C7565 
 5213      00
 5214              	.LASF132:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 147


 5215 0123 696E7465 		.ascii	"interruptState\000"
 5215      72727570 
 5215      74537461 
 5215      746500
 5216              	.LASF89:
 5217 0132 70633250 		.ascii	"pc2Ptr\000"
 5217      747200
 5218              	.LASF117:
 5219 0139 6C667372 		.ascii	"lfsrScale\000"
 5219      5363616C 
 5219      6500
 5220              	.LASF158:
 5221 0143 64697669 		.ascii	"dividerVal\000"
 5221      64657256 
 5221      616C00
 5222              	.LASF118:
 5223 014e 6C667372 		.ascii	"lfsrRange\000"
 5223      52616E67 
 5223      6500
 5224              	.LASF136:
 5225 0158 6D6F6465 		.ascii	"mode\000"
 5225      00
 5226              	.LASF197:
 5227 015d 43617053 		.ascii	"CapSense_IsBusy\000"
 5227      656E7365 
 5227      5F497342 
 5227      75737900 
 5228              	.LASF64:
 5229 016d 43617053 		.ascii	"CapSense_RAM_SNS_CP_STRUCT\000"
 5229      656E7365 
 5229      5F52414D 
 5229      5F534E53 
 5229      5F43505F 
 5230              	.LASF144:
 5231 0188 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 5231      656E7365 
 5231      5F537353 
 5231      65744D6F 
 5231      64436C6B 
 5232              	.LASF153:
 5233 01a9 63757253 		.ascii	"curSnsIOPtr\000"
 5233      6E73494F 
 5233      50747200 
 5234              	.LASF94:
 5235 01b5 6873696F 		.ascii	"hsiomShift\000"
 5235      6D536869 
 5235      667400
 5236              	.LASF41:
 5237 01c0 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 5237      656E7365 
 5237      5F52414D 
 5237      5F57445F 
 5237      4C495354 
 5238              	.LASF130:
 5239 01dc 656C7464 		.ascii	"eltdNum\000"
 5239      4E756D00 
 5240              	.LASF169:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 148


 5241 01e4 43617053 		.ascii	"CapSense_dsFlash\000"
 5241      656E7365 
 5241      5F647346 
 5241      6C617368 
 5241      00
 5242              	.LASF156:
 5243 01f5 70747257 		.ascii	"ptrWdgt\000"
 5243      64677400 
 5244              	.LASF163:
 5245 01fd 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 5245      656E7365 
 5245      5F537353 
 5245      65745769 
 5245      64676574 
 5246              	.LASF138:
 5247 021d 6C6F6F70 		.ascii	"loopIndex\000"
 5247      496E6465 
 5247      7800
 5248              	.LASF72:
 5249 0227 77646774 		.ascii	"wdgtWorking\000"
 5249      576F726B 
 5249      696E6700 
 5250              	.LASF115:
 5251 0233 43617053 		.ascii	"CapSense_SsCalcLfsrScale\000"
 5251      656E7365 
 5251      5F537343 
 5251      616C634C 
 5251      66737253 
 5252              	.LASF12:
 5253 024c 666C6F61 		.ascii	"float\000"
 5253      7400
 5254              	.LASF96:
 5255 0252 73686966 		.ascii	"shift\000"
 5255      7400
 5256              	.LASF151:
 5257 0258 43617053 		.ascii	"CapSense_SsClearCSDSensors\000"
 5257      656E7365 
 5257      5F537343 
 5257      6C656172 
 5257      43534453 
 5258              	.LASF194:
 5259 0273 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5259      43313120 
 5259      352E342E 
 5259      31203230 
 5259      31363036 
 5260 02a6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5260      20726576 
 5260      6973696F 
 5260      6E203233 
 5260      37373135 
 5261 02d9 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 5261      67202D66 
 5261      66756E63 
 5261      74696F6E 
 5261      2D736563 
 5262              	.LASF180:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 149


 5263 0305 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 5263      656E7365 
 5263      5F435344 
 5263      53657475 
 5263      70576964 
 5264              	.LASF193:
 5265 031d 43794465 		.ascii	"CyDelayUs\000"
 5265      6C617955 
 5265      7300
 5266              	.LASF79:
 5267 0327 736E734C 		.ascii	"snsList\000"
 5267      69737400 
 5268              	.LASF7:
 5269 032f 6C6F6E67 		.ascii	"long long unsigned int\000"
 5269      206C6F6E 
 5269      6720756E 
 5269      7369676E 
 5269      65642069 
 5270              	.LASF172:
 5271 0346 43617053 		.ascii	"CapSense_sensorIndex\000"
 5271      656E7365 
 5271      5F73656E 
 5271      736F7249 
 5271      6E646578 
 5272              	.LASF97:
 5273 035b 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 5273      656E7365 
 5273      5F464C41 
 5273      53485F49 
 5273      4F5F5354 
 5274              	.LASF83:
 5275 0374 736E7254 		.ascii	"snrTestSensorId\000"
 5275      65737453 
 5275      656E736F 
 5275      72496400 
 5276              	.LASF105:
 5277 0384 77646774 		.ascii	"wdgtType\000"
 5277      54797065 
 5277      00
 5278              	.LASF116:
 5279 038d 6C667372 		.ascii	"lfsrSize\000"
 5279      53697A65 
 5279      00
 5280              	.LASF157:
 5281 0396 43617053 		.ascii	"CapSense_SsCSDSetColSnsClkDivider\000"
 5281      656E7365 
 5281      5F537343 
 5281      53445365 
 5281      74436F6C 
 5282              	.LASF59:
 5283 03b8 73686F72 		.ascii	"shortedWdgtId\000"
 5283      74656457 
 5283      64677449 
 5283      6400
 5284              	.LASF76:
 5285 03c6 6D6F6443 		.ascii	"modCsdClk\000"
 5285      7364436C 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 150


 5285      6B00
 5286              	.LASF48:
 5287 03d0 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 5287      656E7365 
 5287      5F52414D 
 5287      5F534E53 
 5287      5F535452 
 5288              	.LASF159:
 5289 03e8 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 5289      656E7365 
 5289      5F537343 
 5289      53444361 
 5289      6C635072 
 5290              	.LASF90:
 5291 0402 64725074 		.ascii	"drPtr\000"
 5291      7200
 5292              	.LASF145:
 5293 0408 6D6F6443 		.ascii	"modClk\000"
 5293      6C6B00
 5294              	.LASF81:
 5295 040f 736E7343 		.ascii	"snsCp\000"
 5295      7000
 5296              	.LASF30:
 5297 0415 68797374 		.ascii	"hysteresis\000"
 5297      65726573 
 5297      697300
 5298              	.LASF108:
 5299 0420 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 5299      656E7365 
 5299      5F464C41 
 5299      53485F57 
 5299      445F5354 
 5300              	.LASF32:
 5301 0439 6C6F7742 		.ascii	"lowBslnRst\000"
 5301      736C6E52 
 5301      737400
 5302              	.LASF50:
 5303 0444 74657374 		.ascii	"testResultMask\000"
 5303      52657375 
 5303      6C744D61 
 5303      736B00
 5304              	.LASF104:
 5305 0453 746F7461 		.ascii	"totalNumSns\000"
 5305      6C4E756D 
 5305      536E7300 
 5306              	.LASF185:
 5307 045f 43617053 		.ascii	"CapSense_BistDisableMode\000"
 5307      656E7365 
 5307      5F426973 
 5307      74446973 
 5307      61626C65 
 5308              	.LASF28:
 5309 0478 6E6F6973 		.ascii	"noiseTh\000"
 5309      65546800 
 5310              	.LASF14:
 5311 0480 63686172 		.ascii	"char\000"
 5311      00
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 151


 5312              	.LASF183:
 5313 0485 43794578 		.ascii	"CyExitCriticalSection\000"
 5313      69744372 
 5313      69746963 
 5313      616C5365 
 5313      6374696F 
 5314              	.LASF192:
 5315 049b 43617053 		.ascii	"CapSense_SsCSDGetNumberOfConversions\000"
 5315      656E7365 
 5315      5F537343 
 5315      53444765 
 5315      744E756D 
 5316              	.LASF63:
 5317 04c0 43617053 		.ascii	"CapSense_RAM_SELF_TEST_STRUCT\000"
 5317      656E7365 
 5317      5F52414D 
 5317      5F53454C 
 5317      465F5445 
 5318              	.LASF54:
 5319 04de 676C6243 		.ascii	"glbCrcCalc\000"
 5319      72634361 
 5319      6C6300
 5320              	.LASF10:
 5321 04e9 75696E74 		.ascii	"uint16\000"
 5321      313600
 5322              	.LASF113:
 5323 04f0 636F6E76 		.ascii	"conversionsNum\000"
 5323      65727369 
 5323      6F6E734E 
 5323      756D00
 5324              	.LASF58:
 5325 04ff 696E7642 		.ascii	"invBslnSnsId\000"
 5325      736C6E53 
 5325      6E734964 
 5325      00
 5326              	.LASF179:
 5327 050c 43617053 		.ascii	"CapSense_SsCSDDisableShieldElectrodes\000"
 5327      656E7365 
 5327      5F537343 
 5327      53444469 
 5327      7361626C 
 5328              	.LASF26:
 5329 0532 7265736F 		.ascii	"resolution\000"
 5329      6C757469 
 5329      6F6E00
 5330              	.LASF70:
 5331 053d 73746174 		.ascii	"status\000"
 5331      757300
 5332              	.LASF148:
 5333 0544 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 5333      656E7365 
 5333      5F43616C 
 5333      69627261 
 5333      74655769 
 5334              	.LASF19:
 5335 055d 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 5335      656E7365 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 152


 5335      5F4C4F57 
 5335      5F42534C 
 5335      4E5F5253 
 5336              	.LASF146:
 5337 0578 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 5337      656E7365 
 5337      5F537353 
 5337      6574536E 
 5337      73436C6F 
 5338              	.LASF25:
 5339 0596 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 5339      656E7365 
 5339      5F53454E 
 5339      53455F4D 
 5339      4554484F 
 5340              	.LASF47:
 5341 05b1 69646163 		.ascii	"idacComp\000"
 5341      436F6D70 
 5341      00
 5342              	.LASF88:
 5343 05ba 70635074 		.ascii	"pcPtr\000"
 5343      7200
 5344              	.LASF6:
 5345 05c0 6C6F6E67 		.ascii	"long long int\000"
 5345      206C6F6E 
 5345      6720696E 
 5345      7400
 5346              	.LASF106:
 5347 05ce 6E756D43 		.ascii	"numCols\000"
 5347      6F6C7300 
 5348              	.LASF186:
 5349 05d6 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 5349      656E7365 
 5349      5F537343 
 5349      5344496E 
 5349      69746961 
 5350              	.LASF31:
 5351 05ef 6F6E4465 		.ascii	"onDebounce\000"
 5351      626F756E 
 5351      636500
 5352              	.LASF149:
 5353 05fa 63616C69 		.ascii	"calibrateStatus\000"
 5353      62726174 
 5353      65537461 
 5353      74757300 
 5354              	.LASF78:
 5355 060a 77646774 		.ascii	"wdgtList\000"
 5355      4C697374 
 5355      00
 5356              	.LASF150:
 5357 0613 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 5357      656E7365 
 5357      5F43616C 
 5357      69627261 
 5357      7465416C 
 5358              	.LASF110:
 5359 0630 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 153


 5359      656E7365 
 5359      5F464C41 
 5359      53485F53 
 5359      54525543 
 5360              	.LASF124:
 5361 0646 43617053 		.ascii	"CapSense_Scan\000"
 5361      656E7365 
 5361      5F536361 
 5361      6E00
 5362              	.LASF107:
 5363 0654 70747232 		.ascii	"ptr2SnsCpArr\000"
 5363      536E7343 
 5363      70417272 
 5363      00
 5364              	.LASF168:
 5365 0661 43617053 		.ascii	"CapSense_dsRam\000"
 5365      656E7365 
 5365      5F647352 
 5365      616D00
 5366              	.LASF85:
 5367 0670 736E7254 		.ascii	"snrTestRawCount\000"
 5367      65737452 
 5367      6177436F 
 5367      756E7400 
 5368              	.LASF60:
 5369 0680 73686F72 		.ascii	"shortedSnsId\000"
 5369      74656453 
 5369      6E734964 
 5369      00
 5370              	.LASF29:
 5371 068d 6E4E6F69 		.ascii	"nNoiseTh\000"
 5371      73655468 
 5371      00
 5372              	.LASF75:
 5373 0696 63736430 		.ascii	"csd0Config\000"
 5373      436F6E66 
 5373      696700
 5374              	.LASF17:
 5375 06a1 63796973 		.ascii	"cyisraddress\000"
 5375      72616464 
 5375      72657373 
 5375      00
 5376              	.LASF37:
 5377 06ae 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 5377      656E7365 
 5377      5F52414D 
 5377      5F57445F 
 5377      42415345 
 5378              	.LASF87:
 5379 06ca 6873696F 		.ascii	"hsiomPtr\000"
 5379      6D507472 
 5379      00
 5380              	.LASF11:
 5381 06d3 75696E74 		.ascii	"uint32\000"
 5381      333200
 5382              	.LASF101:
 5383 06da 70747232 		.ascii	"ptr2FltrHistory\000"
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 154


 5383      466C7472 
 5383      48697374 
 5383      6F727900 
 5384              	.LASF177:
 5385 06ea 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 5385      656E7365 
 5385      5F637572 
 5385      536E7349 
 5385      4F507472 
 5386              	.LASF93:
 5387 06ff 6D61736B 		.ascii	"mask\000"
 5387      00
 5388              	.LASF147:
 5389 0704 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 5389      656E7365 
 5389      5F537353 
 5389      6574436C 
 5389      6F636B44 
 5390              	.LASF80:
 5391 0720 73656C66 		.ascii	"selfTest\000"
 5391      54657374 
 5391      00
 5392              	.LASF53:
 5393 0729 73686965 		.ascii	"shieldCap\000"
 5393      6C644361 
 5393      7000
 5394              	.LASF114:
 5395 0733 43617053 		.ascii	"CapSense_SsCalcLfsrSize\000"
 5395      656E7365 
 5395      5F537343 
 5395      616C634C 
 5395      66737253 
 5396              	.LASF127:
 5397 074b 77646774 		.ascii	"wdgtIndex\000"
 5397      496E6465 
 5397      7800
 5398              	.LASF152:
 5399 0755 736E7349 		.ascii	"snsIndex\000"
 5399      6E646578 
 5399      00
 5400              	.LASF24:
 5401 075e 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 5401      656E7365 
 5401      5F53454E 
 5401      53455F4D 
 5401      4554484F 
 5402              	.LASF111:
 5403 077a 6C6F6E67 		.ascii	"long double\000"
 5403      20646F75 
 5403      626C6500 
 5404              	.LASF16:
 5405 0786 72656733 		.ascii	"reg32\000"
 5405      3200
 5406              	.LASF84:
 5407 078c 736E7254 		.ascii	"snrTestScanCounter\000"
 5407      65737453 
 5407      63616E43 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 155


 5407      6F756E74 
 5407      657200
 5408              	.LASF65:
 5409 079f 636F6E66 		.ascii	"configId\000"
 5409      69674964 
 5409      00
 5410              	.LASF100:
 5411 07a8 70747232 		.ascii	"ptr2SnsRam\000"
 5411      536E7352 
 5411      616D00
 5412              	.LASF74:
 5413 07b3 736E7353 		.ascii	"snsStatus\000"
 5413      74617475 
 5413      7300
 5414              	.LASF141:
 5415 07bd 706F7374 		.ascii	"postScanStatus\000"
 5415      5363616E 
 5415      53746174 
 5415      757300
 5416              	.LASF35:
 5417 07cc 736E7343 		.ascii	"snsClkSource\000"
 5417      6C6B536F 
 5417      75726365 
 5417      00
 5418              	.LASF178:
 5419 07d9 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 5419      656E7365 
 5419      5F537343 
 5419      5344456C 
 5419      65637472 
 5420              	.LASF142:
 5421 07f6 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 5421      656E7365 
 5421      5F537349 
 5421      7372496E 
 5421      69746961 
 5422              	.LASF2:
 5423 080f 73686F72 		.ascii	"short int\000"
 5423      7420696E 
 5423      7400
 5424              	.LASF86:
 5425 0819 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 5425      656E7365 
 5425      5F52414D 
 5425      5F535452 
 5425      55435400 
 5426              	.LASF191:
 5427 082d 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 5427      656E7365 
 5427      5F435344 
 5427      44697363 
 5427      6F6E6E65 
 5428              	.LASF4:
 5429 0847 6C6F6E67 		.ascii	"long int\000"
 5429      20696E74 
 5429      00
 5430              	.LASF71:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 156


 5431 0850 77646774 		.ascii	"wdgtEnable\000"
 5431      456E6162 
 5431      6C6500
 5432              	.LASF45:
 5433 085b 64696666 		.ascii	"diff\000"
 5433      00
 5434              	.LASF68:
 5435 0860 74756E65 		.ascii	"tunerCmd\000"
 5435      72436D64 
 5435      00
 5436              	.LASF22:
 5437 0869 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 5437      656E7365 
 5437      5F53454E 
 5437      53455F4D 
 5437      4554484F 
 5438              	.LASF91:
 5439 0885 70735074 		.ascii	"psPtr\000"
 5439      7200
 5440              	.LASF123:
 5441 088b 43617053 		.ascii	"CapSense_SetupWidget\000"
 5441      656E7365 
 5441      5F536574 
 5441      75705769 
 5441      64676574 
 5442              	.LASF189:
 5443 08a0 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 5443      656E7365 
 5443      5F435344 
 5443      43616C69 
 5443      62726174 
 5444              	.LASF57:
 5445 08bc 696E7642 		.ascii	"invBslnWdgtId\000"
 5445      736C6E57 
 5445      64677449 
 5445      6400
 5446              	.LASF51:
 5447 08ca 65787443 		.ascii	"extCap\000"
 5447      617000
 5448              	.LASF39:
 5449 08d1 73746172 		.ascii	"start\000"
 5449      7400
 5450              	.LASF56:
 5451 08d7 77646774 		.ascii	"wdgtCrcId\000"
 5451      43726349 
 5451      6400
 5452              	.LASF73:
 5453 08e1 77646774 		.ascii	"wdgtStatus\000"
 5453      53746174 
 5453      757300
 5454              	.LASF170:
 5455 08ec 43617053 		.ascii	"CapSense_ioList\000"
 5455      656E7365 
 5455      5F696F4C 
 5455      69737400 
 5456              	.LASF187:
 5457 08fc 43617053 		.ascii	"CapSense_BistInitialize\000"
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 157


 5457      656E7365 
 5457      5F426973 
 5457      74496E69 
 5457      7469616C 
 5458              	.LASF52:
 5459 0914 76646461 		.ascii	"vddaVoltage\000"
 5459      566F6C74 
 5459      61676500 
 5460              	.LASF195:
 5461 0920 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 5461      72617465 
 5461      645F536F 
 5461      75726365 
 5461      5C50536F 
 5462              	.LASF184:
 5463 094a 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 5463      656E7365 
 5463      5F435344 
 5463      436F6E6E 
 5463      65637453 
 5464              	.LASF21:
 5465 0961 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 5465      656E7365 
 5465      5F53454E 
 5465      53455F4D 
 5465      4554484F 
 5466              	.LASF175:
 5467 097d 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 5467      656E7365 
 5467      5F637572 
 5467      72656E74 
 5467      53656E73 
 5468              	.LASF160:
 5469 0999 70727353 		.ascii	"prsSize\000"
 5469      697A6500 
 5470              	.LASF36:
 5471 09a1 73697A65 		.ascii	"sizetype\000"
 5471      74797065 
 5471      00
 5472              	.LASF95:
 5473 09aa 64725368 		.ascii	"drShift\000"
 5473      69667400 
 5474              	.LASF5:
 5475 09b2 6C6F6E67 		.ascii	"long unsigned int\000"
 5475      20756E73 
 5475      69676E65 
 5475      6420696E 
 5475      7400
 5476              	.LASF155:
 5477 09c4 72657456 		.ascii	"retVal\000"
 5477      616C00
 5478              	.LASF143:
 5479 09cb 61646472 		.ascii	"address\000"
 5479      65737300 
 5480              	.LASF33:
 5481 09d3 69646163 		.ascii	"idacMod\000"
 5481      4D6F6400 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 158


 5482              	.LASF188:
 5483 09db 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 5483      656E7365 
 5483      5F495352 
 5483      5F537461 
 5483      72744578 
 5484              	.LASF55:
 5485 09f0 77646774 		.ascii	"wdgtCrcCalc\000"
 5485      43726343 
 5485      616C6300 
 5486              	.LASF102:
 5487 09fc 70747232 		.ascii	"ptr2DebounceArr\000"
 5487      4465626F 
 5487      756E6365 
 5487      41727200 
 5488              	.LASF27:
 5489 0a0c 66696E67 		.ascii	"fingerTh\000"
 5489      65725468 
 5489      00
 5490              	.LASF44:
 5491 0a15 62736C6E 		.ascii	"bslnExt\000"
 5491      45787400 
 5492              	.LASF38:
 5493 0a1d 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 5493      656E7365 
 5493      5F52414D 
 5493      5F57445F 
 5493      42555454 
 5494              	.LASF15:
 5495 0a3b 63797374 		.ascii	"cystatus\000"
 5495      61747573 
 5495      00
 5496              	.LASF1:
 5497 0a44 756E7369 		.ascii	"unsigned char\000"
 5497      676E6564 
 5497      20636861 
 5497      7200
 5498              	.LASF134:
 5499 0a52 43617053 		.ascii	"CapSense_SetPinState\000"
 5499      656E7365 
 5499      5F536574 
 5499      50696E53 
 5499      74617465 
 5500              	.LASF103:
 5501 0a67 73746174 		.ascii	"staticConfig\000"
 5501      6963436F 
 5501      6E666967 
 5501      00
 5502              	.LASF133:
 5503 0a74 696F5074 		.ascii	"ioPtr\000"
 5503      7200
 5504              	.LASF99:
 5505 0a7a 70747232 		.ascii	"ptr2WdgtRam\000"
 5505      57646774 
 5505      52616D00 
 5506              	.LASF18:
 5507 0a86 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 159


 5507      656E7365 
 5507      5F544852 
 5507      4553484F 
 5507      4C445F54 
 5508              	.LASF62:
 5509 0a9e 70327053 		.ascii	"p2pSnsId\000"
 5509      6E734964 
 5509      00
 5510              	.LASF181:
 5511 0aa7 43617053 		.ascii	"CapSense_CSDScan\000"
 5511      656E7365 
 5511      5F435344 
 5511      5363616E 
 5511      00
 5512              	.LASF23:
 5513 0ab8 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 5513      656E7365 
 5513      5F53454E 
 5513      53455F4D 
 5513      4554484F 
 5514              	.LASF129:
 5515 0ad5 73746174 		.ascii	"state\000"
 5515      6500
 5516              	.LASF43:
 5517 0adb 62736C6E 		.ascii	"bslnInv\000"
 5517      496E7600 
 5518              	.LASF131:
 5519 0ae3 656C7464 		.ascii	"eltdIndex\000"
 5519      496E6465 
 5519      7800
 5520              	.LASF126:
 5521 0aed 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 5521      656E7365 
 5521      5F536361 
 5521      6E416C6C 
 5521      57696467 
 5522              	.LASF92:
 5523 0b05 6873696F 		.ascii	"hsiomMask\000"
 5523      6D4D6173 
 5523      6B00
 5524              	.LASF40:
 5525 0b0f 706F7765 		.ascii	"power\000"
 5525      7200
 5526              	.LASF34:
 5527 0b15 736E7343 		.ascii	"snsClk\000"
 5527      6C6B00
 5528              	.LASF135:
 5529 0b1c 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 5529      656E7365 
 5529      5F537353 
 5529      77697463 
 5529      6853656E 
 5530              	.LASF182:
 5531 0b39 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5531      74657243 
 5531      72697469 
 5531      63616C53 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 160


 5531      65637469 
 5532              	.LASF174:
 5533 0b50 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 5533      656E7365 
 5533      5F637572 
 5533      52616D53 
 5533      6E735074 
 5534              	.LASF0:
 5535 0b66 7369676E 		.ascii	"signed char\000"
 5535      65642063 
 5535      68617200 
 5536              	.LASF176:
 5537 0b72 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 5537      656E7365 
 5537      5F736361 
 5537      6E467265 
 5537      71496E64 
 5538              	.LASF42:
 5539 0b89 62736C6E 		.ascii	"bsln\000"
 5539      00
 5540              	.LASF3:
 5541 0b8e 73686F72 		.ascii	"short unsigned int\000"
 5541      7420756E 
 5541      7369676E 
 5541      65642069 
 5541      6E7400
 5542              	.LASF61:
 5543 0ba1 70327057 		.ascii	"p2pWdgtId\000"
 5543      64677449 
 5543      6400
 5544              	.LASF140:
 5545 0bab 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 5545      656E7365 
 5545      5F537350 
 5545      6F737441 
 5545      6C6C5769 
 5546              	.LASF98:
 5547 0bc9 70747232 		.ascii	"ptr2SnsFlash\000"
 5547      536E7346 
 5547      6C617368 
 5547      00
 5548              	.LASF119:
 5549 0bd6 6C667372 		.ascii	"lfsrDither\000"
 5549      44697468 
 5549      657200
 5550              	.LASF120:
 5551 0be1 6E657752 		.ascii	"newRegValue\000"
 5551      65675661 
 5551      6C756500 
 5552              	.LASF77:
 5553 0bed 676C6243 		.ascii	"glbCrc\000"
 5553      726300
 5554              	.LASF9:
 5555 0bf4 75696E74 		.ascii	"uint8\000"
 5555      3800
 5556              	.LASF13:
 5557 0bfa 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 161


 5557      6C6500
 5558              	.LASF46:
 5559 0c01 6E656742 		.ascii	"negBslnRstCnt\000"
 5559      736C6E52 
 5559      7374436E 
 5559      7400
 5560              	.LASF165:
 5561 0c0f 43617053 		.ascii	"CapSense_SsInitialize\000"
 5561      656E7365 
 5561      5F537349 
 5561      6E697469 
 5561      616C697A 
 5562              	.LASF112:
 5563 0c25 736E7343 		.ascii	"snsClkDivider\000"
 5563      6C6B4469 
 5563      76696465 
 5563      7200
 5564              	.LASF161:
 5565 0c33 6D6F6443 		.ascii	"modClkDivider\000"
 5565      6C6B4469 
 5565      76696465 
 5565      7200
 5566              	.LASF66:
 5567 0c41 64657669 		.ascii	"deviceId\000"
 5567      63654964 
 5567      00
 5568              	.LASF122:
 5569 0c4a 77696467 		.ascii	"widgetStatus\000"
 5569      65745374 
 5569      61747573 
 5569      00
 5570              	.LASF121:
 5571 0c57 77696467 		.ascii	"widgetId\000"
 5571      65744964 
 5571      00
 5572              	.LASF173:
 5573 0c60 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 5573      656E7365 
 5573      5F726571 
 5573      75657374 
 5573      5363616E 
 5574              	.LASF164:
 5575 0c7e 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 5575      656E7365 
 5575      5F537349 
 5575      6E697469 
 5575      616C697A 
 5576              	.LASF196:
 5577 0ca2 433A5C47 		.ascii	"C:\\GEA_Cypress_proj\\NGFLUI.cywrk.Archive01\\NGFLU"
 5577      45415F43 
 5577      79707265 
 5577      73735F70 
 5577      726F6A5C 
 5578 0cd2 495C4E47 		.ascii	"I\\NGFLUI_Vikram_Slave.cydsn\000"
 5578      464C5549 
 5578      5F56696B 
 5578      72616D5F 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccjypiuz.s 			page 162


 5578      536C6176 
 5579              	.LASF49:
 5580 0cee 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 5580      656E7365 
 5580      5F52414D 
 5580      5F534E53 
 5580      5F4C4953 
 5581              	.LASF109:
 5582 0d0b 77646774 		.ascii	"wdgtArray\000"
 5582      41727261 
 5582      7900
 5583              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
