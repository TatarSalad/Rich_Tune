ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_uidivmod
  20              		.section	.text.CapSense_SsCalcLfsrSize,"ax",%progbits
  21              		.align	2
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_SsCalcLfsrSize, %function
  25              	CapSense_SsCalcLfsrSize:
  26              	.LFB19:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 6.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v6.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (0u != CapSense_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 3


  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 4


 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 5


 202:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDSetupWidgetExt(), CapSense_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 6


 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_I_REP
 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 7


 316:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 317:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 369:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 8


 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 374:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 9


 430:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 431:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 477:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 10


 487:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 530:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 531:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 534:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 11


 544:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 545:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 578:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 579:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 580:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 581:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 582:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 583:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 584:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 585:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 586:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 587:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 588:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 589:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 590:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 592:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 593:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 12


 601:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx signal is routed to the sensor
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 645:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 646:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 647:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 648:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 650:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 651:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 653:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 654:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 655:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 13


 658:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 659:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 664:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 675:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 676:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 677:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 678:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 679:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 681:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 682:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 683:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 684:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 685:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 687:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 688:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 689:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 690:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 691:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 692:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 693:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 695:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 696:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 705:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 706:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 709:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 714:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 14


 715:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 716:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 717:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 719:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 725:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 728:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 734:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 735:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 736:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 738:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 740:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 745:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 746:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 750:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 751:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 765:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 767:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR);
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 769:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 15


 772:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 773:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN)))
 774:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 775:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 776:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 777:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 778:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 779:Generated_Source\PSoC4/CapSense_Sensing.c ****                    ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 780:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN))) */
 781:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 782:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 783:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 784:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 785:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 786:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 787:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 788:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_CSH_HSIOM_PTR);
 789:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_CSH_TO_AMUXBUS_B_MASK << CapSense_CSH_HSIOM_
 790:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_CSH_HSIOM_PTR, newRegValue);
 791:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 792:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 793:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 794:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 795:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 796:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)) */
 799:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 800:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 801:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 803:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 804:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 805:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 806:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 807:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 808:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 809:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 810:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 811:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 812:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 813:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 814:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 815:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 816:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 817:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
 818:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 819:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 820:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 821:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 822:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 823:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 824:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 825:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 826:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 827:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 828:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 16


 829:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 831:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 832:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
 833:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 834:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 835:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
 837:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 838:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
 839:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 840:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 841:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 842:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 849:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 853:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 858:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 859:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 863:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 864:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
 869:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* CapSense_USES_PORT_3 */
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 871:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 872:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 873:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 874:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
 875:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 876:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 879:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanned.
 880:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 881:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 883:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 884:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 885:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSD mode.
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 17


 886:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 887:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 889:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 890:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSX mode.
 891:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 892:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
 895:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
 896:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
 897:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
 898:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
 899:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 901:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
 902:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 904:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 905:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
 907:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
 910:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
 935:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 936:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 937:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 18


 943:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 957:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 959:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 966:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 969:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 972:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 975:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 976:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 977:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 978:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetIOsInDefaultState
 980:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 981:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 982:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 983:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 988:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
 989:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
 990:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
 992:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 993:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
 994:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
 995:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 996:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
 997:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
 998:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 999:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 19


1000:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetIOsInDefaultState(void)
1001:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
1003:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
1004:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 regValue;
1005:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1006:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1010:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 1. Disconnect HSIOM.
1011:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 2. Set strong DM.
1012:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 3. Set pin state to logic 0.
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1022:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1026:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1030:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1032:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****     
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ISX_EN)
1036:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXSetDefaultDigital();
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1038:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1039:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 20


1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1058:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1064:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1066:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1067:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1076:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1078:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1080:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1082:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1084:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1086:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1088:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_EN) && \
1090:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&  \
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION))
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsSetIOsInDefaultState();
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) && \
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE != CapSense_CSD_SHIELD_EN) &&  \
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION)) */
1096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1098:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1103:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1105:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1106:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1107:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1108:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1109:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1110:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1111:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1112:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1113:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 21


1114:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1115:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1116:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1117:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1118:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1119:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1120:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1121:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1122:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1123:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1124:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1131:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1133:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1135:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1139:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1141:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1142:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1143:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1144:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1145:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1146:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1147:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1148:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1149:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1150:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1151:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1152:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1154:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1155:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1156:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1157:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1158:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1159:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1160:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1161:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1162:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1163:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1164:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1165:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1166:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1168:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1169:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 22


1171:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1174:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1177:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1179:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1180:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1181:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1182:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1183:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1184:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1185:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1186:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1187:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1188:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1189:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1190:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1191:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1192:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1193:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1194:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1195:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1196:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1197:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1198:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1200:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1202:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1203:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1207:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1210:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1211:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1212:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1215:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1218:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1224:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1227:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 23


1228:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1229:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1230:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1232:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1233:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1239:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1240:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1241:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1242:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1243:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1244:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1245:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1246:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1247:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1248:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1249:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1250:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1252:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1253:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1254:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1255:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1256:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1257:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1258:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1259:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1260:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1261:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
1262:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1263:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1264:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1265:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1266:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1269:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1270:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1271:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1272:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1273:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1274:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1275:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1277:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1278:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1279:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1281:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1282:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1283:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 24


1285:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1286:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1287:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1289:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1291:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1292:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1293:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1294:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1296:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1297:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1299:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1300:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1301:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1302:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1303:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1304:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1305:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1306:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1307:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1308:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1309:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1310:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1311:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1312:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1313:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1314:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1315:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1316:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1318:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1320:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1324:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1325:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1326:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1329:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1331:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1332:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1337:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1339:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 25


1342:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1343:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1347:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1351:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1352:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1355:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1356:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1357:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1359:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1360:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1361:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1363:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1364:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1365:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1366:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1367:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1368:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1369:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1370:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1371:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1372:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1373:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1376:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1377:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1378:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1379:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1380:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1385:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1386:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1387:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1388:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1389:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1390:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1391:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1392:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1393:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1396:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
1397:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1398:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter. 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 26


1399:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1400:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1401:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1402:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1403:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1404:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1405:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1406:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1407:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1408:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1409:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1410:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1411:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1412:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1413:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1414:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1415:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1416:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1417:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1418:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1424:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1429:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1431:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1436:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1437:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1438:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1443:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1445:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1450:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1451:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1453:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 27


1456:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1457:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1458:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1459:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1463:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1466:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1467:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1468:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1469:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1471:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1472:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1473:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1474:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1475:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1476:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1477:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1478:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1479:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1480:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1481:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1483:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1484:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1485:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1486:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1488:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1490:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1492:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1494:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****              /* Update CRC */
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN)
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_DsUpdateWidgetCrc(widgetId);
1498:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN) */
1499:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1501:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1503:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1504:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1507:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1512:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 28


1513:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1514:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1518:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1526:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1531:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1539:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1543:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1545:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1547:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1550:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1551:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1555:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1556:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
1557:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1558:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1559:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense operation.
1561:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1562:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1564:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1566:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1567:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1568:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 29


1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1572:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
1576:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1577:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1578:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1579:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cp = 0uL;
1581:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cpRow = 0uL;
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cpWidget[CapSense_TOTAL_WIDGETS];
1586:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1588:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Configure common config variables */
1590:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_CSD_IDAC_GAIN_VALUE_NA;
1593:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1595:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk);
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif ((CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) && (CapSense_DISABLE == CY_PSOC4_400
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1608:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1610:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Initialize CSD mode */
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDInitialize();
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_CSX_EN) */
1614:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1616:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sensor Cp
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1621:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sense clock for all the widgets */
1623:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 30


1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1630:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1632:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = CapSense_CALIBRATION_RESOLUTION;
1633:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1635:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_CALIB
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
1645:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1647:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_LEVEL);
1648:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1650:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1651:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get IDAC */
1657:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1658:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calculate achived calibration level */
1660:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcountRow
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1662:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1663:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Find correct sense clock value */
1664:Generated_Source\PSoC4/CapSense_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1665:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cpRow)
1667:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1670:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
1672:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1673:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1680:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #if (CapSense_ENABLE != CapSense_CSDV2)
1682:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 31


1684:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << CapS
1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 {
1686:Generated_Source\PSoC4/CapSense_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_dsRam.modCsdClk;
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 }
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #else
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1690:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #endif
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1694:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1696:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1699:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1700:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calculate achived calibration level */
1702:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcount * CapSense
1703:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1704:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1706:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1707:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cp)
1709:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1712:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
1714:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1722:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE != CapSense_CSDV2)
1724:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_FLIP_F
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****                              ptrWdgt->snsClk = CapSense_dsRam.modCsdClk;
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1734:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1736:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 32


1741:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (cpRow > cp)
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1746:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1749:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1750:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_EN)
1751:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Non-CSD widget */
1752:Generated_Source\PSoC4/CapSense_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1756:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1758:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1762:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune resolution for all the widgets */
1764:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1773:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1774:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1776:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1777:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set parasitic capacitance for columns */
1779:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1780:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1782:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1785:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1787:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1788:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1789:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1790:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Set parasitic capacitance for rows */
1796:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1797:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 33


1798:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get IDAC */
1799:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get finger capacitance */
1805:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1806:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Init pointer to sigPFC */
1808:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1809:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find resolution */
1811:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1814:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1816:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1821:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sensitivity for all the widgets */
1823:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1824:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1832:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1835:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1836:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
1837:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_DsUpdateWidgetCrc(wdgtIndex);
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
1843:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1844:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
1845:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1846:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1847:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
1848:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1849:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 34


1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1856:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1863:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
1865:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1867:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1868:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
1869:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
1872:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1873:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1874:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
1876:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1879:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
1885:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1886:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1888:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1900:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1906:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1908:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
1911:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 35


1912:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1913:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1920:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
1924:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1925:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1926:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1927:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1945:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1952:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1954:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
1955:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1957:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1958:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1959:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1962:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 36


1969:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1970:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
1976:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1977:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1979:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1982:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1985:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1989:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
1999:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2001:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2004:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2006:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2013:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2014:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2019:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2021:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2024:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2025:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 37


2026:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2040:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2042:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2043:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2045:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2051:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2061:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2063:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2064:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2065:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2066:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2070:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2072:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2075:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2077:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 38


2083:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2086:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2091:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2094:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2096:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2098:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2100:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2102:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2104:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2105:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2115:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2117:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2120:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2122:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2123:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2125:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2126:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2128:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2130:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2136:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2137:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2138:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 39


2140:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2143:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2144:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2155:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2157:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2160:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2161:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2163:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2167:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2168:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2170:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2171:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2172:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2173:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2174:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2177:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2178:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2179:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2180:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2181:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2182:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2183:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2184:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2185:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2186:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2187:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2189:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2191:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2193:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2195:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2196:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 40


2197:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2213:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2214:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2215:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2216:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2218:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2220:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2221:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2222:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2223:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2230:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2236:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2242:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2244:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2249:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2251:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2252:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 41


2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2259:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2262:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2279:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2280:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2281:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2283:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2289:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2290:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2294:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 42


2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2313:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2316:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2317:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2318:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2320:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2334:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2339:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2340:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2342:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2345:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2346:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2348:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2365:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2367:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 43


2368:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2369:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2370:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2371:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2372:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2373:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2374:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2377:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2378:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2379:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2381:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2382:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2383:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2384:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2385:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2391:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** {
  28              		.loc 1 2401 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40 0004 0D00     		movs	r5, r1
  41              	.LVL1:
2402:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2404:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2405:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
  42              		.loc 1 2405 0
  43 0006 9F28     		cmp	r0, #159
  44 0008 08D9     		bls	.L2
  45              		.loc 1 2405 0 is_stmt 0 discriminator 1
  46 000a 1B4B     		ldr	r3, .L12
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 44


  47 000c 9942     		cmp	r1, r3
  48 000e 05D9     		bls	.L2
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
  49              		.loc 1 2407 0 is_stmt 1
  50 0010 1A49     		ldr	r1, .L12+4
  51              	.LVL2:
  52 0012 2800     		movs	r0, r5
  53              	.LVL3:
  54 0014 FFF7FEFF 		bl	__aeabi_uidivmod
  55              	.LVL4:
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
  56              		.loc 1 2406 0
  57 0018 0029     		cmp	r1, #0
  58 001a 21D0     		beq	.L6
  59              	.L2:
2408:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
  60              		.loc 1 2411 0
  61 001c 9F2C     		cmp	r4, #159
  62 001e 09D9     		bls	.L4
  63              		.loc 1 2411 0 is_stmt 0 discriminator 1
  64 0020 FF23     		movs	r3, #255
  65 0022 5B00     		lsls	r3, r3, #1
  66 0024 9D42     		cmp	r5, r3
  67 0026 05D9     		bls	.L4
2412:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
  68              		.loc 1 2413 0 is_stmt 1
  69 0028 1549     		ldr	r1, .L12+8
  70 002a 2800     		movs	r0, r5
  71 002c FFF7FEFF 		bl	__aeabi_uidivmod
  72              	.LVL5:
2412:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
  73              		.loc 1 2412 0
  74 0030 0029     		cmp	r1, #0
  75 0032 17D0     		beq	.L7
  76              	.L4:
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
  77              		.loc 1 2417 0
  78 0034 9F2C     		cmp	r4, #159
  79 0036 07D9     		bls	.L5
  80              		.loc 1 2417 0 is_stmt 0 discriminator 1
  81 0038 7E2D     		cmp	r5, #126
  82 003a 05D9     		bls	.L5
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
  83              		.loc 1 2419 0 is_stmt 1
  84 003c 7F21     		movs	r1, #127
  85 003e 2800     		movs	r0, r5
  86 0040 FFF7FEFF 		bl	__aeabi_uidivmod
  87              	.LVL6:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 45


2418:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
  88              		.loc 1 2418 0
  89 0044 0029     		cmp	r1, #0
  90 0046 0FD0     		beq	.L8
  91              	.L5:
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
  92              		.loc 1 2423 0
  93 0048 9F2C     		cmp	r4, #159
  94 004a 0FD9     		bls	.L9
  95              		.loc 1 2423 0 is_stmt 0 discriminator 1
  96 004c 3E2D     		cmp	r5, #62
  97 004e 0FD9     		bls	.L10
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2425:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
  98              		.loc 1 2425 0 is_stmt 1
  99 0050 3F21     		movs	r1, #63
 100 0052 2800     		movs	r0, r5
 101 0054 FFF7FEFF 		bl	__aeabi_uidivmod
 102              	.LVL7:
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
 103              		.loc 1 2424 0
 104 0058 0029     		cmp	r1, #0
 105 005a 0BD0     		beq	.L11
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
 106              		.loc 1 2431 0
 107 005c 0020     		movs	r0, #0
 108 005e 0AE0     		b	.L3
 109              	.L6:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 110              		.loc 1 2409 0
 111 0060 0420     		movs	r0, #4
 112 0062 08E0     		b	.L3
 113              	.L7:
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 114              		.loc 1 2415 0
 115 0064 0320     		movs	r0, #3
 116 0066 06E0     		b	.L3
 117              	.L8:
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 118              		.loc 1 2421 0
 119 0068 0220     		movs	r0, #2
 120 006a 04E0     		b	.L3
 121              	.L9:
 122              		.loc 1 2431 0
 123 006c 0020     		movs	r0, #0
 124 006e 02E0     		b	.L3
 125              	.L10:
 126 0070 0020     		movs	r0, #0
 127 0072 00E0     		b	.L3
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 46


 128              	.L11:
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 129              		.loc 1 2427 0
 130 0074 0120     		movs	r0, #1
 131              	.L3:
 132              	.LVL8:
2432:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2433:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
2435:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 133              		.loc 1 2435 0
 134              		@ sp needed
 135              	.LVL9:
 136              	.LVL10:
 137 0076 70BD     		pop	{r4, r5, r6, pc}
 138              	.L13:
 139              		.align	2
 140              	.L12:
 141 0078 FE030000 		.word	1022
 142 007c FF030000 		.word	1023
 143 0080 FF010000 		.word	511
 144              		.cfi_endproc
 145              	.LFE19:
 146              		.size	CapSense_SsCalcLfsrSize, .-CapSense_SsCalcLfsrSize
 147              		.global	__aeabi_uidiv
 148              		.section	.text.CapSense_SsCalcLfsrScale,"ax",%progbits
 149              		.align	2
 150              		.code	16
 151              		.thumb_func
 152              		.type	CapSense_SsCalcLfsrScale, %function
 153              	CapSense_SsCalcLfsrScale:
 154              	.LFB20:
2436:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2440:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2441:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2442:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2443:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2444:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2445:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2446:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2447:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2448:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2449:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2450:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2451:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2452:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2453:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2454:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2455:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2456:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2457:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2458:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2459:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2460:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 47


2461:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2462:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2463:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2464:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2465:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2466:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2467:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2469:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2470:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2472:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2473:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2474:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2475:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2476:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2477:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 155              		.loc 1 2477 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL11:
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
2478:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2479:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2481:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2483:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
 164              		.loc 1 2483 0
 165 0002 4B1E     		subs	r3, r1, #1
 166 0004 DBB2     		uxtb	r3, r3
 167 0006 032B     		cmp	r3, #3
 168 0008 01D8     		bhi	.L20
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
 169              		.loc 1 2487 0
 170 000a 1023     		movs	r3, #16
 171 000c 00E0     		b	.L15
 172              	.L20:
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2498:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 48


2500:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2507:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
 173              		.loc 1 2507 0
 174 000e 0023     		movs	r3, #0
 175              	.L15:
 176              	.LVL12:
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2511:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2513:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
 177              		.loc 1 2515 0
 178 0010 0029     		cmp	r1, #0
 179 0012 11D0     		beq	.L21
 180              		.loc 1 2515 0 is_stmt 0 discriminator 1
 181 0014 002B     		cmp	r3, #0
 182 0016 11D0     		beq	.L22
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
 183              		.loc 1 2518 0 is_stmt 1
 184 0018 6422     		movs	r2, #100
 185 001a 5343     		muls	r3, r2
 186              	.LVL13:
 187 001c 0100     		movs	r1, r0
 188              	.LVL14:
 189 001e 1800     		movs	r0, r3
 190              	.LVL15:
 191 0020 FFF7FEFF 		bl	__aeabi_uidiv
 192              	.LVL16:
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 193              		.loc 1 2519 0
 194 0024 0023     		movs	r3, #0
2520:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
 195              		.loc 1 2521 0
 196 0026 01E0     		b	.L18
 197              	.LVL17:
 198              	.L19:
2522:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
 199              		.loc 1 2523 0
 200 0028 0133     		adds	r3, r3, #1
 201              	.LVL18:
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
 202              		.loc 1 2524 0
 203 002a 4000     		lsls	r0, r0, #1
 204              	.LVL19:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 49


 205              	.L18:
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 206              		.loc 1 2521 0
 207 002c 0928     		cmp	r0, #9
 208 002e FBD9     		bls	.L19
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
 209              		.loc 1 2527 0
 210 0030 0A28     		cmp	r0, #10
 211 0032 04D9     		bls	.L17
2528:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
 212              		.loc 1 2529 0
 213 0034 013B     		subs	r3, r3, #1
 214              	.LVL20:
 215 0036 02E0     		b	.L17
 216              	.LVL21:
 217              	.L21:
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 218              		.loc 1 2534 0
 219 0038 0023     		movs	r3, #0
 220              	.LVL22:
 221 003a 00E0     		b	.L17
 222              	.LVL23:
 223              	.L22:
 224 003c 0023     		movs	r3, #0
 225              	.LVL24:
 226              	.L17:
2535:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2536:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
 227              		.loc 1 2537 0
 228 003e D8B2     		uxtb	r0, r3
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 229              		.loc 1 2538 0
 230              		@ sp needed
 231 0040 10BD     		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE20:
 234              		.size	CapSense_SsCalcLfsrScale, .-CapSense_SsCalcLfsrScale
 235 0042 C046     		.section	.text.CapSense_SsCSDDisableMode,"ax",%progbits
 236              		.align	2
 237              		.code	16
 238              		.thumb_func
 239              		.type	CapSense_SsCSDDisableMode, %function
 240              	CapSense_SsCSDDisableMode:
 241              	.LFB7:
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 242              		.loc 1 763 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 50


 246 0000 10B5     		push	{r4, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 4, -8
 249              		.cfi_offset 14, -4
 767:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 250              		.loc 1 767 0
 251 0002 094C     		ldr	r4, .L24
 252 0004 2268     		ldr	r2, [r4]
 253              	.LVL25:
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 254              		.loc 1 768 0
 255 0006 094B     		ldr	r3, .L24+4
 256 0008 1340     		ands	r3, r2
 257              	.LVL26:
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 258              		.loc 1 769 0
 259 000a 2360     		str	r3, [r4]
 775:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 260              		.loc 1 775 0
 261 000c 084A     		ldr	r2, .L24+8
 262 000e 1368     		ldr	r3, [r2]
 263              	.LVL27:
 776:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 264              		.loc 1 776 0
 265 0010 0121     		movs	r1, #1
 266 0012 8B43     		bics	r3, r1
 267              	.LVL28:
 777:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 268              		.loc 1 777 0
 269 0014 1360     		str	r3, [r2]
 783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 270              		.loc 1 783 0
 271 0016 FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 272              	.LVL29:
 788:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_CSH_TO_AMUXBUS_B_MASK << CapSense_CSH_HSIOM_
 273              		.loc 1 788 0
 274 001a 2268     		ldr	r2, [r4]
 275              	.LVL30:
 789:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_CSH_HSIOM_PTR, newRegValue);
 276              		.loc 1 789 0
 277 001c 054B     		ldr	r3, .L24+12
 278 001e 1340     		ands	r3, r2
 279              	.LVL31:
 790:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 280              		.loc 1 790 0
 281 0020 2360     		str	r3, [r4]
 796:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 282              		.loc 1 796 0
 283 0022 FFF7FEFF 		bl	CapSense_SsCSDDisableShieldElectrodes
 284              	.LVL32:
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 285              		.loc 1 799 0
 286              		@ sp needed
 287 0026 10BD     		pop	{r4, pc}
 288              	.L25:
 289              		.align	2
 290              	.L24:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 51


 291 0028 00040240 		.word	1073873920
 292 002c FFF0FFFF 		.word	-3841
 293 0030 A8022940 		.word	1076429480
 294 0034 FF8FFFFF 		.word	-28673
 295              		.cfi_endproc
 296              	.LFE7:
 297              		.size	CapSense_SsCSDDisableMode, .-CapSense_SsCSDDisableMode
 298              		.section	.text.CapSense_IsBusy,"ax",%progbits
 299              		.align	2
 300              		.global	CapSense_IsBusy
 301              		.code	16
 302              		.thumb_func
 303              		.type	CapSense_IsBusy, %function
 304              	CapSense_IsBusy:
 305              	.LFB1:
 234:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 306              		.loc 1 234 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 311              		.loc 1 235 0
 312 0000 024B     		ldr	r3, .L27
 313 0002 DB68     		ldr	r3, [r3, #12]
 314 0004 8020     		movs	r0, #128
 315 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 316              		.loc 1 236 0
 317              		@ sp needed
 318 0008 7047     		bx	lr
 319              	.L28:
 320 000a C046     		.align	2
 321              	.L27:
 322 000c 00000000 		.word	CapSense_dsRam
 323              		.cfi_endproc
 324              	.LFE1:
 325              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 326              		.section	.text.CapSense_SetupWidget,"ax",%progbits
 327              		.align	2
 328              		.global	CapSense_SetupWidget
 329              		.code	16
 330              		.thumb_func
 331              		.type	CapSense_SetupWidget, %function
 332              	CapSense_SetupWidget:
 333              	.LFB2:
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 334              		.loc 1 286 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              	.LVL33:
 339 0000 10B5     		push	{r4, lr}
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 4, -8
 342              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 52


 343              		.loc 1 289 0
 344 0002 114B     		ldr	r3, .L35
 345 0004 DB68     		ldr	r3, [r3, #12]
 346 0006 DB03     		lsls	r3, r3, #15
 347 0008 12D4     		bmi	.L32
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 348              		.loc 1 299 0
 349 000a 0C28     		cmp	r0, #12
 350 000c 12D8     		bhi	.L33
 300:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 351              		.loc 1 300 0 discriminator 1
 352 000e 1F23     		movs	r3, #31
 353 0010 0340     		ands	r3, r0
 354 0012 0122     		movs	r2, #1
 355 0014 9A40     		lsls	r2, r2, r3
 356 0016 1100     		movs	r1, r2
 357 0018 4209     		lsrs	r2, r0, #5
 358 001a 0B4C     		ldr	r4, .L35
 359 001c 0432     		adds	r2, r2, #4
 360 001e 9300     		lsls	r3, r2, #2
 361 0020 1A59     		ldr	r2, [r3, r4]
 362 0022 0A40     		ands	r2, r1
 363 0024 E318     		adds	r3, r4, r3
 364 0026 5B68     		ldr	r3, [r3, #4]
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 365              		.loc 1 299 0 discriminator 1
 366 0028 1342     		tst	r3, r2
 367 002a 05D1     		bne	.L34
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 368              		.loc 1 307 0
 369 002c 0124     		movs	r4, #1
 370 002e 04E0     		b	.L30
 371              	.L32:
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 372              		.loc 1 292 0
 373 0030 1124     		movs	r4, #17
 374 0032 02E0     		b	.L30
 375              	.L33:
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 376              		.loc 1 307 0
 377 0034 0124     		movs	r4, #1
 378 0036 00E0     		b	.L30
 379              	.L34:
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 380              		.loc 1 303 0
 381 0038 0024     		movs	r4, #0
 382              	.L30:
 383              	.LVL34:
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 384              		.loc 1 314 0
 385 003a 002C     		cmp	r4, #0
 386 003c 01D1     		bne	.L31
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 387              		.loc 1 327 0
 388 003e FFF7FEFF 		bl	CapSense_CSDSetupWidget
 389              	.LVL35:
 390              	.L31:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 53


 343:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 391              		.loc 1 343 0
 392 0042 2000     		movs	r0, r4
 393              		@ sp needed
 394              	.LVL36:
 395 0044 10BD     		pop	{r4, pc}
 396              	.L36:
 397 0046 C046     		.align	2
 398              	.L35:
 399 0048 00000000 		.word	CapSense_dsRam
 400              		.cfi_endproc
 401              	.LFE2:
 402              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 403              		.section	.text.CapSense_Scan,"ax",%progbits
 404              		.align	2
 405              		.global	CapSense_Scan
 406              		.code	16
 407              		.thumb_func
 408              		.type	CapSense_Scan, %function
 409              	CapSense_Scan:
 410              	.LFB3:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 411              		.loc 1 369 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415 0000 10B5     		push	{r4, lr}
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 4, -8
 418              		.cfi_offset 14, -4
 419              	.LVL37:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 420              		.loc 1 372 0
 421 0002 084B     		ldr	r3, .L43
 422 0004 DB68     		ldr	r3, [r3, #12]
 423 0006 DB03     		lsls	r3, r3, #15
 424 0008 07D4     		bmi	.L40
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 425              		.loc 1 379 0
 426 000a 074B     		ldr	r3, .L43+4
 427 000c 1B78     		ldrb	r3, [r3]
 428 000e 012B     		cmp	r3, #1
 429 0010 05D1     		bne	.L42
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 430              		.loc 1 388 0
 431 0012 FFF7FEFF 		bl	CapSense_CSDScan
 432              	.LVL38:
 370:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 433              		.loc 1 370 0
 434 0016 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 435              		.loc 1 389 0
 436 0018 03E0     		b	.L38
 437              	.L40:
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 438              		.loc 1 375 0
 439 001a 1120     		movs	r0, #17
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 54


 440 001c 01E0     		b	.L38
 441              	.L42:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 442              		.loc 1 397 0
 443 001e 0120     		movs	r0, #1
 444 0020 4042     		rsbs	r0, r0, #0
 445              	.L38:
 446              	.LVL39:
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 447              		.loc 1 402 0
 448              		@ sp needed
 449 0022 10BD     		pop	{r4, pc}
 450              	.L44:
 451              		.align	2
 452              	.L43:
 453 0024 00000000 		.word	CapSense_dsRam
 454 0028 00000000 		.word	.LANCHOR0
 455              		.cfi_endproc
 456              	.LFE3:
 457              		.size	CapSense_Scan, .-CapSense_Scan
 458              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 459              		.align	2
 460              		.global	CapSense_ScanAllWidgets
 461              		.code	16
 462              		.thumb_func
 463              		.type	CapSense_ScanAllWidgets, %function
 464              	CapSense_ScanAllWidgets:
 465              	.LFB4:
 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 466              		.loc 1 431 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470 0000 10B5     		push	{r4, lr}
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 4, -8
 473              		.cfi_offset 14, -4
 474              	.LVL40:
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 475              		.loc 1 436 0
 476 0002 0F4B     		ldr	r3, .L53
 477 0004 DB68     		ldr	r3, [r3, #12]
 478 0006 1B06     		lsls	r3, r3, #24
 479 0008 18D4     		bmi	.L52
 480 000a 0024     		movs	r4, #0
 481 000c 0120     		movs	r0, #1
 482 000e 4042     		rsbs	r0, r0, #0
 483 0010 11E0     		b	.L47
 484              	.LVL41:
 485              	.L51:
 452:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 486              		.loc 1 452 0
 487 0012 2000     		movs	r0, r4
 488              	.LVL42:
 489 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 490              	.LVL43:
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 55


 491              		.loc 1 454 0
 492 0018 0028     		cmp	r0, #0
 493 001a 0BD1     		bne	.L48
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 494              		.loc 1 458 0
 495 001c 0B2C     		cmp	r4, #11
 496 001e 03D8     		bhi	.L49
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 497              		.loc 1 461 0
 498 0020 0122     		movs	r2, #1
 499 0022 084B     		ldr	r3, .L53+4
 500 0024 5A70     		strb	r2, [r3, #1]
 501 0026 02E0     		b	.L50
 502              	.L49:
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 503              		.loc 1 466 0
 504 0028 0022     		movs	r2, #0
 505 002a 064B     		ldr	r3, .L53+4
 506 002c 5A70     		strb	r2, [r3, #1]
 507              	.L50:
 476:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 508              		.loc 1 476 0
 509 002e FFF7FEFF 		bl	CapSense_Scan
 510              	.LVL44:
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 511              		.loc 1 478 0
 512 0032 04E0     		b	.L46
 513              	.L48:
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 514              		.loc 1 449 0
 515 0034 0134     		adds	r4, r4, #1
 516              	.LVL45:
 517              	.L47:
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 518              		.loc 1 447 0 discriminator 1
 519 0036 0C2C     		cmp	r4, #12
 520 0038 EBD9     		bls	.L51
 521 003a 00E0     		b	.L46
 522              	.LVL46:
 523              	.L52:
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 524              		.loc 1 439 0
 525 003c 1120     		movs	r0, #17
 526              	.LVL47:
 527              	.L46:
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 528              		.loc 1 484 0
 529              		@ sp needed
 530 003e 10BD     		pop	{r4, pc}
 531              	.L54:
 532              		.align	2
 533              	.L53:
 534 0040 00000000 		.word	CapSense_dsRam
 535 0044 00000000 		.word	.LANCHOR0
 536              		.cfi_endproc
 537              	.LFE4:
 538              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 56


 539              		.section	.text.CapSense_SetPinState,"ax",%progbits
 540              		.align	2
 541              		.global	CapSense_SetPinState
 542              		.code	16
 543              		.thumb_func
 544              		.type	CapSense_SetPinState, %function
 545              	CapSense_SetPinState:
 546              	.LFB6:
 650:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 547              		.loc 1 650 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551              	.LVL48:
 552 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 553              		.cfi_def_cfa_offset 24
 554              		.cfi_offset 3, -24
 555              		.cfi_offset 4, -20
 556              		.cfi_offset 5, -16
 557              		.cfi_offset 6, -12
 558              		.cfi_offset 7, -8
 559              		.cfi_offset 14, -4
 560 0002 1600     		movs	r6, r2
 675:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 561              		.loc 1 675 0
 562 0004 4001     		lsls	r0, r0, #5
 563              	.LVL49:
 564 0006 2A4B     		ldr	r3, .L63
 565 0008 C458     		ldr	r4, [r0, r3]
 566 000a 4901     		lsls	r1, r1, #5
 567              	.LVL50:
 568 000c 6418     		adds	r4, r4, r1
 569              	.LVL51:
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 570              		.loc 1 680 0
 571 000e 0025     		movs	r5, #0
 572 0010 4AE0     		b	.L56
 573              	.LVL52:
 574              	.L62:
 683:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 575              		.loc 1 683 0
 576 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 577              	.LVL53:
 684:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 578              		.loc 1 684 0
 579 0016 2168     		ldr	r1, [r4]
 580 0018 0B68     		ldr	r3, [r1]
 581 001a 277F     		ldrb	r7, [r4, #28]
 582 001c 0F22     		movs	r2, #15
 583 001e BA40     		lsls	r2, r2, r7
 584 0020 9343     		bics	r3, r2
 585 0022 0B60     		str	r3, [r1]
 685:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 586              		.loc 1 685 0
 587 0024 6168     		ldr	r1, [r4, #4]
 588 0026 0B68     		ldr	r3, [r1]
 589 0028 A77F     		ldrb	r7, [r4, #30]
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 57


 590 002a 0722     		movs	r2, #7
 591 002c BA40     		lsls	r2, r2, r7
 592 002e 9343     		bics	r3, r2
 593 0030 0B60     		str	r3, [r1]
 686:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 594              		.loc 1 686 0
 595 0032 FFF7FEFF 		bl	CyExitCriticalSection
 596              	.LVL54:
 688:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 597              		.loc 1 688 0
 598 0036 012E     		cmp	r6, #1
 599 0038 19D0     		beq	.L58
 600 003a 002E     		cmp	r6, #0
 601 003c 04D0     		beq	.L59
 602 003e 022E     		cmp	r6, #2
 603 0040 25D0     		beq	.L60
 604 0042 032E     		cmp	r6, #3
 605 0044 1FD0     		beq	.L61
 606 0046 2DE0     		b	.L57
 607              	.L59:
 692:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 608              		.loc 1 692 0
 609 0048 FFF7FEFF 		bl	CyEnterCriticalSection
 610              	.LVL55:
 693:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 611              		.loc 1 693 0
 612 004c 6268     		ldr	r2, [r4, #4]
 613 004e 1168     		ldr	r1, [r2]
 614 0050 A77F     		ldrb	r7, [r4, #30]
 615 0052 0623     		movs	r3, #6
 616 0054 BB40     		lsls	r3, r3, r7
 617 0056 0B43     		orrs	r3, r1
 618 0058 1360     		str	r3, [r2]
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 619              		.loc 1 694 0
 620 005a E168     		ldr	r1, [r4, #12]
 621 005c 0B68     		ldr	r3, [r1]
 622 005e 677F     		ldrb	r7, [r4, #29]
 623 0060 0122     		movs	r2, #1
 624 0062 BA40     		lsls	r2, r2, r7
 625 0064 9343     		bics	r3, r2
 626 0066 0B60     		str	r3, [r1]
 695:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 627              		.loc 1 695 0
 628 0068 FFF7FEFF 		bl	CyExitCriticalSection
 629              	.LVL56:
 696:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 630              		.loc 1 696 0
 631 006c 1AE0     		b	.L57
 632              	.L58:
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 633              		.loc 1 699 0
 634 006e FFF7FEFF 		bl	CyEnterCriticalSection
 635              	.LVL57:
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 636              		.loc 1 700 0
 637 0072 E168     		ldr	r1, [r4, #12]
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 58


 638 0074 0B68     		ldr	r3, [r1]
 639 0076 677F     		ldrb	r7, [r4, #29]
 640 0078 0122     		movs	r2, #1
 641 007a BA40     		lsls	r2, r2, r7
 642 007c 9343     		bics	r3, r2
 643 007e 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 644              		.loc 1 701 0
 645 0080 FFF7FEFF 		bl	CyExitCriticalSection
 646              	.LVL58:
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 647              		.loc 1 702 0
 648 0084 0EE0     		b	.L57
 649              	.L61:
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 650              		.loc 1 707 0
 651 0086 2000     		movs	r0, r4
 652 0088 FFF7FEFF 		bl	CapSense_CSDConnectSns
 653              	.LVL59:
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 654              		.loc 1 708 0
 655 008c 0AE0     		b	.L57
 656              	.L60:
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 657              		.loc 1 713 0
 658 008e FFF7FEFF 		bl	CyEnterCriticalSection
 659              	.LVL60:
 714:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 660              		.loc 1 714 0
 661 0092 2268     		ldr	r2, [r4]
 662 0094 1168     		ldr	r1, [r2]
 663 0096 277F     		ldrb	r7, [r4, #28]
 664 0098 0523     		movs	r3, #5
 665 009a BB40     		lsls	r3, r3, r7
 666 009c 0B43     		orrs	r3, r1
 667 009e 1360     		str	r3, [r2]
 715:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 668              		.loc 1 715 0
 669 00a0 FFF7FEFF 		bl	CyExitCriticalSection
 670              	.LVL61:
 671              	.L57:
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 672              		.loc 1 742 0 discriminator 2
 673 00a4 2034     		adds	r4, r4, #32
 674              	.LVL62:
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 675              		.loc 1 680 0 discriminator 2
 676 00a6 0135     		adds	r5, r5, #1
 677              	.LVL63:
 678              	.L56:
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 679              		.loc 1 680 0 is_stmt 0 discriminator 1
 680 00a8 002D     		cmp	r5, #0
 681 00aa B2D0     		beq	.L62
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 682              		.loc 1 744 0 is_stmt 1
 683              		@ sp needed
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 59


 684              	.LVL64:
 685              	.LVL65:
 686              	.LVL66:
 687 00ac F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 688              	.L64:
 689 00ae C046     		.align	2
 690              	.L63:
 691 00b0 00000000 		.word	CapSense_dsFlash
 692              		.cfi_endproc
 693              	.LFE6:
 694              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 695              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 696              		.align	2
 697              		.global	CapSense_SsSwitchSensingMode
 698              		.code	16
 699              		.thumb_func
 700              		.type	CapSense_SsSwitchSensingMode, %function
 701              	CapSense_SsSwitchSensingMode:
 702              	.LFB8:
 902:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 703              		.loc 1 902 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              	.LVL67:
 708 0000 10B5     		push	{r4, lr}
 709              		.cfi_def_cfa_offset 8
 710              		.cfi_offset 4, -8
 711              		.cfi_offset 14, -4
 712 0002 0400     		movs	r4, r0
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 713              		.loc 1 903 0
 714 0004 144B     		ldr	r3, .L71
 715 0006 1B78     		ldrb	r3, [r3]
 716 0008 8342     		cmp	r3, r0
 717 000a 23D0     		beq	.L65
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 718              		.loc 1 906 0
 719 000c 012B     		cmp	r3, #1
 720 000e 02D1     		bne	.L67
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 721              		.loc 1 909 0
 722 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableMode
 723              	.LVL68:
 724 0014 07E0     		b	.L68
 725              	.LVL69:
 726              	.L67:
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 727              		.loc 1 912 0
 728 0016 022B     		cmp	r3, #2
 729 0018 05D0     		beq	.L68
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 730              		.loc 1 918 0
 731 001a 042B     		cmp	r3, #4
 732 001c 03D0     		beq	.L68
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 733              		.loc 1 924 0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 60


 734 001e 032B     		cmp	r3, #3
 735 0020 01D1     		bne	.L68
 927:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 736              		.loc 1 927 0
 737 0022 FFF7FEFF 		bl	CapSense_BistDisableMode
 738              	.LVL70:
 739              	.L68:
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 740              		.loc 1 939 0
 741 0026 012C     		cmp	r4, #1
 742 0028 05D1     		bne	.L69
 943:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 743              		.loc 1 943 0
 744 002a FFF7FEFF 		bl	CapSense_SsCSDInitialize
 745              	.LVL71:
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 746              		.loc 1 944 0
 747 002e 0122     		movs	r2, #1
 748 0030 094B     		ldr	r3, .L71
 749 0032 1A70     		strb	r2, [r3]
 750 0034 0EE0     		b	.L65
 751              	.L69:
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 752              		.loc 1 947 0
 753 0036 022C     		cmp	r4, #2
 754 0038 0CD0     		beq	.L65
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 755              		.loc 1 955 0
 756 003a 042C     		cmp	r4, #4
 757 003c 0AD0     		beq	.L65
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 758              		.loc 1 963 0
 759 003e 032C     		cmp	r4, #3
 760 0040 05D1     		bne	.L70
 966:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
 761              		.loc 1 966 0
 762 0042 FFF7FEFF 		bl	CapSense_BistInitialize
 763              	.LVL72:
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 764              		.loc 1 967 0
 765 0046 0322     		movs	r2, #3
 766 0048 034B     		ldr	r3, .L71
 767 004a 1A70     		strb	r2, [r3]
 768 004c 02E0     		b	.L65
 769              	.L70:
 972:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 770              		.loc 1 972 0
 771 004e 0022     		movs	r2, #0
 772 0050 014B     		ldr	r3, .L71
 773 0052 1A70     		strb	r2, [r3]
 774              	.L65:
 975:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 775              		.loc 1 975 0
 776              		@ sp needed
 777 0054 10BD     		pop	{r4, pc}
 778              	.L72:
 779 0056 C046     		.align	2
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 61


 780              	.L71:
 781 0058 00000000 		.word	.LANCHOR0
 782              		.cfi_endproc
 783              	.LFE8:
 784              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 785              		.section	.text.CapSense_SsSetIOsInDefaultState,"ax",%progbits
 786              		.align	2
 787              		.global	CapSense_SsSetIOsInDefaultState
 788              		.code	16
 789              		.thumb_func
 790              		.type	CapSense_SsSetIOsInDefaultState, %function
 791              	CapSense_SsSetIOsInDefaultState:
 792              	.LFB9:
1001:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
 793              		.loc 1 1001 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797 0000 30B5     		push	{r4, r5, lr}
 798              		.cfi_def_cfa_offset 12
 799              		.cfi_offset 4, -12
 800              		.cfi_offset 5, -8
 801              		.cfi_offset 14, -4
 802              	.LVL73:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 803              		.loc 1 1007 0
 804 0002 0020     		movs	r0, #0
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
 805              		.loc 1 1002 0
 806 0004 0D4B     		ldr	r3, .L76
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 807              		.loc 1 1007 0
 808 0006 16E0     		b	.L74
 809              	.LVL74:
 810              	.L75:
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 811              		.loc 1 1014 0 discriminator 3
 812 0008 1968     		ldr	r1, [r3]
 813 000a 0A68     		ldr	r2, [r1]
 814              	.LVL75:
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 815              		.loc 1 1015 0 discriminator 3
 816 000c 5C69     		ldr	r4, [r3, #20]
 817 000e A243     		bics	r2, r4
 818              	.LVL76:
1016:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 819              		.loc 1 1016 0 discriminator 3
 820 0010 0A60     		str	r2, [r1]
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
 821              		.loc 1 1018 0 discriminator 3
 822 0012 5C68     		ldr	r4, [r3, #4]
 823 0014 2268     		ldr	r2, [r4]
 824              	.LVL77:
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
 825              		.loc 1 1019 0 discriminator 3
 826 0016 9D7F     		ldrb	r5, [r3, #30]
 827 0018 0721     		movs	r1, #7
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 62


 828 001a A940     		lsls	r1, r1, r5
 829 001c 8A43     		bics	r2, r1
 830              	.LVL78:
 831 001e 1100     		movs	r1, r2
 832              	.LVL79:
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 833              		.loc 1 1020 0 discriminator 3
 834 0020 0622     		movs	r2, #6
 835 0022 AA40     		lsls	r2, r2, r5
 836 0024 0A43     		orrs	r2, r1
 837              	.LVL80:
1021:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 838              		.loc 1 1021 0 discriminator 3
 839 0026 2260     		str	r2, [r4]
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
 840              		.loc 1 1023 0 discriminator 3
 841 0028 D968     		ldr	r1, [r3, #12]
 842 002a 0A68     		ldr	r2, [r1]
 843              	.LVL81:
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 844              		.loc 1 1024 0 discriminator 3
 845 002c 9C69     		ldr	r4, [r3, #24]
 846 002e A243     		bics	r2, r4
 847              	.LVL82:
1025:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 848              		.loc 1 1025 0 discriminator 3
 849 0030 0A60     		str	r2, [r1]
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 850              		.loc 1 1028 0 discriminator 3
 851 0032 2033     		adds	r3, r3, #32
 852              	.LVL83:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 853              		.loc 1 1007 0 discriminator 3
 854 0034 0130     		adds	r0, r0, #1
 855              	.LVL84:
 856              	.L74:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 857              		.loc 1 1007 0 is_stmt 0 discriminator 1
 858 0036 0C28     		cmp	r0, #12
 859 0038 E6D9     		bls	.L75
1038:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 860              		.loc 1 1038 0 is_stmt 1
 861              		@ sp needed
 862 003a 30BD     		pop	{r4, r5, pc}
 863              	.L77:
 864              		.align	2
 865              	.L76:
 866 003c 00000000 		.word	CapSense_ioList
 867              		.cfi_endproc
 868              	.LFE9:
 869              		.size	CapSense_SsSetIOsInDefaultState, .-CapSense_SsSetIOsInDefaultState
 870              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 871              		.align	2
 872              		.global	CapSense_SsPostAllWidgetsScan
 873              		.code	16
 874              		.thumb_func
 875              		.type	CapSense_SsPostAllWidgetsScan, %function
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 63


 876              	CapSense_SsPostAllWidgetsScan:
 877              	.LFB10:
1123:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 878              		.loc 1 1123 0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882 0000 10B5     		push	{r4, lr}
 883              		.cfi_def_cfa_offset 8
 884              		.cfi_offset 4, -8
 885              		.cfi_offset 14, -4
 886              	.L83:
1134:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 887              		.loc 1 1134 0
 888 0002 1B4A     		ldr	r2, .L84
 889 0004 9378     		ldrb	r3, [r2, #2]
 890 0006 0133     		adds	r3, r3, #1
 891 0008 DBB2     		uxtb	r3, r3
 892 000a 9370     		strb	r3, [r2, #2]
1136:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 893              		.loc 1 1136 0
 894 000c 9078     		ldrb	r0, [r2, #2]
 895 000e C0B2     		uxtb	r0, r0
 896 0010 FFF7FEFF 		bl	CapSense_SetupWidget
 897              	.LVL85:
 898 0014 041E     		subs	r4, r0, #0
 899              	.LVL86:
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 900              		.loc 1 1138 0
 901 0016 09D1     		bne	.L79
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 902              		.loc 1 1140 0
 903 0018 154B     		ldr	r3, .L84
 904 001a 9B78     		ldrb	r3, [r3, #2]
 905 001c 0C2B     		cmp	r3, #12
 906 001e 02D1     		bne	.L80
1143:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 907              		.loc 1 1143 0
 908 0020 0022     		movs	r2, #0
 909 0022 134B     		ldr	r3, .L84
 910 0024 5A70     		strb	r2, [r3, #1]
 911              	.L80:
1145:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 912              		.loc 1 1145 0
 913 0026 FFF7FEFF 		bl	CapSense_Scan
 914              	.LVL87:
 915 002a 1EE0     		b	.L81
 916              	.LVL88:
 917              	.L79:
1147:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 918              		.loc 1 1147 0
 919 002c 104B     		ldr	r3, .L84
 920 002e 9B78     		ldrb	r3, [r3, #2]
 921 0030 0C2B     		cmp	r3, #12
 922 0032 11D1     		bne	.L82
1161:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 923              		.loc 1 1161 0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 64


 924 0034 0F4B     		ldr	r3, .L84+4
 925 0036 1A89     		ldrh	r2, [r3, #8]
 926 0038 0132     		adds	r2, r2, #1
 927 003a 1A81     		strh	r2, [r3, #8]
1163:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 928              		.loc 1 1163 0
 929 003c DA68     		ldr	r2, [r3, #12]
 930 003e 8021     		movs	r1, #128
 931 0040 8A43     		bics	r2, r1
 932 0042 DA60     		str	r2, [r3, #12]
1166:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 933              		.loc 1 1166 0
 934 0044 DA68     		ldr	r2, [r3, #12]
 935 0046 1202     		lsls	r2, r2, #8
 936 0048 120A     		lsrs	r2, r2, #8
 937 004a DA60     		str	r2, [r3, #12]
1167:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 938              		.loc 1 1167 0
 939 004c DA68     		ldr	r2, [r3, #12]
 940 004e 0406     		lsls	r4, r0, #24
 941 0050 1443     		orrs	r4, r2
 942 0052 DC60     		str	r4, [r3, #12]
 943              	.LVL89:
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 944              		.loc 1 1170 0
 945 0054 0024     		movs	r4, #0
 946 0056 08E0     		b	.L81
 947              	.LVL90:
 948              	.L82:
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 949              		.loc 1 1175 0
 950 0058 064A     		ldr	r2, .L84+4
 951 005a D368     		ldr	r3, [r2, #12]
 952 005c 1B02     		lsls	r3, r3, #8
 953 005e 1B0A     		lsrs	r3, r3, #8
 954 0060 D360     		str	r3, [r2, #12]
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 955              		.loc 1 1176 0
 956 0062 D168     		ldr	r1, [r2, #12]
 957 0064 0306     		lsls	r3, r0, #24
 958 0066 0B43     		orrs	r3, r1
 959 0068 D360     		str	r3, [r2, #12]
 960              	.LVL91:
 961              	.L81:
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
 962              		.loc 1 1178 0
 963 006a 002C     		cmp	r4, #0
 964 006c C9D1     		bne	.L83
1180:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 965              		.loc 1 1180 0
 966              		@ sp needed
 967              	.LVL92:
 968 006e 10BD     		pop	{r4, pc}
 969              	.L85:
 970              		.align	2
 971              	.L84:
 972 0070 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 65


 973 0074 00000000 		.word	CapSense_dsRam
 974              		.cfi_endproc
 975              	.LFE10:
 976              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 977              		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 978              		.align	2
 979              		.global	CapSense_SsIsrInitialize
 980              		.code	16
 981              		.thumb_func
 982              		.type	CapSense_SsIsrInitialize, %function
 983              	CapSense_SsIsrInitialize:
 984              	.LFB11:
1200:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 985              		.loc 1 1200 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              	.LVL93:
 990 0000 10B5     		push	{r4, lr}
 991              		.cfi_def_cfa_offset 8
 992              		.cfi_offset 4, -8
 993              		.cfi_offset 14, -4
1201:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 994              		.loc 1 1201 0
 995 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 996              	.LVL94:
1202:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 997              		.loc 1 1202 0
 998              		@ sp needed
 999 0006 10BD     		pop	{r4, pc}
 1000              		.cfi_endproc
 1001              	.LFE11:
 1002              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 1003              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 1004              		.align	2
 1005              		.global	CapSense_SsSetModClkClockDivider
 1006              		.code	16
 1007              		.thumb_func
 1008              		.type	CapSense_SsSetModClkClockDivider, %function
 1009              	CapSense_SsSetModClkClockDivider:
 1010              	.LFB12:
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 1011              		.loc 1 1223 0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 0
 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 1015              		@ link register save eliminated.
 1016              	.LVL95:
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 1017              		.loc 1 1226 0
 1018 0000 074A     		ldr	r2, .L89
 1019 0002 084B     		ldr	r3, .L89+4
 1020 0004 1A60     		str	r2, [r3]
1236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1021              		.loc 1 1236 0
 1022 0006 0138     		subs	r0, r0, #1
 1023              	.LVL96:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 66


 1024 0008 0002     		lsls	r0, r0, #8
 1025              	.LVL97:
 1026 000a 074B     		ldr	r3, .L89+8
 1027 000c 1860     		str	r0, [r3]
 1028              	.L88:
1239:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1029              		.loc 1 1239 0 discriminator 1
 1030 000e 054B     		ldr	r3, .L89+4
 1031 0010 1B68     		ldr	r3, [r3]
 1032 0012 002B     		cmp	r3, #0
 1033 0014 FBDB     		blt	.L88
1245:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 1034              		.loc 1 1245 0
 1035 0016 054A     		ldr	r2, .L89+12
 1036 0018 024B     		ldr	r3, .L89+4
 1037 001a 1A60     		str	r2, [r3]
1270:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1038              		.loc 1 1270 0
 1039              		@ sp needed
 1040 001c 7047     		bx	lr
 1041              	.L90:
 1042 001e C046     		.align	2
 1043              	.L89:
 1044 0020 40000040 		.word	1073741888
 1045 0024 00000140 		.word	1073807360
 1046 0028 00030140 		.word	1073808128
 1047 002c 40FF0080 		.word	-2147418304
 1048              		.cfi_endproc
 1049              	.LFE12:
 1050              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 1051              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 1052              		.align	2
 1053              		.global	CapSense_SsSetSnsClockDivider
 1054              		.code	16
 1055              		.thumb_func
 1056              		.type	CapSense_SsSetSnsClockDivider, %function
 1057              	CapSense_SsSetSnsClockDivider:
 1058              	.LFB13:
1291:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 1059              		.loc 1 1291 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063              		@ link register save eliminated.
 1064              	.LVL98:
1300:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
 1065              		.loc 1 1300 0
 1066 0000 034A     		ldr	r2, .L92
 1067 0002 1368     		ldr	r3, [r2]
 1068              	.LVL99:
1301:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
 1069              		.loc 1 1301 0
 1070 0004 1B0B     		lsrs	r3, r3, #12
 1071              	.LVL100:
 1072 0006 1B03     		lsls	r3, r3, #12
 1073              	.LVL101:
1302:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 67


 1074              		.loc 1 1302 0
 1075 0008 0138     		subs	r0, r0, #1
 1076              	.LVL102:
 1077 000a 1843     		orrs	r0, r3
 1078              	.LVL103:
1303:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 1079              		.loc 1 1303 0
 1080 000c 1060     		str	r0, [r2]
1352:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1081              		.loc 1 1352 0
 1082              		@ sp needed
 1083 000e 7047     		bx	lr
 1084              	.L93:
 1085              		.align	2
 1086              	.L92:
 1087 0010 00022940 		.word	1076429312
 1088              		.cfi_endproc
 1089              	.LFE13:
 1090              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 1091              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 1092              		.align	2
 1093              		.global	CapSense_SsSetClockDividers
 1094              		.code	16
 1095              		.thumb_func
 1096              		.type	CapSense_SsSetClockDividers, %function
 1097              	CapSense_SsSetClockDividers:
 1098              	.LFB14:
1375:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
 1099              		.loc 1 1375 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 0
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 1103              	.LVL104:
 1104 0000 10B5     		push	{r4, lr}
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 4, -8
 1107              		.cfi_offset 14, -4
 1108 0002 0400     		movs	r4, r0
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1109              		.loc 1 1377 0
 1110 0004 0800     		movs	r0, r1
 1111              	.LVL105:
 1112 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 1113              	.LVL106:
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1114              		.loc 1 1380 0
 1115 000a 2000     		movs	r0, r4
 1116 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 1117              	.LVL107:
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1118              		.loc 1 1381 0
 1119              		@ sp needed
 1120              	.LVL108:
 1121 0010 10BD     		pop	{r4, pc}
 1122              		.cfi_endproc
 1123              	.LFE14:
 1124              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 68


 1125 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 1126              		.align	2
 1127              		.global	CapSense_CalibrateWidget
 1128              		.code	16
 1129              		.thumb_func
 1130              		.type	CapSense_CalibrateWidget, %function
 1131              	CapSense_CalibrateWidget:
 1132              	.LFB15:
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1133              		.loc 1 1427 0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 1137              	.LVL109:
 1138 0000 70B5     		push	{r4, r5, r6, lr}
 1139              		.cfi_def_cfa_offset 16
 1140              		.cfi_offset 4, -16
 1141              		.cfi_offset 5, -12
 1142              		.cfi_offset 6, -8
 1143              		.cfi_offset 14, -4
 1144 0002 0400     		movs	r4, r0
 1145              	.LVL110:
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1146              		.loc 1 1442 0
 1147 0004 1F23     		movs	r3, #31
 1148 0006 0340     		ands	r3, r0
 1149 0008 0122     		movs	r2, #1
 1150 000a 9A40     		lsls	r2, r2, r3
 1151 000c 1100     		movs	r1, r2
 1152 000e 4209     		lsrs	r2, r0, #5
 1153 0010 0B48     		ldr	r0, .L99
 1154              	.LVL111:
 1155 0012 0432     		adds	r2, r2, #4
 1156 0014 9300     		lsls	r3, r2, #2
 1157 0016 1A58     		ldr	r2, [r3, r0]
 1158 0018 0A40     		ands	r2, r1
 1159 001a C318     		adds	r3, r0, r3
 1160 001c 5B68     		ldr	r3, [r3, #4]
 1161 001e 1342     		tst	r3, r2
 1162 0020 01D0     		beq	.L98
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1163              		.loc 1 1444 0
 1164 0022 0025     		movs	r5, #0
 1165 0024 00E0     		b	.L96
 1166              	.L98:
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1167              		.loc 1 1448 0
 1168 0026 1125     		movs	r5, #17
 1169              	.L96:
 1170              	.LVL112:
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1171              		.loc 1 1452 0
 1172 0028 002D     		cmp	r5, #0
 1173 002a 07D1     		bne	.L97
1481:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1174              		.loc 1 1481 0
 1175 002c 4621     		movs	r1, #70
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 69


 1176 002e 2000     		movs	r0, r4
 1177 0030 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1178              	.LVL113:
 1179 0034 0500     		movs	r5, r0
 1180              	.LVL114:
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN) */
 1181              		.loc 1 1497 0
 1182 0036 2000     		movs	r0, r4
 1183              	.LVL115:
 1184 0038 FFF7FEFF 		bl	CapSense_DsUpdateWidgetCrc
 1185              	.LVL116:
 1186              	.L97:
1503:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1187              		.loc 1 1503 0
 1188 003c 2800     		movs	r0, r5
 1189              		@ sp needed
 1190              	.LVL117:
 1191              	.LVL118:
 1192 003e 70BD     		pop	{r4, r5, r6, pc}
 1193              	.L100:
 1194              		.align	2
 1195              	.L99:
 1196 0040 00000000 		.word	CapSense_dsRam
 1197              		.cfi_endproc
 1198              	.LFE15:
 1199              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 1200              		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 1201              		.align	2
 1202              		.global	CapSense_CalibrateAllWidgets
 1203              		.code	16
 1204              		.thumb_func
 1205              		.type	CapSense_CalibrateAllWidgets, %function
 1206              	CapSense_CalibrateAllWidgets:
 1207              	.LFB16:
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1208              		.loc 1 1540 0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 0
 1211              		@ frame_needed = 0, uses_anonymous_args = 0
 1212 0000 70B5     		push	{r4, r5, r6, lr}
 1213              		.cfi_def_cfa_offset 16
 1214              		.cfi_offset 4, -16
 1215              		.cfi_offset 5, -12
 1216              		.cfi_offset 6, -8
 1217              		.cfi_offset 14, -4
 1218              	.LVL119:
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1219              		.loc 1 1544 0
 1220 0002 0024     		movs	r4, #0
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1221              		.loc 1 1541 0
 1222 0004 0025     		movs	r5, #0
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1223              		.loc 1 1544 0
 1224 0006 04E0     		b	.L102
 1225              	.LVL120:
 1226              	.L103:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 70


1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1227              		.loc 1 1546 0 discriminator 3
 1228 0008 2000     		movs	r0, r4
 1229 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 1230              	.LVL121:
 1231 000e 0543     		orrs	r5, r0
 1232              	.LVL122:
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1233              		.loc 1 1544 0 discriminator 3
 1234 0010 0134     		adds	r4, r4, #1
 1235              	.LVL123:
 1236              	.L102:
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1237              		.loc 1 1544 0 is_stmt 0 discriminator 1
 1238 0012 0C2C     		cmp	r4, #12
 1239 0014 F8D9     		bls	.L103
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
 1240              		.loc 1 1550 0 is_stmt 1
 1241 0016 2800     		movs	r0, r5
 1242              		@ sp needed
 1243              	.LVL124:
 1244              	.LVL125:
 1245 0018 70BD     		pop	{r4, r5, r6, pc}
 1246              		.cfi_endproc
 1247              	.LFE16:
 1248              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1249 001a C046     		.section	.text.CapSense_SsClearCSDSensors,"ax",%progbits
 1250              		.align	2
 1251              		.global	CapSense_SsClearCSDSensors
 1252              		.code	16
 1253              		.thumb_func
 1254              		.type	CapSense_SsClearCSDSensors, %function
 1255              	CapSense_SsClearCSDSensors:
 1256              	.LFB21:
2539:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2540:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2541:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2542:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2549:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2550:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsClearCSDSensors
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  an inactive state.
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2559:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 71


2562:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  connection is Ground or Hi-Z.
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsClearCSDSensors(void)
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1257              		.loc 1 2567 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 0
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
 1261 0000 70B5     		push	{r4, r5, r6, lr}
 1262              		.cfi_def_cfa_offset 16
 1263              		.cfi_offset 4, -16
 1264              		.cfi_offset 5, -12
 1265              		.cfi_offset 6, -8
 1266              		.cfi_offset 14, -4
 1267              	.LVL126:
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
2570:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2572:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 pinIndex;
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2574:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2576:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Declare ptr to sensor IO structure */
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr;
2582:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
 1268              		.loc 1 2583 0
 1269 0002 0025     		movs	r5, #0
 1270 0004 10E0     		b	.L105
 1271              	.LVL127:
 1272              	.L108:
2584:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2587:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2588:Generated_Source\PSoC4/CapSense_Sensing.c ****                 curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 1273              		.loc 1 2588 0
 1274 0006 6B01     		lsls	r3, r5, #5
 1275 0008 094A     		ldr	r2, .L109
 1276 000a 9E58     		ldr	r6, [r3, r2]
 1277              	.LVL128:
2589:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                 CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash;
2590:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Go through all the sensors in widget */
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_dsFlash.wdgtArray[wdgtIndex].totalNu
 1278              		.loc 1 2592 0
 1279 000c 0024     		movs	r4, #0
 1280 000e 04E0     		b	.L106
 1281              	.LVL129:
 1282              	.L107:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 72


2593:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Check ganged sns flag */
2596:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[wdgtIndex].stat
2597:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                  CapSense_GANGED_SNS_MASK))
2598:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2599:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get sns pointer */
2600:Generated_Source\PSoC4/CapSense_Sensing.c ****                             curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
2601:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                CapSense_dsFlash.wdgtArray[wdgtIndex
2602:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                snsIndex;
2603:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2604:Generated_Source\PSoC4/CapSense_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2605:Generated_Source\PSoC4/CapSense_Sensing.c ****                             {
2606:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2607:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId 
2608:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2609:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Disconnect dedicated pin */
2610:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 CapSense_CSDDisconnectSns(curDedicatedSnsIOPtr);
2611:Generated_Source\PSoC4/CapSense_Sensing.c ****                             }
2612:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2613:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2614:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2615:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Disable sensor */
2616:Generated_Source\PSoC4/CapSense_Sensing.c ****                             CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2617:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2618:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2619:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable sensor */
2620:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
 1283              		.loc 1 2620 0 discriminator 3
 1284 0010 6001     		lsls	r0, r4, #5
 1285 0012 3018     		adds	r0, r6, r0
 1286 0014 FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 1287              	.LVL130:
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1288              		.loc 1 2592 0 discriminator 3
 1289 0018 0134     		adds	r4, r4, #1
 1290              	.LVL131:
 1291              	.L106:
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1292              		.loc 1 2592 0 is_stmt 0 discriminator 1
 1293 001a 6B01     		lsls	r3, r5, #5
 1294 001c 044A     		ldr	r2, .L109
 1295 001e D318     		adds	r3, r2, r3
 1296 0020 1B7E     		ldrb	r3, [r3, #24]
 1297 0022 9C42     		cmp	r4, r3
 1298 0024 F4D3     		bcc	.L107
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1299              		.loc 1 2583 0 is_stmt 1 discriminator 2
 1300 0026 0135     		adds	r5, r5, #1
 1301              	.LVL132:
 1302              	.L105:
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1303              		.loc 1 2583 0 is_stmt 0 discriminator 1
 1304 0028 0C2D     		cmp	r5, #12
 1305 002a ECD9     		bls	.L108
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2622:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 73


2623:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1306              		.loc 1 2625 0 is_stmt 1
 1307              		@ sp needed
 1308              	.LVL133:
 1309 002c 70BD     		pop	{r4, r5, r6, pc}
 1310              	.L110:
 1311 002e C046     		.align	2
 1312              	.L109:
 1313 0030 00000000 		.word	CapSense_dsFlash
 1314              		.cfi_endproc
 1315              	.LFE21:
 1316              		.size	CapSense_SsClearCSDSensors, .-CapSense_SsClearCSDSensors
 1317              		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1318              		.align	2
 1319              		.global	CapSense_SsCSDGetColSnsClkDivider
 1320              		.code	16
 1321              		.thumb_func
 1322              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 1323              	CapSense_SsCSDGetColSnsClkDivider:
 1324              	.LFB22:
2626:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1325              		.loc 1 2649 0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 0
 1328              		@ frame_needed = 0, uses_anonymous_args = 0
 1329              		@ link register save eliminated.
 1330              	.LVL134:
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2651:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2652:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2653:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2654:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 74


2655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1331              		.loc 1 2656 0
 1332 0000 4001     		lsls	r0, r0, #5
 1333              	.LVL135:
 1334 0002 024B     		ldr	r3, .L112
 1335 0004 1818     		adds	r0, r3, r0
 1336 0006 4368     		ldr	r3, [r0, #4]
 1337              	.LVL136:
2657:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2658:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2659:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1338              		.loc 1 2659 0
 1339 0008 9889     		ldrh	r0, [r3, #12]
 1340              	.LVL137:
2660:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2661:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2662:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2663:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2664:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2665:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2666:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2667:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1341              		.loc 1 2667 0
 1342              		@ sp needed
 1343 000a 7047     		bx	lr
 1344              	.L113:
 1345              		.align	2
 1346              	.L112:
 1347 000c 00000000 		.word	CapSense_dsFlash
 1348              		.cfi_endproc
 1349              	.LFE22:
 1350              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1351              		.section	.text.CapSense_SsCSDSetColSnsClkDivider,"ax",%progbits
 1352              		.align	2
 1353              		.global	CapSense_SsCSDSetColSnsClkDivider
 1354              		.code	16
 1355              		.thumb_func
 1356              		.type	CapSense_SsCSDSetColSnsClkDivider, %function
 1357              	CapSense_SsCSDSetColSnsClkDivider:
 1358              	.LFB23:
2668:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2669:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2670:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2671:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDSetColSnsClkDivider
2672:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2673:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2674:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2675:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function sets the Sense Clock Divider value for one-dimension widgets
2676:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2677:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2678:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2679:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function sets the Sense Clock Divider value based on the Component
2680:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2681:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2682:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2683:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 75


2684:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widgetId Specifies the ID of the widget.
2685:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2686:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return The Sense Clock Divider value for one-dimension widgets
2687:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        and the Column Sense Clock divider value for two-dimension widgets.
2688:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2689:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2690:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsCSDSetColSnsClkDivider(uint32 widgetId, uint32 dividerVal)
2691:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1359              		.loc 1 2691 0
 1360              		.cfi_startproc
 1361              		@ args = 0, pretend = 0, frame = 0
 1362              		@ frame_needed = 0, uses_anonymous_args = 0
 1363              		@ link register save eliminated.
 1364              	.LVL138:
2692:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2693:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2694:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2695:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2696:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1365              		.loc 1 2696 0
 1366 0000 4001     		lsls	r0, r0, #5
 1367              	.LVL139:
 1368 0002 024B     		ldr	r3, .L115
 1369 0004 1818     		adds	r0, r3, r0
 1370 0006 4368     		ldr	r3, [r0, #4]
 1371              	.LVL140:
2697:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2698:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt->snsClk = (uint16)dividerVal;
 1372              		.loc 1 2699 0
 1373 0008 9981     		strh	r1, [r3, #12]
2700:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2701:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsRam.snsCsdClk = (uint16)dividerVal;
2702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2704:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1374              		.loc 1 2705 0
 1375              		@ sp needed
 1376 000a 7047     		bx	lr
 1377              	.L116:
 1378              		.align	2
 1379              	.L115:
 1380 000c 00000000 		.word	CapSense_dsFlash
 1381              		.cfi_endproc
 1382              	.LFE23:
 1383              		.size	CapSense_SsCSDSetColSnsClkDivider, .-CapSense_SsCSDSetColSnsClkDivider
 1384              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1385              		.align	2
 1386              		.global	CapSense_SsCSDCalcPrsSize
 1387              		.code	16
 1388              		.thumb_func
 1389              		.type	CapSense_SsCSDCalcPrsSize, %function
 1390              	CapSense_SsCSDCalcPrsSize:
 1391              	.LFB24:
2706:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2707:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 76


2708:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2711:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2715:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2716:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2730:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2733:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2737:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2740:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2741:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2745:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2746:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2747:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2752:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2755:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2757:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2758:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2759:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2762:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 77


2765:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2766:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2767:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2768:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2769:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2770:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1392              		.loc 1 2775 0
 1393              		.cfi_startproc
 1394              		@ args = 0, pretend = 0, frame = 0
 1395              		@ frame_needed = 0, uses_anonymous_args = 0
 1396              		@ link register save eliminated.
 1397              	.LVL141:
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2778:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if ((CapSense_ENABLE != CapSense_CSDV2) && \
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK))
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1398              		.loc 1 2784 0
 1399 0000 0203     		lsls	r2, r0, #12
 1400 0002 121A     		subs	r2, r2, r0
 1401 0004 0123     		movs	r3, #1
 1402 0006 8B40     		lsls	r3, r3, r1
 1403 0008 013B     		subs	r3, r3, #1
 1404 000a 9A42     		cmp	r2, r3
 1405 000c 05D9     		bls	.L119
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1406              		.loc 1 2789 0
 1407 000e 0202     		lsls	r2, r0, #8
 1408 0010 101A     		subs	r0, r2, r0
 1409              	.LVL142:
 1410 0012 8342     		cmp	r3, r0
 1411 0014 03D3     		bcc	.L120
2790:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2792:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1412              		.loc 1 2792 0
 1413 0016 0520     		movs	r0, #5
 1414 0018 02E0     		b	.L118
 1415              	.LVL143:
 1416              	.L119:
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1417              		.loc 1 2787 0
 1418 001a 0620     		movs	r0, #6
 1419              	.LVL144:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 78


 1420 001c 00E0     		b	.L118
 1421              	.L120:
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2795:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2796:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1422              		.loc 1 2797 0
 1423 001e 0020     		movs	r0, #0
 1424              	.L118:
 1425              	.LVL145:
2798:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1426              		.loc 1 2800 0
 1427 0020 C0B2     		uxtb	r0, r0
 1428              	.LVL146:
2801:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1429              		.loc 1 2801 0
 1430              		@ sp needed
 1431 0022 7047     		bx	lr
 1432              		.cfi_endproc
 1433              	.LFE24:
 1434              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
 1435              		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1436              		.align	2
 1437              		.code	16
 1438              		.thumb_func
 1439              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
 1440              	CapSense_SsSetWidgetSenseClkSrc:
 1441              	.LFB18:
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1442              		.loc 1 2239 0
 1443              		.cfi_startproc
 1444              		@ args = 0, pretend = 0, frame = 0
 1445              		@ frame_needed = 0, uses_anonymous_args = 0
 1446              	.LVL147:
 1447 0000 70B5     		push	{r4, r5, r6, lr}
 1448              		.cfi_def_cfa_offset 16
 1449              		.cfi_offset 4, -16
 1450              		.cfi_offset 5, -12
 1451              		.cfi_offset 6, -8
 1452              		.cfi_offset 14, -4
 1453 0002 0E00     		movs	r6, r1
2251:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1454              		.loc 1 2251 0
 1455 0004 FFF7FEFF 		bl	CapSense_SsCSDGetColSnsClkDivider
 1456              	.LVL148:
 1457 0008 0500     		movs	r5, r0
 1458              	.LVL149:
2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
 1459              		.loc 1 2254 0
 1460 000a 7188     		ldrh	r1, [r6, #2]
 1461 000c 0022     		movs	r2, #0
 1462 000e FFF7FEFF 		bl	CapSense_SsCSDGetNumberOfConversions
 1463              	.LVL150:
 1464 0012 0100     		movs	r1, r0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 79


 1465              	.LVL151:
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
 1466              		.loc 1 2256 0
 1467 0014 2800     		movs	r0, r5
 1468              	.LVL152:
 1469 0016 FFF7FEFF 		bl	CapSense_SsCalcLfsrSize
 1470              	.LVL153:
 1471 001a 041E     		subs	r4, r0, #0
 1472              	.LVL154:
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1473              		.loc 1 2257 0
 1474 001c 04D1     		bne	.L122
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1475              		.loc 1 2263 0
 1476 001e 6800     		lsls	r0, r5, #1
 1477              	.LVL155:
 1478 0020 7188     		ldrh	r1, [r6, #2]
 1479 0022 FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1480              	.LVL156:
 1481 0026 0400     		movs	r4, r0
 1482              	.LVL157:
 1483              	.L122:
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
 1484              		.loc 1 2265 0
 1485 0028 2100     		movs	r1, r4
 1486 002a 2800     		movs	r0, r5
 1487 002c FFF7FEFF 		bl	CapSense_SsCalcLfsrScale
 1488              	.LVL158:
2280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1489              		.loc 1 2280 0
 1490 0030 0001     		lsls	r0, r0, #4
 1491              	.LVL159:
 1492 0032 C0B2     		uxtb	r0, r0
 1493 0034 2043     		orrs	r0, r4
 1494 0036 B073     		strb	r0, [r6, #14]
2315:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1495              		.loc 1 2315 0
 1496              		@ sp needed
 1497              	.LVL160:
 1498              	.LVL161:
 1499              	.LVL162:
 1500 0038 70BD     		pop	{r4, r5, r6, pc}
 1501              		.cfi_endproc
 1502              	.LFE18:
 1503              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
 1504 003a C046     		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1505              		.align	2
 1506              		.global	CapSense_SsInitializeSourceSenseClk
 1507              		.code	16
 1508              		.thumb_func
 1509              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1510              	CapSense_SsInitializeSourceSenseClk:
 1511              	.LFB17:
2186:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1512              		.loc 1 2186 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 80


 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516 0000 10B5     		push	{r4, lr}
 1517              		.cfi_def_cfa_offset 8
 1518              		.cfi_offset 4, -8
 1519              		.cfi_offset 14, -4
 1520              	.LVL163:
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1521              		.loc 1 2190 0
 1522 0002 0024     		movs	r4, #0
 1523 0004 0AE0     		b	.L124
 1524              	.LVL164:
 1525              	.L125:
2192:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1526              		.loc 1 2192 0
 1527 0006 6301     		lsls	r3, r4, #5
 1528 0008 064A     		ldr	r2, .L126
 1529 000a D318     		adds	r3, r2, r3
 1530 000c 5968     		ldr	r1, [r3, #4]
 1531              	.LVL165:
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1532              		.loc 1 2198 0
 1533 000e 2000     		movs	r0, r4
 1534 0010 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1535              	.LVL166:
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
 1536              		.loc 1 2210 0
 1537 0014 2000     		movs	r0, r4
 1538 0016 FFF7FEFF 		bl	CapSense_DsUpdateWidgetCrc
 1539              	.LVL167:
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1540              		.loc 1 2190 0
 1541 001a 0134     		adds	r4, r4, #1
 1542              	.LVL168:
 1543              	.L124:
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1544              		.loc 1 2190 0 is_stmt 0 discriminator 1
 1545 001c 0C2C     		cmp	r4, #12
 1546 001e F2D9     		bls	.L125
2213:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1547              		.loc 1 2213 0 is_stmt 1
 1548              		@ sp needed
 1549              	.LVL169:
 1550 0020 10BD     		pop	{r4, pc}
 1551              	.L127:
 1552 0022 C046     		.align	2
 1553              	.L126:
 1554 0024 00000000 		.word	CapSense_dsFlash
 1555              		.cfi_endproc
 1556              	.LFE17:
 1557              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1558              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1559              		.align	2
 1560              		.global	CapSense_SsInitialize
 1561              		.code	16
 1562              		.thumb_func
 1563              		.type	CapSense_SsInitialize, %function
 1564              	CapSense_SsInitialize:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 81


 1565              	.LFB5:
 517:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1566              		.loc 1 517 0
 1567              		.cfi_startproc
 1568              		@ args = 0, pretend = 0, frame = 0
 1569              		@ frame_needed = 0, uses_anonymous_args = 0
 1570 0000 10B5     		push	{r4, lr}
 1571              		.cfi_def_cfa_offset 8
 1572              		.cfi_offset 4, -8
 1573              		.cfi_offset 14, -4
 1574              	.LVL170:
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 1575              		.loc 1 556 0
 1576 0002 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 1577              	.LVL171:
 561:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1578              		.loc 1 561 0
 1579 0006 FFF7FEFF 		bl	CapSense_SsSetIOsInDefaultState
 1580              	.LVL172:
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 1581              		.loc 1 565 0
 1582 000a 0020     		movs	r0, #0
 1583 000c FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1584              	.LVL173:
 578:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1585              		.loc 1 578 0
 1586 0010 0020     		movs	r0, #0
 1587              		@ sp needed
 1588 0012 10BD     		pop	{r4, pc}
 1589              		.cfi_endproc
 1590              	.LFE5:
 1591              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 1592              		.section	.text.CapSense_BistDischargeExtCapacitors,"ax",%progbits
 1593              		.align	2
 1594              		.global	CapSense_BistDischargeExtCapacitors
 1595              		.code	16
 1596              		.thumb_func
 1597              		.type	CapSense_BistDischargeExtCapacitors, %function
 1598              	CapSense_BistDischargeExtCapacitors:
 1599              	.LFB25:
2802:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2803:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2804:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2805:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2806:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
2807:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2808:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_BistDischargeExtCapacitors
2809:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2811:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2812:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors.
2813:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2814:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2815:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2816:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects 
2817:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2818:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 82


2819:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2820:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2821:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2822:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_BistDischargeExtCapacitors(void)
2823:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1600              		.loc 1 2823 0
 1601              		.cfi_startproc
 1602              		@ args = 0, pretend = 0, frame = 0
 1603              		@ frame_needed = 0, uses_anonymous_args = 0
 1604 0000 70B5     		push	{r4, r5, r6, lr}
 1605              		.cfi_def_cfa_offset 16
 1606              		.cfi_offset 4, -16
 1607              		.cfi_offset 5, -12
 1608              		.cfi_offset 6, -8
 1609              		.cfi_offset 14, -4
2824:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
2825:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8  interruptState;
2826:Generated_Source\PSoC4/CapSense_Sensing.c ****         
2827:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2828:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1610              		.loc 1 2828 0
 1611 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1612              	.LVL174:
2829:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1613              		.loc 1 2829 0
 1614 0006 134A     		ldr	r2, .L130
 1615 0008 1168     		ldr	r1, [r2]
 1616              	.LVL175:
2830:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1617              		.loc 1 2830 0
 1618 000a 134B     		ldr	r3, .L130+4
 1619 000c 0B40     		ands	r3, r1
 1620              	.LVL176:
2831:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1621              		.loc 1 2831 0
 1622 000e 1360     		str	r3, [r2]
2832:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1623              		.loc 1 2832 0
 1624 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1625              	.LVL177:
2833:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2834:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2835:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1626              		.loc 1 2835 0
 1627 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1628              	.LVL178:
2836:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1629              		.loc 1 2836 0
 1630 0018 104A     		ldr	r2, .L130+8
 1631 001a 1368     		ldr	r3, [r2]
 1632              	.LVL179:
2837:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1633              		.loc 1 2837 0
 1634 001c 0C21     		movs	r1, #12
 1635 001e 8B43     		bics	r3, r1
 1636              	.LVL180:
2838:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 83


 1637              		.loc 1 2838 0
 1638 0020 1360     		str	r3, [r2]
2839:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1639              		.loc 1 2839 0
 1640 0022 FFF7FEFF 		bl	CyExitCriticalSection
 1641              	.LVL181:
2840:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2841:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2842:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1642              		.loc 1 2842 0
 1643 0026 FFF7FEFF 		bl	CyEnterCriticalSection
 1644              	.LVL182:
2843:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1645              		.loc 1 2843 0
 1646 002a 0D4C     		ldr	r4, .L130+12
 1647 002c 2368     		ldr	r3, [r4]
 1648              	.LVL183:
2844:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1649              		.loc 1 2844 0
 1650 002e 0D4D     		ldr	r5, .L130+16
 1651 0030 2B40     		ands	r3, r5
 1652              	.LVL184:
2845:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
 1653              		.loc 1 2845 0
 1654 0032 D822     		movs	r2, #216
 1655 0034 1201     		lsls	r2, r2, #4
 1656 0036 1343     		orrs	r3, r2
 1657              	.LVL185:
2846:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1658              		.loc 1 2846 0
 1659 0038 2360     		str	r3, [r4]
2847:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1660              		.loc 1 2847 0
 1661 003a FFF7FEFF 		bl	CyExitCriticalSection
 1662              	.LVL186:
2848:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2849:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2850:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs(CapSense_EXT_CAP_DISCHARGE_TIME);
 1663              		.loc 1 2850 0
 1664 003e 0120     		movs	r0, #1
 1665 0040 FFF7FEFF 		bl	CyDelayUs
 1666              	.LVL187:
2851:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2852:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2853:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1667              		.loc 1 2853 0
 1668 0044 FFF7FEFF 		bl	CyEnterCriticalSection
 1669              	.LVL188:
2854:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1670              		.loc 1 2854 0
 1671 0048 2368     		ldr	r3, [r4]
 1672              	.LVL189:
2855:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1673              		.loc 1 2855 0
 1674 004a 1D40     		ands	r5, r3
 1675              	.LVL190:
2856:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 84


 1676              		.loc 1 2856 0
 1677 004c 2560     		str	r5, [r4]
2857:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1678              		.loc 1 2857 0
 1679 004e FFF7FEFF 		bl	CyExitCriticalSection
 1680              	.LVL191:
2858:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1681              		.loc 1 2858 0
 1682              		@ sp needed
 1683              	.LVL192:
 1684 0052 70BD     		pop	{r4, r5, r6, pc}
 1685              	.L131:
 1686              		.align	2
 1687              	.L130:
 1688 0054 00040240 		.word	1073873920
 1689 0058 FFF0FDBF 		.word	-1073876737
 1690 005c 00040440 		.word	1074004992
 1691 0060 08040440 		.word	1074005000
 1692 0064 3FF0FFFF 		.word	-4033
 1693              		.cfi_endproc
 1694              	.LFE25:
 1695              		.size	CapSense_BistDischargeExtCapacitors, .-CapSense_BistDischargeExtCapacitors
 1696              		.comm	CapSense_curSnsIOPtr,4,4
 1697              		.comm	CapSense_curRamSnsPtr,4,4
 1698              		.global	CapSense_requestScanAllWidget
 1699              		.global	CapSense_sensorIndex
 1700              		.global	CapSense_widgetIndex
 1701              		.global	CapSense_scanFreqIndex
 1702              		.global	CapSense_currentSenseMethod
 1703              		.section	.rodata
 1704              		.type	CapSense_scanFreqIndex, %object
 1705              		.size	CapSense_scanFreqIndex, 1
 1706              	CapSense_scanFreqIndex:
 1707 0000 00       		.space	1
 1708              		.bss
 1709              		.set	.LANCHOR0,. + 0
 1710              		.type	CapSense_currentSenseMethod, %object
 1711              		.size	CapSense_currentSenseMethod, 1
 1712              	CapSense_currentSenseMethod:
 1713 0000 00       		.space	1
 1714              		.type	CapSense_requestScanAllWidget, %object
 1715              		.size	CapSense_requestScanAllWidget, 1
 1716              	CapSense_requestScanAllWidget:
 1717 0001 00       		.space	1
 1718              		.type	CapSense_widgetIndex, %object
 1719              		.size	CapSense_widgetIndex, 1
 1720              	CapSense_widgetIndex:
 1721 0002 00       		.space	1
 1722              		.type	CapSense_sensorIndex, %object
 1723              		.size	CapSense_sensorIndex, 1
 1724              	CapSense_sensorIndex:
 1725 0003 00       		.space	1
 1726              		.text
 1727              	.Letext0:
 1728              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1729              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1730              		.file 4 "Generated_Source\\PSoC4\\CapSense_Structure.h"
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 85


 1731              		.file 5 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 1732              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 1733              		.file 7 "Generated_Source\\PSoC4\\CapSense_SelfTest.h"
 1734              		.file 8 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1735              		.section	.debug_info,"",%progbits
 1736              	.Ldebug_info0:
 1737 0000 EE120000 		.4byte	0x12ee
 1738 0004 0400     		.2byte	0x4
 1739 0006 00000000 		.4byte	.Ldebug_abbrev0
 1740 000a 04       		.byte	0x4
 1741 000b 01       		.uleb128 0x1
 1742 000c F3020000 		.4byte	.LASF205
 1743 0010 0C       		.byte	0xc
 1744 0011 B6090000 		.4byte	.LASF206
 1745 0015 75000000 		.4byte	.LASF207
 1746 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1747 001d 00000000 		.4byte	0
 1748 0021 00000000 		.4byte	.Ldebug_line0
 1749 0025 02       		.uleb128 0x2
 1750 0026 01       		.byte	0x1
 1751 0027 06       		.byte	0x6
 1752 0028 020C0000 		.4byte	.LASF0
 1753 002c 02       		.uleb128 0x2
 1754 002d 01       		.byte	0x1
 1755 002e 08       		.byte	0x8
 1756 002f DA0A0000 		.4byte	.LASF1
 1757 0033 02       		.uleb128 0x2
 1758 0034 02       		.byte	0x2
 1759 0035 05       		.byte	0x5
 1760 0036 9A080000 		.4byte	.LASF2
 1761 003a 02       		.uleb128 0x2
 1762 003b 02       		.byte	0x2
 1763 003c 07       		.byte	0x7
 1764 003d 2A0C0000 		.4byte	.LASF3
 1765 0041 02       		.uleb128 0x2
 1766 0042 04       		.byte	0x4
 1767 0043 05       		.byte	0x5
 1768 0044 D2080000 		.4byte	.LASF4
 1769 0048 02       		.uleb128 0x2
 1770 0049 04       		.byte	0x4
 1771 004a 07       		.byte	0x7
 1772 004b 480A0000 		.4byte	.LASF5
 1773 004f 02       		.uleb128 0x2
 1774 0050 08       		.byte	0x8
 1775 0051 05       		.byte	0x5
 1776 0052 4B060000 		.4byte	.LASF6
 1777 0056 02       		.uleb128 0x2
 1778 0057 08       		.byte	0x8
 1779 0058 07       		.byte	0x7
 1780 0059 AF030000 		.4byte	.LASF7
 1781 005d 03       		.uleb128 0x3
 1782 005e 04       		.byte	0x4
 1783 005f 05       		.byte	0x5
 1784 0060 696E7400 		.ascii	"int\000"
 1785 0064 02       		.uleb128 0x2
 1786 0065 04       		.byte	0x4
 1787 0066 07       		.byte	0x7
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 86


 1788 0067 48010000 		.4byte	.LASF8
 1789 006b 04       		.uleb128 0x4
 1790 006c 900C0000 		.4byte	.LASF9
 1791 0070 02       		.byte	0x2
 1792 0071 E401     		.2byte	0x1e4
 1793 0073 2C000000 		.4byte	0x2c
 1794 0077 04       		.uleb128 0x4
 1795 0078 69050000 		.4byte	.LASF10
 1796 007c 02       		.byte	0x2
 1797 007d E501     		.2byte	0x1e5
 1798 007f 3A000000 		.4byte	0x3a
 1799 0083 04       		.uleb128 0x4
 1800 0084 5E070000 		.4byte	.LASF11
 1801 0088 02       		.byte	0x2
 1802 0089 E601     		.2byte	0x1e6
 1803 008b 48000000 		.4byte	0x48
 1804 008f 02       		.uleb128 0x2
 1805 0090 04       		.byte	0x4
 1806 0091 04       		.byte	0x4
 1807 0092 CC020000 		.4byte	.LASF12
 1808 0096 02       		.uleb128 0x2
 1809 0097 08       		.byte	0x8
 1810 0098 04       		.byte	0x4
 1811 0099 960C0000 		.4byte	.LASF13
 1812 009d 02       		.uleb128 0x2
 1813 009e 01       		.byte	0x1
 1814 009f 08       		.byte	0x8
 1815 00a0 00050000 		.4byte	.LASF14
 1816 00a4 04       		.uleb128 0x4
 1817 00a5 D10A0000 		.4byte	.LASF15
 1818 00a9 02       		.byte	0x2
 1819 00aa 8602     		.2byte	0x286
 1820 00ac 48000000 		.4byte	0x48
 1821 00b0 05       		.uleb128 0x5
 1822 00b1 6B000000 		.4byte	0x6b
 1823 00b5 04       		.uleb128 0x4
 1824 00b6 11080000 		.4byte	.LASF16
 1825 00ba 02       		.byte	0x2
 1826 00bb 9002     		.2byte	0x290
 1827 00bd C1000000 		.4byte	0xc1
 1828 00c1 05       		.uleb128 0x5
 1829 00c2 83000000 		.4byte	0x83
 1830 00c6 04       		.uleb128 0x4
 1831 00c7 2C070000 		.4byte	.LASF17
 1832 00cb 02       		.byte	0x2
 1833 00cc A002     		.2byte	0x2a0
 1834 00ce D2000000 		.4byte	0xd2
 1835 00d2 06       		.uleb128 0x6
 1836 00d3 04       		.byte	0x4
 1837 00d4 D8000000 		.4byte	0xd8
 1838 00d8 07       		.uleb128 0x7
 1839 00d9 04       		.uleb128 0x4
 1840 00da 1C0B0000 		.4byte	.LASF18
 1841 00de 03       		.byte	0x3
 1842 00df 4D01     		.2byte	0x14d
 1843 00e1 77000000 		.4byte	0x77
 1844 00e5 04       		.uleb128 0x4
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 87


 1845 00e6 DD050000 		.4byte	.LASF19
 1846 00ea 03       		.byte	0x3
 1847 00eb 5101     		.2byte	0x151
 1848 00ed 6B000000 		.4byte	0x6b
 1849 00f1 08       		.uleb128 0x8
 1850 00f2 01       		.byte	0x1
 1851 00f3 2C000000 		.4byte	0x2c
 1852 00f7 04       		.byte	0x4
 1853 00f8 70       		.byte	0x70
 1854 00f9 1C010000 		.4byte	0x11c
 1855 00fd 09       		.uleb128 0x9
 1856 00fe 33010000 		.4byte	.LASF20
 1857 0102 00       		.byte	0
 1858 0103 09       		.uleb128 0x9
 1859 0104 F7090000 		.4byte	.LASF21
 1860 0108 01       		.byte	0x1
 1861 0109 09       		.uleb128 0x9
 1862 010a F4080000 		.4byte	.LASF22
 1863 010e 02       		.byte	0x2
 1864 010f 09       		.uleb128 0x9
 1865 0110 4E0B0000 		.4byte	.LASF23
 1866 0114 03       		.byte	0x3
 1867 0115 09       		.uleb128 0x9
 1868 0116 E9070000 		.4byte	.LASF24
 1869 011a 04       		.byte	0x4
 1870 011b 00       		.byte	0
 1871 011c 0A       		.uleb128 0xa
 1872 011d 21060000 		.4byte	.LASF25
 1873 0121 04       		.byte	0x4
 1874 0122 76       		.byte	0x76
 1875 0123 F1000000 		.4byte	0xf1
 1876 0127 0B       		.uleb128 0xb
 1877 0128 10       		.byte	0x10
 1878 0129 04       		.byte	0x4
 1879 012a 8E       		.byte	0x8e
 1880 012b B4010000 		.4byte	0x1b4
 1881 012f 0C       		.uleb128 0xc
 1882 0130 63726300 		.ascii	"crc\000"
 1883 0134 04       		.byte	0x4
 1884 0135 93       		.byte	0x93
 1885 0136 77000000 		.4byte	0x77
 1886 013a 00       		.byte	0
 1887 013b 0D       		.uleb128 0xd
 1888 013c B2050000 		.4byte	.LASF26
 1889 0140 04       		.byte	0x4
 1890 0141 98       		.byte	0x98
 1891 0142 77000000 		.4byte	0x77
 1892 0146 02       		.byte	0x2
 1893 0147 0D       		.uleb128 0xd
 1894 0148 A20A0000 		.4byte	.LASF27
 1895 014c 04       		.byte	0x4
 1896 014d 9D       		.byte	0x9d
 1897 014e D9000000 		.4byte	0xd9
 1898 0152 04       		.byte	0x4
 1899 0153 0D       		.uleb128 0xd
 1900 0154 F8040000 		.4byte	.LASF28
 1901 0158 04       		.byte	0x4
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 88


 1902 0159 A2       		.byte	0xa2
 1903 015a 6B000000 		.4byte	0x6b
 1904 015e 06       		.byte	0x6
 1905 015f 0D       		.uleb128 0xd
 1906 0160 18070000 		.4byte	.LASF29
 1907 0164 04       		.byte	0x4
 1908 0165 A7       		.byte	0xa7
 1909 0166 6B000000 		.4byte	0x6b
 1910 016a 07       		.byte	0x7
 1911 016b 0D       		.uleb128 0xd
 1912 016c 95040000 		.4byte	.LASF30
 1913 0170 04       		.byte	0x4
 1914 0171 AD       		.byte	0xad
 1915 0172 6B000000 		.4byte	0x6b
 1916 0176 08       		.byte	0x8
 1917 0177 0D       		.uleb128 0xd
 1918 0178 7A060000 		.4byte	.LASF31
 1919 017c 04       		.byte	0x4
 1920 017d B3       		.byte	0xb3
 1921 017e 6B000000 		.4byte	0x6b
 1922 0182 09       		.byte	0x9
 1923 0183 0D       		.uleb128 0xd
 1924 0184 B9040000 		.4byte	.LASF32
 1925 0188 04       		.byte	0x4
 1926 0189 BA       		.byte	0xba
 1927 018a E5000000 		.4byte	0xe5
 1928 018e 0A       		.byte	0xa
 1929 018f 0D       		.uleb128 0xd
 1930 0190 690A0000 		.4byte	.LASF33
 1931 0194 04       		.byte	0x4
 1932 0195 C1       		.byte	0xc1
 1933 0196 B4010000 		.4byte	0x1b4
 1934 019a 0B       		.byte	0xb
 1935 019b 0D       		.uleb128 0xd
 1936 019c B10B0000 		.4byte	.LASF34
 1937 01a0 04       		.byte	0x4
 1938 01a1 C9       		.byte	0xc9
 1939 01a2 77000000 		.4byte	0x77
 1940 01a6 0C       		.byte	0xc
 1941 01a7 0D       		.uleb128 0xd
 1942 01a8 57080000 		.4byte	.LASF35
 1943 01ac 04       		.byte	0x4
 1944 01ad CE       		.byte	0xce
 1945 01ae 6B000000 		.4byte	0x6b
 1946 01b2 0E       		.byte	0xe
 1947 01b3 00       		.byte	0
 1948 01b4 0E       		.uleb128 0xe
 1949 01b5 6B000000 		.4byte	0x6b
 1950 01b9 C4010000 		.4byte	0x1c4
 1951 01bd 0F       		.uleb128 0xf
 1952 01be C4010000 		.4byte	0x1c4
 1953 01c2 00       		.byte	0
 1954 01c3 00       		.byte	0
 1955 01c4 02       		.uleb128 0x2
 1956 01c5 04       		.byte	0x4
 1957 01c6 07       		.byte	0x7
 1958 01c7 370A0000 		.4byte	.LASF36
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 89


 1959 01cb 0A       		.uleb128 0xa
 1960 01cc 39070000 		.4byte	.LASF37
 1961 01d0 04       		.byte	0x4
 1962 01d1 CF       		.byte	0xcf
 1963 01d2 27010000 		.4byte	0x127
 1964 01d6 0B       		.uleb128 0xb
 1965 01d7 10       		.byte	0x10
 1966 01d8 04       		.byte	0x4
 1967 01d9 D4       		.byte	0xd4
 1968 01da 67020000 		.4byte	0x267
 1969 01de 0C       		.uleb128 0xc
 1970 01df 63726300 		.ascii	"crc\000"
 1971 01e3 04       		.byte	0x4
 1972 01e4 D9       		.byte	0xd9
 1973 01e5 77000000 		.4byte	0x77
 1974 01e9 00       		.byte	0
 1975 01ea 0D       		.uleb128 0xd
 1976 01eb B2050000 		.4byte	.LASF26
 1977 01ef 04       		.byte	0x4
 1978 01f0 DE       		.byte	0xde
 1979 01f1 77000000 		.4byte	0x77
 1980 01f5 02       		.byte	0x2
 1981 01f6 0D       		.uleb128 0xd
 1982 01f7 A20A0000 		.4byte	.LASF27
 1983 01fb 04       		.byte	0x4
 1984 01fc E3       		.byte	0xe3
 1985 01fd D9000000 		.4byte	0xd9
 1986 0201 04       		.byte	0x4
 1987 0202 0D       		.uleb128 0xd
 1988 0203 F8040000 		.4byte	.LASF28
 1989 0207 04       		.byte	0x4
 1990 0208 E8       		.byte	0xe8
 1991 0209 6B000000 		.4byte	0x6b
 1992 020d 06       		.byte	0x6
 1993 020e 0D       		.uleb128 0xd
 1994 020f 18070000 		.4byte	.LASF29
 1995 0213 04       		.byte	0x4
 1996 0214 ED       		.byte	0xed
 1997 0215 6B000000 		.4byte	0x6b
 1998 0219 07       		.byte	0x7
 1999 021a 0D       		.uleb128 0xd
 2000 021b 95040000 		.4byte	.LASF30
 2001 021f 04       		.byte	0x4
 2002 0220 F3       		.byte	0xf3
 2003 0221 6B000000 		.4byte	0x6b
 2004 0225 08       		.byte	0x8
 2005 0226 0D       		.uleb128 0xd
 2006 0227 7A060000 		.4byte	.LASF31
 2007 022b 04       		.byte	0x4
 2008 022c F9       		.byte	0xf9
 2009 022d 6B000000 		.4byte	0x6b
 2010 0231 09       		.byte	0x9
 2011 0232 10       		.uleb128 0x10
 2012 0233 B9040000 		.4byte	.LASF32
 2013 0237 04       		.byte	0x4
 2014 0238 0001     		.2byte	0x100
 2015 023a E5000000 		.4byte	0xe5
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 90


 2016 023e 0A       		.byte	0xa
 2017 023f 10       		.uleb128 0x10
 2018 0240 690A0000 		.4byte	.LASF33
 2019 0244 04       		.byte	0x4
 2020 0245 0701     		.2byte	0x107
 2021 0247 B4010000 		.4byte	0x1b4
 2022 024b 0B       		.byte	0xb
 2023 024c 10       		.uleb128 0x10
 2024 024d B10B0000 		.4byte	.LASF34
 2025 0251 04       		.byte	0x4
 2026 0252 0F01     		.2byte	0x10f
 2027 0254 77000000 		.4byte	0x77
 2028 0258 0C       		.byte	0xc
 2029 0259 10       		.uleb128 0x10
 2030 025a 57080000 		.4byte	.LASF35
 2031 025e 04       		.byte	0x4
 2032 025f 1401     		.2byte	0x114
 2033 0261 6B000000 		.4byte	0x6b
 2034 0265 0E       		.byte	0xe
 2035 0266 00       		.byte	0
 2036 0267 04       		.uleb128 0x4
 2037 0268 B30A0000 		.4byte	.LASF38
 2038 026c 04       		.byte	0x4
 2039 026d 1501     		.2byte	0x115
 2040 026f D6010000 		.4byte	0x1d6
 2041 0273 11       		.uleb128 0x11
 2042 0274 D0       		.byte	0xd0
 2043 0275 04       		.byte	0x4
 2044 0276 1B01     		.2byte	0x11b
 2045 0278 26030000 		.4byte	0x326
 2046 027c 10       		.uleb128 0x10
 2047 027d 9D010000 		.4byte	.LASF39
 2048 0281 04       		.byte	0x4
 2049 0282 2001     		.2byte	0x120
 2050 0284 67020000 		.4byte	0x267
 2051 0288 00       		.byte	0
 2052 0289 10       		.uleb128 0x10
 2053 028a A3010000 		.4byte	.LASF40
 2054 028e 04       		.byte	0x4
 2055 028f 2501     		.2byte	0x125
 2056 0291 67020000 		.4byte	0x267
 2057 0295 10       		.byte	0x10
 2058 0296 10       		.uleb128 0x10
 2059 0297 A9010000 		.4byte	.LASF41
 2060 029b 04       		.byte	0x4
 2061 029c 2A01     		.2byte	0x12a
 2062 029e 67020000 		.4byte	0x267
 2063 02a2 20       		.byte	0x20
 2064 02a3 10       		.uleb128 0x10
 2065 02a4 AF010000 		.4byte	.LASF42
 2066 02a8 04       		.byte	0x4
 2067 02a9 2F01     		.2byte	0x12f
 2068 02ab 67020000 		.4byte	0x267
 2069 02af 30       		.byte	0x30
 2070 02b0 10       		.uleb128 0x10
 2071 02b1 B5010000 		.4byte	.LASF43
 2072 02b5 04       		.byte	0x4
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 91


 2073 02b6 3401     		.2byte	0x134
 2074 02b8 67020000 		.4byte	0x267
 2075 02bc 40       		.byte	0x40
 2076 02bd 10       		.uleb128 0x10
 2077 02be BB010000 		.4byte	.LASF44
 2078 02c2 04       		.byte	0x4
 2079 02c3 3901     		.2byte	0x139
 2080 02c5 67020000 		.4byte	0x267
 2081 02c9 50       		.byte	0x50
 2082 02ca 10       		.uleb128 0x10
 2083 02cb C1010000 		.4byte	.LASF45
 2084 02cf 04       		.byte	0x4
 2085 02d0 3E01     		.2byte	0x13e
 2086 02d2 67020000 		.4byte	0x267
 2087 02d6 60       		.byte	0x60
 2088 02d7 10       		.uleb128 0x10
 2089 02d8 C7010000 		.4byte	.LASF46
 2090 02dc 04       		.byte	0x4
 2091 02dd 4301     		.2byte	0x143
 2092 02df 67020000 		.4byte	0x267
 2093 02e3 70       		.byte	0x70
 2094 02e4 10       		.uleb128 0x10
 2095 02e5 CD010000 		.4byte	.LASF47
 2096 02e9 04       		.byte	0x4
 2097 02ea 4801     		.2byte	0x148
 2098 02ec 67020000 		.4byte	0x267
 2099 02f0 80       		.byte	0x80
 2100 02f1 10       		.uleb128 0x10
 2101 02f2 D3010000 		.4byte	.LASF48
 2102 02f6 04       		.byte	0x4
 2103 02f7 4D01     		.2byte	0x14d
 2104 02f9 67020000 		.4byte	0x267
 2105 02fd 90       		.byte	0x90
 2106 02fe 10       		.uleb128 0x10
 2107 02ff 63020000 		.4byte	.LASF49
 2108 0303 04       		.byte	0x4
 2109 0304 5201     		.2byte	0x152
 2110 0306 67020000 		.4byte	0x267
 2111 030a A0       		.byte	0xa0
 2112 030b 10       		.uleb128 0x10
 2113 030c 69020000 		.4byte	.LASF50
 2114 0310 04       		.byte	0x4
 2115 0311 5701     		.2byte	0x157
 2116 0313 67020000 		.4byte	0x267
 2117 0317 B0       		.byte	0xb0
 2118 0318 10       		.uleb128 0x10
 2119 0319 6F020000 		.4byte	.LASF51
 2120 031d 04       		.byte	0x4
 2121 031e 5C01     		.2byte	0x15c
 2122 0320 67020000 		.4byte	0x267
 2123 0324 C0       		.byte	0xc0
 2124 0325 00       		.byte	0
 2125 0326 04       		.uleb128 0x4
 2126 0327 3F020000 		.4byte	.LASF52
 2127 032b 04       		.byte	0x4
 2128 032c 5D01     		.2byte	0x15d
 2129 032e 73020000 		.4byte	0x273
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 92


 2130 0332 11       		.uleb128 0x11
 2131 0333 0C       		.byte	0xc
 2132 0334 04       		.byte	0x4
 2133 0335 6301     		.2byte	0x163
 2134 0337 97030000 		.4byte	0x397
 2135 033b 12       		.uleb128 0x12
 2136 033c 72617700 		.ascii	"raw\000"
 2137 0340 04       		.byte	0x4
 2138 0341 6801     		.2byte	0x168
 2139 0343 97030000 		.4byte	0x397
 2140 0347 00       		.byte	0
 2141 0348 10       		.uleb128 0x10
 2142 0349 250C0000 		.4byte	.LASF53
 2143 034d 04       		.byte	0x4
 2144 034e 6D01     		.2byte	0x16d
 2145 0350 97030000 		.4byte	0x397
 2146 0354 02       		.byte	0x2
 2147 0355 10       		.uleb128 0x10
 2148 0356 710B0000 		.4byte	.LASF54
 2149 035a 04       		.byte	0x4
 2150 035b 7201     		.2byte	0x172
 2151 035d 97030000 		.4byte	0x397
 2152 0361 04       		.byte	0x4
 2153 0362 10       		.uleb128 0x10
 2154 0363 AB0A0000 		.4byte	.LASF55
 2155 0367 04       		.byte	0x4
 2156 0368 7801     		.2byte	0x178
 2157 036a B4010000 		.4byte	0x1b4
 2158 036e 06       		.byte	0x6
 2159 036f 10       		.uleb128 0x10
 2160 0370 E6080000 		.4byte	.LASF56
 2161 0374 04       		.byte	0x4
 2162 0375 7D01     		.2byte	0x17d
 2163 0377 D9000000 		.4byte	0xd9
 2164 037b 08       		.byte	0x8
 2165 037c 10       		.uleb128 0x10
 2166 037d 9D0C0000 		.4byte	.LASF57
 2167 0381 04       		.byte	0x4
 2168 0382 8201     		.2byte	0x182
 2169 0384 A7030000 		.4byte	0x3a7
 2170 0388 0A       		.byte	0xa
 2171 0389 10       		.uleb128 0x10
 2172 038a 3C060000 		.4byte	.LASF58
 2173 038e 04       		.byte	0x4
 2174 038f 8701     		.2byte	0x187
 2175 0391 B4010000 		.4byte	0x1b4
 2176 0395 0B       		.byte	0xb
 2177 0396 00       		.byte	0
 2178 0397 0E       		.uleb128 0xe
 2179 0398 77000000 		.4byte	0x77
 2180 039c A7030000 		.4byte	0x3a7
 2181 03a0 0F       		.uleb128 0xf
 2182 03a1 C4010000 		.4byte	0x1c4
 2183 03a5 00       		.byte	0
 2184 03a6 00       		.byte	0
 2185 03a7 0E       		.uleb128 0xe
 2186 03a8 E5000000 		.4byte	0xe5
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 93


 2187 03ac B7030000 		.4byte	0x3b7
 2188 03b0 0F       		.uleb128 0xf
 2189 03b1 C4010000 		.4byte	0x1c4
 2190 03b5 00       		.byte	0
 2191 03b6 00       		.byte	0
 2192 03b7 04       		.uleb128 0x4
 2193 03b8 50040000 		.4byte	.LASF59
 2194 03bc 04       		.byte	0x4
 2195 03bd 8801     		.2byte	0x188
 2196 03bf 32030000 		.4byte	0x332
 2197 03c3 11       		.uleb128 0x11
 2198 03c4 9C       		.byte	0x9c
 2199 03c5 04       		.byte	0x4
 2200 03c6 8E01     		.2byte	0x18e
 2201 03c8 76040000 		.4byte	0x476
 2202 03cc 10       		.uleb128 0x10
 2203 03cd 9D010000 		.4byte	.LASF39
 2204 03d1 04       		.byte	0x4
 2205 03d2 9301     		.2byte	0x193
 2206 03d4 76040000 		.4byte	0x476
 2207 03d8 00       		.byte	0
 2208 03d9 10       		.uleb128 0x10
 2209 03da A3010000 		.4byte	.LASF40
 2210 03de 04       		.byte	0x4
 2211 03df 9801     		.2byte	0x198
 2212 03e1 76040000 		.4byte	0x476
 2213 03e5 0C       		.byte	0xc
 2214 03e6 10       		.uleb128 0x10
 2215 03e7 A9010000 		.4byte	.LASF41
 2216 03eb 04       		.byte	0x4
 2217 03ec 9D01     		.2byte	0x19d
 2218 03ee 76040000 		.4byte	0x476
 2219 03f2 18       		.byte	0x18
 2220 03f3 10       		.uleb128 0x10
 2221 03f4 AF010000 		.4byte	.LASF42
 2222 03f8 04       		.byte	0x4
 2223 03f9 A201     		.2byte	0x1a2
 2224 03fb 76040000 		.4byte	0x476
 2225 03ff 24       		.byte	0x24
 2226 0400 10       		.uleb128 0x10
 2227 0401 B5010000 		.4byte	.LASF43
 2228 0405 04       		.byte	0x4
 2229 0406 A701     		.2byte	0x1a7
 2230 0408 76040000 		.4byte	0x476
 2231 040c 30       		.byte	0x30
 2232 040d 10       		.uleb128 0x10
 2233 040e BB010000 		.4byte	.LASF44
 2234 0412 04       		.byte	0x4
 2235 0413 AC01     		.2byte	0x1ac
 2236 0415 76040000 		.4byte	0x476
 2237 0419 3C       		.byte	0x3c
 2238 041a 10       		.uleb128 0x10
 2239 041b C1010000 		.4byte	.LASF45
 2240 041f 04       		.byte	0x4
 2241 0420 B101     		.2byte	0x1b1
 2242 0422 76040000 		.4byte	0x476
 2243 0426 48       		.byte	0x48
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 94


 2244 0427 10       		.uleb128 0x10
 2245 0428 C7010000 		.4byte	.LASF46
 2246 042c 04       		.byte	0x4
 2247 042d B601     		.2byte	0x1b6
 2248 042f 76040000 		.4byte	0x476
 2249 0433 54       		.byte	0x54
 2250 0434 10       		.uleb128 0x10
 2251 0435 CD010000 		.4byte	.LASF47
 2252 0439 04       		.byte	0x4
 2253 043a BB01     		.2byte	0x1bb
 2254 043c 76040000 		.4byte	0x476
 2255 0440 60       		.byte	0x60
 2256 0441 10       		.uleb128 0x10
 2257 0442 D3010000 		.4byte	.LASF48
 2258 0446 04       		.byte	0x4
 2259 0447 C001     		.2byte	0x1c0
 2260 0449 76040000 		.4byte	0x476
 2261 044d 6C       		.byte	0x6c
 2262 044e 10       		.uleb128 0x10
 2263 044f 63020000 		.4byte	.LASF49
 2264 0453 04       		.byte	0x4
 2265 0454 C501     		.2byte	0x1c5
 2266 0456 76040000 		.4byte	0x476
 2267 045a 78       		.byte	0x78
 2268 045b 10       		.uleb128 0x10
 2269 045c 69020000 		.4byte	.LASF50
 2270 0460 04       		.byte	0x4
 2271 0461 CA01     		.2byte	0x1ca
 2272 0463 76040000 		.4byte	0x476
 2273 0467 84       		.byte	0x84
 2274 0468 10       		.uleb128 0x10
 2275 0469 6F020000 		.4byte	.LASF51
 2276 046d 04       		.byte	0x4
 2277 046e CF01     		.2byte	0x1cf
 2278 0470 76040000 		.4byte	0x476
 2279 0474 90       		.byte	0x90
 2280 0475 00       		.byte	0
 2281 0476 0E       		.uleb128 0xe
 2282 0477 B7030000 		.4byte	0x3b7
 2283 047b 86040000 		.4byte	0x486
 2284 047f 0F       		.uleb128 0xf
 2285 0480 C4010000 		.4byte	0x1c4
 2286 0484 00       		.byte	0
 2287 0485 00       		.byte	0
 2288 0486 04       		.uleb128 0x4
 2289 0487 3E0D0000 		.4byte	.LASF60
 2290 048b 04       		.byte	0x4
 2291 048c D001     		.2byte	0x1d0
 2292 048e C3030000 		.4byte	0x3c3
 2293 0492 11       		.uleb128 0x11
 2294 0493 18       		.byte	0x18
 2295 0494 04       		.byte	0x4
 2296 0495 D601     		.2byte	0x1d6
 2297 0497 45050000 		.4byte	0x545
 2298 049b 10       		.uleb128 0x10
 2299 049c C4040000 		.4byte	.LASF61
 2300 04a0 04       		.byte	0x4
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 95


 2301 04a1 DB01     		.2byte	0x1db
 2302 04a3 83000000 		.4byte	0x83
 2303 04a7 00       		.byte	0
 2304 04a8 10       		.uleb128 0x10
 2305 04a9 55090000 		.4byte	.LASF62
 2306 04ad 04       		.byte	0x4
 2307 04ae E001     		.2byte	0x1e0
 2308 04b0 45050000 		.4byte	0x545
 2309 04b4 04       		.byte	0x4
 2310 04b5 10       		.uleb128 0x10
 2311 04b6 AA090000 		.4byte	.LASF63
 2312 04ba 04       		.byte	0x4
 2313 04bb E501     		.2byte	0x1e5
 2314 04bd 77000000 		.4byte	0x77
 2315 04c1 08       		.byte	0x8
 2316 04c2 10       		.uleb128 0x10
 2317 04c3 B4070000 		.4byte	.LASF64
 2318 04c7 04       		.byte	0x4
 2319 04c8 EA01     		.2byte	0x1ea
 2320 04ca 77000000 		.4byte	0x77
 2321 04ce 0A       		.byte	0xa
 2322 04cf 10       		.uleb128 0x10
 2323 04d0 5E050000 		.4byte	.LASF65
 2324 04d4 04       		.byte	0x4
 2325 04d5 EF01     		.2byte	0x1ef
 2326 04d7 77000000 		.4byte	0x77
 2327 04db 0C       		.byte	0xc
 2328 04dc 10       		.uleb128 0x10
 2329 04dd 860A0000 		.4byte	.LASF66
 2330 04e1 04       		.byte	0x4
 2331 04e2 F501     		.2byte	0x1f5
 2332 04e4 77000000 		.4byte	0x77
 2333 04e8 0E       		.byte	0xe
 2334 04e9 10       		.uleb128 0x10
 2335 04ea 6D090000 		.4byte	.LASF67
 2336 04ee 04       		.byte	0x4
 2337 04ef FB01     		.2byte	0x1fb
 2338 04f1 6B000000 		.4byte	0x6b
 2339 04f5 10       		.byte	0x10
 2340 04f6 10       		.uleb128 0x10
 2341 04f7 47090000 		.4byte	.LASF68
 2342 04fb 04       		.byte	0x4
 2343 04fc 0002     		.2byte	0x200
 2344 04fe 6B000000 		.4byte	0x6b
 2345 0502 11       		.byte	0x11
 2346 0503 10       		.uleb128 0x10
 2347 0504 7F050000 		.4byte	.LASF69
 2348 0508 04       		.byte	0x4
 2349 0509 0502     		.2byte	0x205
 2350 050b 6B000000 		.4byte	0x6b
 2351 050f 12       		.byte	0x12
 2352 0510 10       		.uleb128 0x10
 2353 0511 38040000 		.4byte	.LASF70
 2354 0515 04       		.byte	0x4
 2355 0516 0A02     		.2byte	0x20a
 2356 0518 6B000000 		.4byte	0x6b
 2357 051c 13       		.byte	0x13
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 96


 2358 051d 10       		.uleb128 0x10
 2359 051e 0B070000 		.4byte	.LASF71
 2360 0522 04       		.byte	0x4
 2361 0523 0F02     		.2byte	0x20f
 2362 0525 6B000000 		.4byte	0x6b
 2363 0529 14       		.byte	0x14
 2364 052a 10       		.uleb128 0x10
 2365 052b 3D0C0000 		.4byte	.LASF72
 2366 052f 04       		.byte	0x4
 2367 0530 1402     		.2byte	0x214
 2368 0532 6B000000 		.4byte	0x6b
 2369 0536 15       		.byte	0x15
 2370 0537 10       		.uleb128 0x10
 2371 0538 340B0000 		.4byte	.LASF73
 2372 053c 04       		.byte	0x4
 2373 053d 1902     		.2byte	0x219
 2374 053f 6B000000 		.4byte	0x6b
 2375 0543 16       		.byte	0x16
 2376 0544 00       		.byte	0
 2377 0545 0E       		.uleb128 0xe
 2378 0546 77000000 		.4byte	0x77
 2379 054a 55050000 		.4byte	0x555
 2380 054e 0F       		.uleb128 0xf
 2381 054f C4010000 		.4byte	0x1c4
 2382 0553 01       		.byte	0x1
 2383 0554 00       		.byte	0
 2384 0555 04       		.uleb128 0x4
 2385 0556 40050000 		.4byte	.LASF74
 2386 055a 04       		.byte	0x4
 2387 055b 1A02     		.2byte	0x21a
 2388 055d 92040000 		.4byte	0x492
 2389 0561 11       		.uleb128 0x11
 2390 0562 0D       		.byte	0xd
 2391 0563 04       		.byte	0x4
 2392 0564 2002     		.2byte	0x220
 2393 0566 14060000 		.4byte	0x614
 2394 056a 10       		.uleb128 0x10
 2395 056b 9D010000 		.4byte	.LASF39
 2396 056f 04       		.byte	0x4
 2397 0570 2502     		.2byte	0x225
 2398 0572 B4010000 		.4byte	0x1b4
 2399 0576 00       		.byte	0
 2400 0577 10       		.uleb128 0x10
 2401 0578 A3010000 		.4byte	.LASF40
 2402 057c 04       		.byte	0x4
 2403 057d 2902     		.2byte	0x229
 2404 057f B4010000 		.4byte	0x1b4
 2405 0583 01       		.byte	0x1
 2406 0584 10       		.uleb128 0x10
 2407 0585 A9010000 		.4byte	.LASF41
 2408 0589 04       		.byte	0x4
 2409 058a 2D02     		.2byte	0x22d
 2410 058c B4010000 		.4byte	0x1b4
 2411 0590 02       		.byte	0x2
 2412 0591 10       		.uleb128 0x10
 2413 0592 AF010000 		.4byte	.LASF42
 2414 0596 04       		.byte	0x4
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 97


 2415 0597 3102     		.2byte	0x231
 2416 0599 B4010000 		.4byte	0x1b4
 2417 059d 03       		.byte	0x3
 2418 059e 10       		.uleb128 0x10
 2419 059f B5010000 		.4byte	.LASF43
 2420 05a3 04       		.byte	0x4
 2421 05a4 3502     		.2byte	0x235
 2422 05a6 B4010000 		.4byte	0x1b4
 2423 05aa 04       		.byte	0x4
 2424 05ab 10       		.uleb128 0x10
 2425 05ac BB010000 		.4byte	.LASF44
 2426 05b0 04       		.byte	0x4
 2427 05b1 3902     		.2byte	0x239
 2428 05b3 B4010000 		.4byte	0x1b4
 2429 05b7 05       		.byte	0x5
 2430 05b8 10       		.uleb128 0x10
 2431 05b9 C1010000 		.4byte	.LASF45
 2432 05bd 04       		.byte	0x4
 2433 05be 3D02     		.2byte	0x23d
 2434 05c0 B4010000 		.4byte	0x1b4
 2435 05c4 06       		.byte	0x6
 2436 05c5 10       		.uleb128 0x10
 2437 05c6 C7010000 		.4byte	.LASF46
 2438 05ca 04       		.byte	0x4
 2439 05cb 4102     		.2byte	0x241
 2440 05cd B4010000 		.4byte	0x1b4
 2441 05d1 07       		.byte	0x7
 2442 05d2 10       		.uleb128 0x10
 2443 05d3 CD010000 		.4byte	.LASF47
 2444 05d7 04       		.byte	0x4
 2445 05d8 4502     		.2byte	0x245
 2446 05da B4010000 		.4byte	0x1b4
 2447 05de 08       		.byte	0x8
 2448 05df 10       		.uleb128 0x10
 2449 05e0 D3010000 		.4byte	.LASF48
 2450 05e4 04       		.byte	0x4
 2451 05e5 4902     		.2byte	0x249
 2452 05e7 B4010000 		.4byte	0x1b4
 2453 05eb 09       		.byte	0x9
 2454 05ec 10       		.uleb128 0x10
 2455 05ed 63020000 		.4byte	.LASF49
 2456 05f1 04       		.byte	0x4
 2457 05f2 4D02     		.2byte	0x24d
 2458 05f4 B4010000 		.4byte	0x1b4
 2459 05f8 0A       		.byte	0xa
 2460 05f9 10       		.uleb128 0x10
 2461 05fa 69020000 		.4byte	.LASF50
 2462 05fe 04       		.byte	0x4
 2463 05ff 5102     		.2byte	0x251
 2464 0601 B4010000 		.4byte	0x1b4
 2465 0605 0B       		.byte	0xb
 2466 0606 10       		.uleb128 0x10
 2467 0607 6F020000 		.4byte	.LASF51
 2468 060b 04       		.byte	0x4
 2469 060c 5502     		.2byte	0x255
 2470 060e B4010000 		.4byte	0x1b4
 2471 0612 0C       		.byte	0xc
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 98


 2472 0613 00       		.byte	0
 2473 0614 04       		.uleb128 0x4
 2474 0615 F8010000 		.4byte	.LASF75
 2475 0619 04       		.byte	0x4
 2476 061a 5602     		.2byte	0x256
 2477 061c 61050000 		.4byte	0x561
 2478 0620 13       		.uleb128 0x13
 2479 0621 C801     		.2byte	0x1c8
 2480 0623 04       		.byte	0x4
 2481 0624 5B02     		.2byte	0x25b
 2482 0626 43070000 		.4byte	0x743
 2483 062a 10       		.uleb128 0x10
 2484 062b 2A080000 		.4byte	.LASF76
 2485 062f 04       		.byte	0x4
 2486 0630 6202     		.2byte	0x262
 2487 0632 77000000 		.4byte	0x77
 2488 0636 00       		.byte	0
 2489 0637 10       		.uleb128 0x10
 2490 0638 DD0C0000 		.4byte	.LASF77
 2491 063c 04       		.byte	0x4
 2492 063d 6702     		.2byte	0x267
 2493 063f 77000000 		.4byte	0x77
 2494 0643 02       		.byte	0x2
 2495 0644 10       		.uleb128 0x10
 2496 0645 61010000 		.4byte	.LASF78
 2497 0649 04       		.byte	0x4
 2498 064a 6C02     		.2byte	0x26c
 2499 064c 77000000 		.4byte	0x77
 2500 0650 04       		.byte	0x4
 2501 0651 10       		.uleb128 0x10
 2502 0652 EB080000 		.4byte	.LASF79
 2503 0656 04       		.byte	0x4
 2504 0657 7202     		.2byte	0x272
 2505 0659 77000000 		.4byte	0x77
 2506 065d 06       		.byte	0x6
 2507 065e 10       		.uleb128 0x10
 2508 065f 55010000 		.4byte	.LASF80
 2509 0663 04       		.byte	0x4
 2510 0664 7702     		.2byte	0x277
 2511 0666 77000000 		.4byte	0x77
 2512 066a 08       		.byte	0x8
 2513 066b 10       		.uleb128 0x10
 2514 066c BD050000 		.4byte	.LASF81
 2515 0670 04       		.byte	0x4
 2516 0671 7C02     		.2byte	0x27c
 2517 0673 C1000000 		.4byte	0xc1
 2518 0677 0C       		.byte	0xc
 2519 0678 10       		.uleb128 0x10
 2520 0679 DB080000 		.4byte	.LASF82
 2521 067d 04       		.byte	0x4
 2522 067e 8202     		.2byte	0x282
 2523 0680 43070000 		.4byte	0x743
 2524 0684 10       		.byte	0x10
 2525 0685 10       		.uleb128 0x10
 2526 0686 A7020000 		.4byte	.LASF83
 2527 068a 04       		.byte	0x4
 2528 068b 8802     		.2byte	0x288
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 99


 2529 068d 43070000 		.4byte	0x743
 2530 0691 14       		.byte	0x14
 2531 0692 10       		.uleb128 0x10
 2532 0693 77090000 		.4byte	.LASF84
 2533 0697 04       		.byte	0x4
 2534 0698 8F02     		.2byte	0x28f
 2535 069a 43070000 		.4byte	0x743
 2536 069e 18       		.byte	0x18
 2537 069f 10       		.uleb128 0x10
 2538 06a0 3E080000 		.4byte	.LASF85
 2539 06a4 04       		.byte	0x4
 2540 06a5 9F02     		.2byte	0x29f
 2541 06a7 53070000 		.4byte	0x753
 2542 06ab 1C       		.byte	0x1c
 2543 06ac 10       		.uleb128 0x10
 2544 06ad 21070000 		.4byte	.LASF86
 2545 06b1 04       		.byte	0x4
 2546 06b2 A502     		.2byte	0x2a5
 2547 06b4 77000000 		.4byte	0x77
 2548 06b8 2A       		.byte	0x2a
 2549 06b9 10       		.uleb128 0x10
 2550 06ba 46040000 		.4byte	.LASF87
 2551 06be 04       		.byte	0x4
 2552 06bf AA02     		.2byte	0x2aa
 2553 06c1 6B000000 		.4byte	0x6b
 2554 06c5 2C       		.byte	0x2c
 2555 06c6 10       		.uleb128 0x10
 2556 06c7 890C0000 		.4byte	.LASF88
 2557 06cb 04       		.byte	0x4
 2558 06cc AF02     		.2byte	0x2af
 2559 06ce 77000000 		.4byte	0x77
 2560 06d2 2E       		.byte	0x2e
 2561 06d3 10       		.uleb128 0x10
 2562 06d4 95060000 		.4byte	.LASF89
 2563 06d8 04       		.byte	0x4
 2564 06d9 B402     		.2byte	0x2b4
 2565 06db 26030000 		.4byte	0x326
 2566 06df 30       		.byte	0x30
 2567 06e0 14       		.uleb128 0x14
 2568 06e1 A7030000 		.4byte	.LASF90
 2569 06e5 04       		.byte	0x4
 2570 06e6 B902     		.2byte	0x2b9
 2571 06e8 86040000 		.4byte	0x486
 2572 06ec 0001     		.2byte	0x100
 2573 06ee 14       		.uleb128 0x14
 2574 06ef AB070000 		.4byte	.LASF91
 2575 06f3 04       		.byte	0x4
 2576 06f4 BE02     		.2byte	0x2be
 2577 06f6 55050000 		.4byte	0x555
 2578 06fa 9C01     		.2byte	0x19c
 2579 06fc 14       		.uleb128 0x14
 2580 06fd 8F040000 		.4byte	.LASF92
 2581 0701 04       		.byte	0x4
 2582 0702 C302     		.2byte	0x2c3
 2583 0704 14060000 		.4byte	0x614
 2584 0708 B401     		.2byte	0x1b4
 2585 070a 14       		.uleb128 0x14
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 100


 2586 070b 23010000 		.4byte	.LASF93
 2587 070f 04       		.byte	0x4
 2588 0710 C802     		.2byte	0x2c8
 2589 0712 6B000000 		.4byte	0x6b
 2590 0716 C101     		.2byte	0x1c1
 2591 0718 14       		.uleb128 0x14
 2592 0719 F4030000 		.4byte	.LASF94
 2593 071d 04       		.byte	0x4
 2594 071e CD02     		.2byte	0x2cd
 2595 0720 6B000000 		.4byte	0x6b
 2596 0724 C201     		.2byte	0x1c2
 2597 0726 14       		.uleb128 0x14
 2598 0727 17080000 		.4byte	.LASF95
 2599 072b 04       		.byte	0x4
 2600 072c D202     		.2byte	0x2d2
 2601 072e 77000000 		.4byte	0x77
 2602 0732 C401     		.2byte	0x1c4
 2603 0734 14       		.uleb128 0x14
 2604 0735 FB060000 		.4byte	.LASF96
 2605 0739 04       		.byte	0x4
 2606 073a D702     		.2byte	0x2d7
 2607 073c 97030000 		.4byte	0x397
 2608 0740 C601     		.2byte	0x1c6
 2609 0742 00       		.byte	0
 2610 0743 0E       		.uleb128 0xe
 2611 0744 83000000 		.4byte	0x83
 2612 0748 53070000 		.4byte	0x753
 2613 074c 0F       		.uleb128 0xf
 2614 074d C4010000 		.4byte	0x1c4
 2615 0751 00       		.byte	0
 2616 0752 00       		.byte	0
 2617 0753 0E       		.uleb128 0xe
 2618 0754 6B000000 		.4byte	0x6b
 2619 0758 63070000 		.4byte	0x763
 2620 075c 0F       		.uleb128 0xf
 2621 075d C4010000 		.4byte	0x1c4
 2622 0761 0C       		.byte	0xc
 2623 0762 00       		.byte	0
 2624 0763 04       		.uleb128 0x4
 2625 0764 A4080000 		.4byte	.LASF97
 2626 0768 04       		.byte	0x4
 2627 0769 D802     		.2byte	0x2d8
 2628 076b 20060000 		.4byte	0x620
 2629 076f 11       		.uleb128 0x11
 2630 0770 20       		.byte	0x20
 2631 0771 04       		.byte	0x4
 2632 0772 DE02     		.2byte	0x2de
 2633 0774 FB070000 		.4byte	0x7fb
 2634 0778 10       		.uleb128 0x10
 2635 0779 55070000 		.4byte	.LASF98
 2636 077d 04       		.byte	0x4
 2637 077e E302     		.2byte	0x2e3
 2638 0780 FB070000 		.4byte	0x7fb
 2639 0784 00       		.byte	0
 2640 0785 10       		.uleb128 0x10
 2641 0786 45060000 		.4byte	.LASF99
 2642 078a 04       		.byte	0x4
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 101


 2643 078b E802     		.2byte	0x2e8
 2644 078d FB070000 		.4byte	0x7fb
 2645 0791 04       		.byte	0x4
 2646 0792 10       		.uleb128 0x10
 2647 0793 8C010000 		.4byte	.LASF100
 2648 0797 04       		.byte	0x4
 2649 0798 ED02     		.2byte	0x2ed
 2650 079a FB070000 		.4byte	0x7fb
 2651 079e 08       		.byte	0x8
 2652 079f 10       		.uleb128 0x10
 2653 07a0 82040000 		.4byte	.LASF101
 2654 07a4 04       		.byte	0x4
 2655 07a5 F202     		.2byte	0x2f2
 2656 07a7 FB070000 		.4byte	0x7fb
 2657 07ab 0C       		.byte	0xc
 2658 07ac 10       		.uleb128 0x10
 2659 07ad 10090000 		.4byte	.LASF102
 2660 07b1 04       		.byte	0x4
 2661 07b2 F702     		.2byte	0x2f7
 2662 07b4 FB070000 		.4byte	0x7fb
 2663 07b8 10       		.byte	0x10
 2664 07b9 10       		.uleb128 0x10
 2665 07ba 9B0B0000 		.4byte	.LASF103
 2666 07be 04       		.byte	0x4
 2667 07bf FC02     		.2byte	0x2fc
 2668 07c1 83000000 		.4byte	0x83
 2669 07c5 14       		.byte	0x14
 2670 07c6 10       		.uleb128 0x10
 2671 07c7 8A070000 		.4byte	.LASF104
 2672 07cb 04       		.byte	0x4
 2673 07cc 0103     		.2byte	0x301
 2674 07ce 83000000 		.4byte	0x83
 2675 07d2 18       		.byte	0x18
 2676 07d3 10       		.uleb128 0x10
 2677 07d4 34020000 		.4byte	.LASF105
 2678 07d8 04       		.byte	0x4
 2679 07d9 0603     		.2byte	0x306
 2680 07db 6B000000 		.4byte	0x6b
 2681 07df 1C       		.byte	0x1c
 2682 07e0 10       		.uleb128 0x10
 2683 07e1 400A0000 		.4byte	.LASF106
 2684 07e5 04       		.byte	0x4
 2685 07e6 0B03     		.2byte	0x30b
 2686 07e8 6B000000 		.4byte	0x6b
 2687 07ec 1D       		.byte	0x1d
 2688 07ed 10       		.uleb128 0x10
 2689 07ee D2020000 		.4byte	.LASF107
 2690 07f2 04       		.byte	0x4
 2691 07f3 1003     		.2byte	0x310
 2692 07f5 6B000000 		.4byte	0x6b
 2693 07f9 1E       		.byte	0x1e
 2694 07fa 00       		.byte	0
 2695 07fb 06       		.uleb128 0x6
 2696 07fc 04       		.byte	0x4
 2697 07fd B5000000 		.4byte	0xb5
 2698 0801 04       		.uleb128 0x4
 2699 0802 DB030000 		.4byte	.LASF108
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 102


 2700 0806 04       		.byte	0x4
 2701 0807 1103     		.2byte	0x311
 2702 0809 6F070000 		.4byte	0x76f
 2703 080d 11       		.uleb128 0x11
 2704 080e 20       		.byte	0x20
 2705 080f 04       		.byte	0x4
 2706 0810 4403     		.2byte	0x344
 2707 0812 99080000 		.4byte	0x899
 2708 0816 10       		.uleb128 0x10
 2709 0817 650C0000 		.4byte	.LASF109
 2710 081b 04       		.byte	0x4
 2711 081c 4D03     		.2byte	0x34d
 2712 081e 99080000 		.4byte	0x899
 2713 0822 00       		.byte	0
 2714 0823 10       		.uleb128 0x10
 2715 0824 100B0000 		.4byte	.LASF110
 2716 0828 04       		.byte	0x4
 2717 0829 5403     		.2byte	0x354
 2718 082b A0080000 		.4byte	0x8a0
 2719 082f 04       		.byte	0x4
 2720 0830 10       		.uleb128 0x10
 2721 0831 33080000 		.4byte	.LASF111
 2722 0835 04       		.byte	0x4
 2723 0836 5A03     		.2byte	0x35a
 2724 0838 A2080000 		.4byte	0x8a2
 2725 083c 08       		.byte	0x8
 2726 083d 10       		.uleb128 0x10
 2727 083e 65070000 		.4byte	.LASF112
 2728 0842 04       		.byte	0x4
 2729 0843 6003     		.2byte	0x360
 2730 0845 A0080000 		.4byte	0x8a0
 2731 0849 0C       		.byte	0xc
 2732 084a 10       		.uleb128 0x10
 2733 084b 920A0000 		.4byte	.LASF113
 2734 084f 04       		.byte	0x4
 2735 0850 6703     		.2byte	0x367
 2736 0852 A8080000 		.4byte	0x8a8
 2737 0856 10       		.byte	0x10
 2738 0857 10       		.uleb128 0x10
 2739 0858 FD0A0000 		.4byte	.LASF114
 2740 085c 04       		.byte	0x4
 2741 085d 6C03     		.2byte	0x36c
 2742 085f 83000000 		.4byte	0x83
 2743 0863 14       		.byte	0x14
 2744 0864 10       		.uleb128 0x10
 2745 0865 D3040000 		.4byte	.LASF115
 2746 0869 04       		.byte	0x4
 2747 086a 7303     		.2byte	0x373
 2748 086c 77000000 		.4byte	0x77
 2749 0870 18       		.byte	0x18
 2750 0871 10       		.uleb128 0x10
 2751 0872 04040000 		.4byte	.LASF116
 2752 0876 04       		.byte	0x4
 2753 0877 7A03     		.2byte	0x37a
 2754 0879 6B000000 		.4byte	0x6b
 2755 087d 1A       		.byte	0x1a
 2756 087e 10       		.uleb128 0x10
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 103


 2757 087f 59060000 		.4byte	.LASF117
 2758 0883 04       		.byte	0x4
 2759 0884 8403     		.2byte	0x384
 2760 0886 6B000000 		.4byte	0x6b
 2761 088a 1B       		.byte	0x1b
 2762 088b 10       		.uleb128 0x10
 2763 088c DF060000 		.4byte	.LASF118
 2764 0890 04       		.byte	0x4
 2765 0891 8903     		.2byte	0x389
 2766 0893 A8080000 		.4byte	0x8a8
 2767 0897 1C       		.byte	0x1c
 2768 0898 00       		.byte	0
 2769 0899 06       		.uleb128 0x6
 2770 089a 04       		.byte	0x4
 2771 089b 9F080000 		.4byte	0x89f
 2772 089f 15       		.uleb128 0x15
 2773 08a0 16       		.uleb128 0x16
 2774 08a1 04       		.byte	0x4
 2775 08a2 06       		.uleb128 0x6
 2776 08a3 04       		.byte	0x4
 2777 08a4 B7030000 		.4byte	0x3b7
 2778 08a8 06       		.uleb128 0x6
 2779 08a9 04       		.byte	0x4
 2780 08aa 6B000000 		.4byte	0x6b
 2781 08ae 04       		.uleb128 0x4
 2782 08af A0040000 		.4byte	.LASF119
 2783 08b3 04       		.byte	0x4
 2784 08b4 8A03     		.2byte	0x38a
 2785 08b6 0D080000 		.4byte	0x80d
 2786 08ba 13       		.uleb128 0x13
 2787 08bb A001     		.2byte	0x1a0
 2788 08bd 04       		.byte	0x4
 2789 08be 9003     		.2byte	0x390
 2790 08c0 D2080000 		.4byte	0x8d2
 2791 08c4 10       		.uleb128 0x10
 2792 08c5 5B0D0000 		.4byte	.LASF120
 2793 08c9 04       		.byte	0x4
 2794 08ca 9503     		.2byte	0x395
 2795 08cc D2080000 		.4byte	0x8d2
 2796 08d0 00       		.byte	0
 2797 08d1 00       		.byte	0
 2798 08d2 0E       		.uleb128 0xe
 2799 08d3 AE080000 		.4byte	0x8ae
 2800 08d7 E2080000 		.4byte	0x8e2
 2801 08db 0F       		.uleb128 0xf
 2802 08dc C4010000 		.4byte	0x1c4
 2803 08e0 0C       		.byte	0xc
 2804 08e1 00       		.byte	0
 2805 08e2 04       		.uleb128 0x4
 2806 08e3 BB060000 		.4byte	.LASF121
 2807 08e7 04       		.byte	0x4
 2808 08e8 9603     		.2byte	0x396
 2809 08ea BA080000 		.4byte	0x8ba
 2810 08ee 02       		.uleb128 0x2
 2811 08ef 08       		.byte	0x8
 2812 08f0 04       		.byte	0x4
 2813 08f1 05080000 		.4byte	.LASF122
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 104


 2814 08f5 17       		.uleb128 0x17
 2815 08f6 BE070000 		.4byte	.LASF125
 2816 08fa 01       		.byte	0x1
 2817 08fb 6009     		.2byte	0x960
 2818 08fd 6B000000 		.4byte	0x6b
 2819 0901 00000000 		.4byte	.LFB19
 2820 0905 84000000 		.4byte	.LFE19-.LFB19
 2821 0909 01       		.uleb128 0x1
 2822 090a 9C       		.byte	0x9c
 2823 090b 40090000 		.4byte	0x940
 2824 090f 18       		.uleb128 0x18
 2825 0910 C10C0000 		.4byte	.LASF123
 2826 0914 01       		.byte	0x1
 2827 0915 6009     		.2byte	0x960
 2828 0917 83000000 		.4byte	0x83
 2829 091b 00000000 		.4byte	.LLST0
 2830 091f 18       		.uleb128 0x18
 2831 0920 70050000 		.4byte	.LASF124
 2832 0924 01       		.byte	0x1
 2833 0925 6009     		.2byte	0x960
 2834 0927 83000000 		.4byte	0x83
 2835 092b 2C000000 		.4byte	.LLST1
 2836 092f 19       		.uleb128 0x19
 2837 0930 0D040000 		.4byte	.LASF127
 2838 0934 01       		.byte	0x1
 2839 0935 6209     		.2byte	0x962
 2840 0937 6B000000 		.4byte	0x6b
 2841 093b 58000000 		.4byte	.LLST2
 2842 093f 00       		.byte	0
 2843 0940 17       		.uleb128 0x17
 2844 0941 B3020000 		.4byte	.LASF126
 2845 0945 01       		.byte	0x1
 2846 0946 AC09     		.2byte	0x9ac
 2847 0948 6B000000 		.4byte	0x6b
 2848 094c 00000000 		.4byte	.LFB20
 2849 0950 42000000 		.4byte	.LFE20-.LFB20
 2850 0954 01       		.uleb128 0x1
 2851 0955 9C       		.byte	0x9c
 2852 0956 AB090000 		.4byte	0x9ab
 2853 095a 18       		.uleb128 0x18
 2854 095b C10C0000 		.4byte	.LASF123
 2855 095f 01       		.byte	0x1
 2856 0960 AC09     		.2byte	0x9ac
 2857 0962 83000000 		.4byte	0x83
 2858 0966 77000000 		.4byte	.LLST3
 2859 096a 18       		.uleb128 0x18
 2860 096b 0D040000 		.4byte	.LASF127
 2861 096f 01       		.byte	0x1
 2862 0970 AC09     		.2byte	0x9ac
 2863 0972 6B000000 		.4byte	0x6b
 2864 0976 BC000000 		.4byte	.LLST4
 2865 097a 19       		.uleb128 0x19
 2866 097b 93010000 		.4byte	.LASF128
 2867 097f 01       		.byte	0x1
 2868 0980 AE09     		.2byte	0x9ae
 2869 0982 83000000 		.4byte	0x83
 2870 0986 F6000000 		.4byte	.LLST5
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 105


 2871 098a 19       		.uleb128 0x19
 2872 098b D9010000 		.4byte	.LASF129
 2873 098f 01       		.byte	0x1
 2874 0990 AF09     		.2byte	0x9af
 2875 0992 83000000 		.4byte	0x83
 2876 0996 20010000 		.4byte	.LLST6
 2877 099a 19       		.uleb128 0x19
 2878 099b 720C0000 		.4byte	.LASF130
 2879 099f 01       		.byte	0x1
 2880 09a0 B009     		.2byte	0x9b0
 2881 09a2 83000000 		.4byte	0x83
 2882 09a6 49010000 		.4byte	.LLST7
 2883 09aa 00       		.byte	0
 2884 09ab 1A       		.uleb128 0x1a
 2885 09ac 3B000000 		.4byte	.LASF173
 2886 09b0 01       		.byte	0x1
 2887 09b1 FA02     		.2byte	0x2fa
 2888 09b3 00000000 		.4byte	.LFB7
 2889 09b7 38000000 		.4byte	.LFE7-.LFB7
 2890 09bb 01       		.uleb128 0x1
 2891 09bc 9C       		.byte	0x9c
 2892 09bd E4090000 		.4byte	0x9e4
 2893 09c1 19       		.uleb128 0x19
 2894 09c2 7D0C0000 		.4byte	.LASF131
 2895 09c6 01       		.byte	0x1
 2896 09c7 FC02     		.2byte	0x2fc
 2897 09c9 83000000 		.4byte	0x83
 2898 09cd 5C010000 		.4byte	.LLST8
 2899 09d1 1B       		.uleb128 0x1b
 2900 09d2 1A000000 		.4byte	.LVL29
 2901 09d6 38120000 		.4byte	0x1238
 2902 09da 1B       		.uleb128 0x1b
 2903 09db 26000000 		.4byte	.LVL32
 2904 09df 44120000 		.4byte	0x1244
 2905 09e3 00       		.byte	0
 2906 09e4 1C       		.uleb128 0x1c
 2907 09e5 E8010000 		.4byte	.LASF208
 2908 09e9 01       		.byte	0x1
 2909 09ea E9       		.byte	0xe9
 2910 09eb 83000000 		.4byte	0x83
 2911 09ef 00000000 		.4byte	.LFB1
 2912 09f3 10000000 		.4byte	.LFE1-.LFB1
 2913 09f7 01       		.uleb128 0x1
 2914 09f8 9C       		.byte	0x9c
 2915 09f9 1D       		.uleb128 0x1d
 2916 09fa 16090000 		.4byte	.LASF134
 2917 09fe 01       		.byte	0x1
 2918 09ff 1D01     		.2byte	0x11d
 2919 0a01 A4000000 		.4byte	0xa4
 2920 0a05 00000000 		.4byte	.LFB2
 2921 0a09 4C000000 		.4byte	.LFE2-.LFB2
 2922 0a0d 01       		.uleb128 0x1
 2923 0a0e 9C       		.byte	0x9c
 2924 0a0f 3D0A0000 		.4byte	0xa3d
 2925 0a13 18       		.uleb128 0x18
 2926 0a14 F30C0000 		.4byte	.LASF132
 2927 0a18 01       		.byte	0x1
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 106


 2928 0a19 1D01     		.2byte	0x11d
 2929 0a1b 83000000 		.4byte	0x83
 2930 0a1f 90010000 		.4byte	.LLST9
 2931 0a23 19       		.uleb128 0x19
 2932 0a24 E60C0000 		.4byte	.LASF133
 2933 0a28 01       		.byte	0x1
 2934 0a29 1F01     		.2byte	0x11f
 2935 0a2b A4000000 		.4byte	0xa4
 2936 0a2f B1010000 		.4byte	.LLST10
 2937 0a33 1B       		.uleb128 0x1b
 2938 0a34 42000000 		.4byte	.LVL35
 2939 0a38 50120000 		.4byte	0x1250
 2940 0a3c 00       		.byte	0
 2941 0a3d 1D       		.uleb128 0x1d
 2942 0a3e D1060000 		.4byte	.LASF135
 2943 0a42 01       		.byte	0x1
 2944 0a43 7001     		.2byte	0x170
 2945 0a45 A4000000 		.4byte	0xa4
 2946 0a49 00000000 		.4byte	.LFB3
 2947 0a4d 2C000000 		.4byte	.LFE3-.LFB3
 2948 0a51 01       		.uleb128 0x1
 2949 0a52 9C       		.byte	0x9c
 2950 0a53 710A0000 		.4byte	0xa71
 2951 0a57 19       		.uleb128 0x19
 2952 0a58 30000000 		.4byte	.LASF136
 2953 0a5c 01       		.byte	0x1
 2954 0a5d 7201     		.2byte	0x172
 2955 0a5f A4000000 		.4byte	0xa4
 2956 0a63 CF010000 		.4byte	.LLST11
 2957 0a67 1B       		.uleb128 0x1b
 2958 0a68 16000000 		.4byte	.LVL38
 2959 0a6c 5C120000 		.4byte	0x125c
 2960 0a70 00       		.byte	0
 2961 0a71 1D       		.uleb128 0x1d
 2962 0a72 830B0000 		.4byte	.LASF137
 2963 0a76 01       		.byte	0x1
 2964 0a77 AE01     		.2byte	0x1ae
 2965 0a79 A4000000 		.4byte	0xa4
 2966 0a7d 00000000 		.4byte	.LFB4
 2967 0a81 48000000 		.4byte	.LFE4-.LFB4
 2968 0a85 01       		.uleb128 0x1
 2969 0a86 9C       		.byte	0x9c
 2970 0a87 C90A0000 		.4byte	0xac9
 2971 0a8b 19       		.uleb128 0x19
 2972 0a8c 30000000 		.4byte	.LASF136
 2973 0a90 01       		.byte	0x1
 2974 0a91 B001     		.2byte	0x1b0
 2975 0a93 A4000000 		.4byte	0xa4
 2976 0a97 EE010000 		.4byte	.LLST12
 2977 0a9b 19       		.uleb128 0x19
 2978 0a9c D6070000 		.4byte	.LASF138
 2979 0aa0 01       		.byte	0x1
 2980 0aa1 B201     		.2byte	0x1b2
 2981 0aa3 83000000 		.4byte	0x83
 2982 0aa7 3C020000 		.4byte	.LLST13
 2983 0aab 1E       		.uleb128 0x1e
 2984 0aac 18000000 		.4byte	.LVL43
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 107


 2985 0ab0 F9090000 		.4byte	0x9f9
 2986 0ab4 BF0A0000 		.4byte	0xabf
 2987 0ab8 1F       		.uleb128 0x1f
 2988 0ab9 01       		.uleb128 0x1
 2989 0aba 50       		.byte	0x50
 2990 0abb 02       		.uleb128 0x2
 2991 0abc 74       		.byte	0x74
 2992 0abd 00       		.sleb128 0
 2993 0abe 00       		.byte	0
 2994 0abf 1B       		.uleb128 0x1b
 2995 0ac0 32000000 		.4byte	.LVL44
 2996 0ac4 3D0A0000 		.4byte	0xa3d
 2997 0ac8 00       		.byte	0
 2998 0ac9 20       		.uleb128 0x20
 2999 0aca E80A0000 		.4byte	.LASF145
 3000 0ace 01       		.byte	0x1
 3001 0acf 8902     		.2byte	0x289
 3002 0ad1 00000000 		.4byte	.LFB6
 3003 0ad5 B4000000 		.4byte	.LFE6-.LFB6
 3004 0ad9 01       		.uleb128 0x1
 3005 0ada 9C       		.byte	0x9c
 3006 0adb A90B0000 		.4byte	0xba9
 3007 0adf 18       		.uleb128 0x18
 3008 0ae0 F30C0000 		.4byte	.LASF132
 3009 0ae4 01       		.byte	0x1
 3010 0ae5 8902     		.2byte	0x289
 3011 0ae7 83000000 		.4byte	0x83
 3012 0aeb 4F020000 		.4byte	.LLST14
 3013 0aef 18       		.uleb128 0x18
 3014 0af0 22000000 		.4byte	.LASF139
 3015 0af4 01       		.byte	0x1
 3016 0af5 8902     		.2byte	0x289
 3017 0af7 83000000 		.4byte	0x83
 3018 0afb 70020000 		.4byte	.LLST15
 3019 0aff 18       		.uleb128 0x18
 3020 0b00 6B0B0000 		.4byte	.LASF140
 3021 0b04 01       		.byte	0x1
 3022 0b05 8902     		.2byte	0x289
 3023 0b07 83000000 		.4byte	0x83
 3024 0b0b 91020000 		.4byte	.LLST16
 3025 0b0f 21       		.uleb128 0x21
 3026 0b10 5B020000 		.4byte	.LASF141
 3027 0b14 01       		.byte	0x1
 3028 0b15 8B02     		.2byte	0x28b
 3029 0b17 83000000 		.4byte	0x83
 3030 0b1b 01       		.byte	0x1
 3031 0b1c 19       		.uleb128 0x19
 3032 0b1d 790B0000 		.4byte	.LASF142
 3033 0b21 01       		.byte	0x1
 3034 0b22 8C02     		.2byte	0x28c
 3035 0b24 83000000 		.4byte	0x83
 3036 0b28 BD020000 		.4byte	.LLST17
 3037 0b2c 19       		.uleb128 0x19
 3038 0b2d 7D010000 		.4byte	.LASF143
 3039 0b31 01       		.byte	0x1
 3040 0b32 8D02     		.2byte	0x28d
 3041 0b34 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 108


 3042 0b38 DC020000 		.4byte	.LLST18
 3043 0b3c 19       		.uleb128 0x19
 3044 0b3d 0A0B0000 		.4byte	.LASF144
 3045 0b41 01       		.byte	0x1
 3046 0b42 8E02     		.2byte	0x28e
 3047 0b44 A90B0000 		.4byte	0xba9
 3048 0b48 10030000 		.4byte	.LLST19
 3049 0b4c 1B       		.uleb128 0x1b
 3050 0b4d 16000000 		.4byte	.LVL53
 3051 0b51 68120000 		.4byte	0x1268
 3052 0b55 1B       		.uleb128 0x1b
 3053 0b56 36000000 		.4byte	.LVL54
 3054 0b5a 73120000 		.4byte	0x1273
 3055 0b5e 1B       		.uleb128 0x1b
 3056 0b5f 4C000000 		.4byte	.LVL55
 3057 0b63 68120000 		.4byte	0x1268
 3058 0b67 1B       		.uleb128 0x1b
 3059 0b68 6C000000 		.4byte	.LVL56
 3060 0b6c 73120000 		.4byte	0x1273
 3061 0b70 1B       		.uleb128 0x1b
 3062 0b71 72000000 		.4byte	.LVL57
 3063 0b75 68120000 		.4byte	0x1268
 3064 0b79 1B       		.uleb128 0x1b
 3065 0b7a 84000000 		.4byte	.LVL58
 3066 0b7e 73120000 		.4byte	0x1273
 3067 0b82 1E       		.uleb128 0x1e
 3068 0b83 8C000000 		.4byte	.LVL59
 3069 0b87 7E120000 		.4byte	0x127e
 3070 0b8b 960B0000 		.4byte	0xb96
 3071 0b8f 1F       		.uleb128 0x1f
 3072 0b90 01       		.uleb128 0x1
 3073 0b91 50       		.byte	0x50
 3074 0b92 02       		.uleb128 0x2
 3075 0b93 74       		.byte	0x74
 3076 0b94 00       		.sleb128 0
 3077 0b95 00       		.byte	0
 3078 0b96 1B       		.uleb128 0x1b
 3079 0b97 92000000 		.4byte	.LVL60
 3080 0b9b 68120000 		.4byte	0x1268
 3081 0b9f 1B       		.uleb128 0x1b
 3082 0ba0 A4000000 		.4byte	.LVL61
 3083 0ba4 73120000 		.4byte	0x1273
 3084 0ba8 00       		.byte	0
 3085 0ba9 06       		.uleb128 0x6
 3086 0baa 04       		.byte	0x4
 3087 0bab AF0B0000 		.4byte	0xbaf
 3088 0baf 22       		.uleb128 0x22
 3089 0bb0 01080000 		.4byte	0x801
 3090 0bb4 20       		.uleb128 0x20
 3091 0bb5 B80B0000 		.4byte	.LASF146
 3092 0bb9 01       		.byte	0x1
 3093 0bba 8503     		.2byte	0x385
 3094 0bbc 00000000 		.4byte	.LFB8
 3095 0bc0 5C000000 		.4byte	.LFE8-.LFB8
 3096 0bc4 01       		.uleb128 0x1
 3097 0bc5 9C       		.byte	0x9c
 3098 0bc6 FF0B0000 		.4byte	0xbff
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 109


 3099 0bca 18       		.uleb128 0x18
 3100 0bcb E3010000 		.4byte	.LASF147
 3101 0bcf 01       		.byte	0x1
 3102 0bd0 8503     		.2byte	0x385
 3103 0bd2 1C010000 		.4byte	0x11c
 3104 0bd6 23030000 		.4byte	.LLST20
 3105 0bda 1B       		.uleb128 0x1b
 3106 0bdb 14000000 		.4byte	.LVL68
 3107 0bdf AB090000 		.4byte	0x9ab
 3108 0be3 1B       		.uleb128 0x1b
 3109 0be4 26000000 		.4byte	.LVL70
 3110 0be8 8A120000 		.4byte	0x128a
 3111 0bec 1B       		.uleb128 0x1b
 3112 0bed 2E000000 		.4byte	.LVL71
 3113 0bf1 95120000 		.4byte	0x1295
 3114 0bf5 1B       		.uleb128 0x1b
 3115 0bf6 46000000 		.4byte	.LVL72
 3116 0bfa A1120000 		.4byte	0x12a1
 3117 0bfe 00       		.byte	0
 3118 0bff 20       		.uleb128 0x20
 3119 0c00 55000000 		.4byte	.LASF148
 3120 0c04 01       		.byte	0x1
 3121 0c05 E803     		.2byte	0x3e8
 3122 0c07 00000000 		.4byte	.LFB9
 3123 0c0b 40000000 		.4byte	.LFE9-.LFB9
 3124 0c0f 01       		.uleb128 0x1
 3125 0c10 9C       		.byte	0x9c
 3126 0c11 460C0000 		.4byte	0xc46
 3127 0c15 19       		.uleb128 0x19
 3128 0c16 0A0B0000 		.4byte	.LASF144
 3129 0c1a 01       		.byte	0x1
 3130 0c1b EA03     		.2byte	0x3ea
 3131 0c1d A90B0000 		.4byte	0xba9
 3132 0c21 5D030000 		.4byte	.LLST21
 3133 0c25 19       		.uleb128 0x19
 3134 0c26 9D020000 		.4byte	.LASF149
 3135 0c2a 01       		.byte	0x1
 3136 0c2b EB03     		.2byte	0x3eb
 3137 0c2d 83000000 		.4byte	0x83
 3138 0c31 70030000 		.4byte	.LLST22
 3139 0c35 19       		.uleb128 0x19
 3140 0c36 74010000 		.4byte	.LASF150
 3141 0c3a 01       		.byte	0x1
 3142 0c3b EC03     		.2byte	0x3ec
 3143 0c3d 83000000 		.4byte	0x83
 3144 0c41 8F030000 		.4byte	.LLST23
 3145 0c45 00       		.byte	0
 3146 0c46 20       		.uleb128 0x20
 3147 0c47 470C0000 		.4byte	.LASF151
 3148 0c4b 01       		.byte	0x1
 3149 0c4c 6204     		.2byte	0x462
 3150 0c4e 00000000 		.4byte	.LFB10
 3151 0c52 78000000 		.4byte	.LFE10-.LFB10
 3152 0c56 01       		.uleb128 0x1
 3153 0c57 9C       		.byte	0x9c
 3154 0c58 7F0C0000 		.4byte	0xc7f
 3155 0c5c 19       		.uleb128 0x19
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 110


 3156 0c5d 48080000 		.4byte	.LASF152
 3157 0c61 01       		.byte	0x1
 3158 0c62 6A04     		.2byte	0x46a
 3159 0c64 A4000000 		.4byte	0xa4
 3160 0c68 B8030000 		.4byte	.LLST24
 3161 0c6c 1B       		.uleb128 0x1b
 3162 0c6d 14000000 		.4byte	.LVL85
 3163 0c71 F9090000 		.4byte	0x9f9
 3164 0c75 1B       		.uleb128 0x1b
 3165 0c76 2A000000 		.4byte	.LVL87
 3166 0c7a 3D0A0000 		.4byte	0xa3d
 3167 0c7e 00       		.byte	0
 3168 0c7f 20       		.uleb128 0x20
 3169 0c80 81080000 		.4byte	.LASF153
 3170 0c84 01       		.byte	0x1
 3171 0c85 AF04     		.2byte	0x4af
 3172 0c87 00000000 		.4byte	.LFB11
 3173 0c8b 08000000 		.4byte	.LFE11-.LFB11
 3174 0c8f 01       		.uleb128 0x1
 3175 0c90 9C       		.byte	0x9c
 3176 0c91 B70C0000 		.4byte	0xcb7
 3177 0c95 18       		.uleb128 0x18
 3178 0c96 610A0000 		.4byte	.LASF154
 3179 0c9a 01       		.byte	0x1
 3180 0c9b AF04     		.2byte	0x4af
 3181 0c9d C6000000 		.4byte	0xc6
 3182 0ca1 03040000 		.4byte	.LLST25
 3183 0ca5 23       		.uleb128 0x23
 3184 0ca6 06000000 		.4byte	.LVL94
 3185 0caa AC120000 		.4byte	0x12ac
 3186 0cae 1F       		.uleb128 0x1f
 3187 0caf 01       		.uleb128 0x1
 3188 0cb0 50       		.byte	0x50
 3189 0cb1 03       		.uleb128 0x3
 3190 0cb2 F3       		.byte	0xf3
 3191 0cb3 01       		.uleb128 0x1
 3192 0cb4 50       		.byte	0x50
 3193 0cb5 00       		.byte	0
 3194 0cb6 00       		.byte	0
 3195 0cb7 20       		.uleb128 0x20
 3196 0cb8 13020000 		.4byte	.LASF155
 3197 0cbc 01       		.byte	0x1
 3198 0cbd C604     		.2byte	0x4c6
 3199 0cbf 00000000 		.4byte	.LFB12
 3200 0cc3 30000000 		.4byte	.LFE12-.LFB12
 3201 0cc7 01       		.uleb128 0x1
 3202 0cc8 9C       		.byte	0x9c
 3203 0cc9 DE0C0000 		.4byte	0xcde
 3204 0ccd 18       		.uleb128 0x18
 3205 0cce 88040000 		.4byte	.LASF156
 3206 0cd2 01       		.byte	0x1
 3207 0cd3 C604     		.2byte	0x4c6
 3208 0cd5 83000000 		.4byte	0x83
 3209 0cd9 24040000 		.4byte	.LLST26
 3210 0cdd 00       		.byte	0
 3211 0cde 20       		.uleb128 0x20
 3212 0cdf F8050000 		.4byte	.LASF157
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 111


 3213 0ce3 01       		.byte	0x1
 3214 0ce4 0A05     		.2byte	0x50a
 3215 0ce6 00000000 		.4byte	.LFB13
 3216 0cea 14000000 		.4byte	.LFE13-.LFB13
 3217 0cee 01       		.uleb128 0x1
 3218 0cef 9C       		.byte	0x9c
 3219 0cf0 150D0000 		.4byte	0xd15
 3220 0cf4 18       		.uleb128 0x18
 3221 0cf5 B10B0000 		.4byte	.LASF34
 3222 0cf9 01       		.byte	0x1
 3223 0cfa 0A05     		.2byte	0x50a
 3224 0cfc 83000000 		.4byte	0x83
 3225 0d00 52040000 		.4byte	.LLST27
 3226 0d04 19       		.uleb128 0x19
 3227 0d05 7D0C0000 		.4byte	.LASF131
 3228 0d09 01       		.byte	0x1
 3229 0d0a 0D05     		.2byte	0x50d
 3230 0d0c 83000000 		.4byte	0x83
 3231 0d10 80040000 		.4byte	.LLST28
 3232 0d14 00       		.byte	0
 3233 0d15 20       		.uleb128 0x20
 3234 0d16 8F070000 		.4byte	.LASF158
 3235 0d1a 01       		.byte	0x1
 3236 0d1b 5E05     		.2byte	0x55e
 3237 0d1d 00000000 		.4byte	.LFB14
 3238 0d21 12000000 		.4byte	.LFE14-.LFB14
 3239 0d25 01       		.uleb128 0x1
 3240 0d26 9C       		.byte	0x9c
 3241 0d27 710D0000 		.4byte	0xd71
 3242 0d2b 18       		.uleb128 0x18
 3243 0d2c B10B0000 		.4byte	.LASF34
 3244 0d30 01       		.byte	0x1
 3245 0d31 5E05     		.2byte	0x55e
 3246 0d33 83000000 		.4byte	0x83
 3247 0d37 A9040000 		.4byte	.LLST29
 3248 0d3b 18       		.uleb128 0x18
 3249 0d3c 88040000 		.4byte	.LASF156
 3250 0d40 01       		.byte	0x1
 3251 0d41 5E05     		.2byte	0x55e
 3252 0d43 83000000 		.4byte	0x83
 3253 0d47 D5040000 		.4byte	.LLST30
 3254 0d4b 1E       		.uleb128 0x1e
 3255 0d4c 0A000000 		.4byte	.LVL106
 3256 0d50 B70C0000 		.4byte	0xcb7
 3257 0d54 600D0000 		.4byte	0xd60
 3258 0d58 1F       		.uleb128 0x1f
 3259 0d59 01       		.uleb128 0x1
 3260 0d5a 50       		.byte	0x50
 3261 0d5b 03       		.uleb128 0x3
 3262 0d5c F3       		.byte	0xf3
 3263 0d5d 01       		.uleb128 0x1
 3264 0d5e 51       		.byte	0x51
 3265 0d5f 00       		.byte	0
 3266 0d60 23       		.uleb128 0x23
 3267 0d61 10000000 		.4byte	.LVL107
 3268 0d65 DE0C0000 		.4byte	0xcde
 3269 0d69 1F       		.uleb128 0x1f
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 112


 3270 0d6a 01       		.uleb128 0x1
 3271 0d6b 50       		.byte	0x50
 3272 0d6c 02       		.uleb128 0x2
 3273 0d6d 74       		.byte	0x74
 3274 0d6e 00       		.sleb128 0
 3275 0d6f 00       		.byte	0
 3276 0d70 00       		.byte	0
 3277 0d71 1D       		.uleb128 0x1d
 3278 0d72 C4050000 		.4byte	.LASF159
 3279 0d76 01       		.byte	0x1
 3280 0d77 9205     		.2byte	0x592
 3281 0d79 A4000000 		.4byte	0xa4
 3282 0d7d 00000000 		.4byte	.LFB15
 3283 0d81 44000000 		.4byte	.LFE15-.LFB15
 3284 0d85 01       		.uleb128 0x1
 3285 0d86 9C       		.byte	0x9c
 3286 0d87 D60D0000 		.4byte	0xdd6
 3287 0d8b 18       		.uleb128 0x18
 3288 0d8c F30C0000 		.4byte	.LASF132
 3289 0d90 01       		.byte	0x1
 3290 0d91 9205     		.2byte	0x592
 3291 0d93 83000000 		.4byte	0x83
 3292 0d97 F6040000 		.4byte	.LLST31
 3293 0d9b 19       		.uleb128 0x19
 3294 0d9c 85060000 		.4byte	.LASF160
 3295 0da0 01       		.byte	0x1
 3296 0da1 9405     		.2byte	0x594
 3297 0da3 A4000000 		.4byte	0xa4
 3298 0da7 22050000 		.4byte	.LLST32
 3299 0dab 1E       		.uleb128 0x1e
 3300 0dac 34000000 		.4byte	.LVL113
 3301 0db0 B7120000 		.4byte	0x12b7
 3302 0db4 C50D0000 		.4byte	0xdc5
 3303 0db8 1F       		.uleb128 0x1f
 3304 0db9 01       		.uleb128 0x1
 3305 0dba 50       		.byte	0x50
 3306 0dbb 02       		.uleb128 0x2
 3307 0dbc 74       		.byte	0x74
 3308 0dbd 00       		.sleb128 0
 3309 0dbe 1F       		.uleb128 0x1f
 3310 0dbf 01       		.uleb128 0x1
 3311 0dc0 51       		.byte	0x51
 3312 0dc1 02       		.uleb128 0x2
 3313 0dc2 08       		.byte	0x8
 3314 0dc3 46       		.byte	0x46
 3315 0dc4 00       		.byte	0
 3316 0dc5 23       		.uleb128 0x23
 3317 0dc6 3C000000 		.4byte	.LVL116
 3318 0dca C3120000 		.4byte	0x12c3
 3319 0dce 1F       		.uleb128 0x1f
 3320 0dcf 01       		.uleb128 0x1
 3321 0dd0 50       		.byte	0x50
 3322 0dd1 02       		.uleb128 0x2
 3323 0dd2 74       		.byte	0x74
 3324 0dd3 00       		.sleb128 0
 3325 0dd4 00       		.byte	0
 3326 0dd5 00       		.byte	0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 113


 3327 0dd6 1D       		.uleb128 0x1d
 3328 0dd7 9E060000 		.4byte	.LASF161
 3329 0ddb 01       		.byte	0x1
 3330 0ddc 0306     		.2byte	0x603
 3331 0dde A4000000 		.4byte	0xa4
 3332 0de2 00000000 		.4byte	.LFB16
 3333 0de6 1A000000 		.4byte	.LFE16-.LFB16
 3334 0dea 01       		.uleb128 0x1
 3335 0deb 9C       		.byte	0x9c
 3336 0dec 210E0000 		.4byte	0xe21
 3337 0df0 19       		.uleb128 0x19
 3338 0df1 85060000 		.4byte	.LASF160
 3339 0df5 01       		.byte	0x1
 3340 0df6 0506     		.2byte	0x605
 3341 0df8 A4000000 		.4byte	0xa4
 3342 0dfc 62050000 		.4byte	.LLST33
 3343 0e00 19       		.uleb128 0x19
 3344 0e01 D6070000 		.4byte	.LASF138
 3345 0e05 01       		.byte	0x1
 3346 0e06 0606     		.2byte	0x606
 3347 0e08 83000000 		.4byte	0x83
 3348 0e0c 8C050000 		.4byte	.LLST34
 3349 0e10 23       		.uleb128 0x23
 3350 0e11 0E000000 		.4byte	.LVL121
 3351 0e15 710D0000 		.4byte	0xd71
 3352 0e19 1F       		.uleb128 0x1f
 3353 0e1a 01       		.uleb128 0x1
 3354 0e1b 50       		.byte	0x50
 3355 0e1c 02       		.uleb128 0x2
 3356 0e1d 74       		.byte	0x74
 3357 0e1e 00       		.sleb128 0
 3358 0e1f 00       		.byte	0
 3359 0e20 00       		.byte	0
 3360 0e21 20       		.uleb128 0x20
 3361 0e22 D8020000 		.4byte	.LASF162
 3362 0e26 01       		.byte	0x1
 3363 0e27 060A     		.2byte	0xa06
 3364 0e29 00000000 		.4byte	.LFB21
 3365 0e2d 34000000 		.4byte	.LFE21-.LFB21
 3366 0e31 01       		.uleb128 0x1
 3367 0e32 9C       		.byte	0x9c
 3368 0e33 7D0E0000 		.4byte	0xe7d
 3369 0e37 19       		.uleb128 0x19
 3370 0e38 D6070000 		.4byte	.LASF138
 3371 0e3c 01       		.byte	0x1
 3372 0e3d 080A     		.2byte	0xa08
 3373 0e3f 83000000 		.4byte	0x83
 3374 0e43 AB050000 		.4byte	.LLST35
 3375 0e47 19       		.uleb128 0x19
 3376 0e48 E0070000 		.4byte	.LASF163
 3377 0e4c 01       		.byte	0x1
 3378 0e4d 090A     		.2byte	0xa09
 3379 0e4f 83000000 		.4byte	0x83
 3380 0e53 CA050000 		.4byte	.LLST36
 3381 0e57 19       		.uleb128 0x19
 3382 0e58 A50B0000 		.4byte	.LASF164
 3383 0e5c 01       		.byte	0x1
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 114


 3384 0e5d 150A     		.2byte	0xa15
 3385 0e5f A90B0000 		.4byte	0xba9
 3386 0e63 E9050000 		.4byte	.LLST37
 3387 0e67 23       		.uleb128 0x23
 3388 0e68 18000000 		.4byte	.LVL130
 3389 0e6c CE120000 		.4byte	0x12ce
 3390 0e70 1F       		.uleb128 0x1f
 3391 0e71 01       		.uleb128 0x1
 3392 0e72 50       		.byte	0x50
 3393 0e73 07       		.uleb128 0x7
 3394 0e74 74       		.byte	0x74
 3395 0e75 00       		.sleb128 0
 3396 0e76 35       		.byte	0x35
 3397 0e77 24       		.byte	0x24
 3398 0e78 76       		.byte	0x76
 3399 0e79 00       		.sleb128 0
 3400 0e7a 22       		.byte	0x22
 3401 0e7b 00       		.byte	0
 3402 0e7c 00       		.byte	0
 3403 0e7d 1D       		.uleb128 0x1d
 3404 0e7e 00000000 		.4byte	.LASF165
 3405 0e82 01       		.byte	0x1
 3406 0e83 580A     		.2byte	0xa58
 3407 0e85 83000000 		.4byte	0x83
 3408 0e89 00000000 		.4byte	.LFB22
 3409 0e8d 10000000 		.4byte	.LFE22-.LFB22
 3410 0e91 01       		.uleb128 0x1
 3411 0e92 9C       		.byte	0x9c
 3412 0e93 C40E0000 		.4byte	0xec4
 3413 0e97 18       		.uleb128 0x18
 3414 0e98 F30C0000 		.4byte	.LASF132
 3415 0e9c 01       		.byte	0x1
 3416 0e9d 580A     		.2byte	0xa58
 3417 0e9f 83000000 		.4byte	0x83
 3418 0ea3 FC050000 		.4byte	.LLST38
 3419 0ea7 24       		.uleb128 0x24
 3420 0ea8 5A0A0000 		.4byte	.LASF166
 3421 0eac 01       		.byte	0x1
 3422 0ead 5A0A     		.2byte	0xa5a
 3423 0eaf 83000000 		.4byte	0x83
 3424 0eb3 01       		.uleb128 0x1
 3425 0eb4 50       		.byte	0x50
 3426 0eb5 24       		.uleb128 0x24
 3427 0eb6 75020000 		.4byte	.LASF167
 3428 0eba 01       		.byte	0x1
 3429 0ebb 5E0A     		.2byte	0xa5e
 3430 0ebd C40E0000 		.4byte	0xec4
 3431 0ec1 01       		.uleb128 0x1
 3432 0ec2 53       		.byte	0x53
 3433 0ec3 00       		.byte	0
 3434 0ec4 06       		.uleb128 0x6
 3435 0ec5 04       		.byte	0x4
 3436 0ec6 CB010000 		.4byte	0x1cb
 3437 0eca 20       		.uleb128 0x20
 3438 0ecb 16040000 		.4byte	.LASF168
 3439 0ecf 01       		.byte	0x1
 3440 0ed0 820A     		.2byte	0xa82
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 115


 3441 0ed2 00000000 		.4byte	.LFB23
 3442 0ed6 10000000 		.4byte	.LFE23-.LFB23
 3443 0eda 01       		.uleb128 0x1
 3444 0edb 9C       		.byte	0x9c
 3445 0edc 0D0F0000 		.4byte	0xf0d
 3446 0ee0 18       		.uleb128 0x18
 3447 0ee1 F30C0000 		.4byte	.LASF132
 3448 0ee5 01       		.byte	0x1
 3449 0ee6 820A     		.2byte	0xa82
 3450 0ee8 83000000 		.4byte	0x83
 3451 0eec 1D060000 		.4byte	.LLST39
 3452 0ef0 25       		.uleb128 0x25
 3453 0ef1 16060000 		.4byte	.LASF169
 3454 0ef5 01       		.byte	0x1
 3455 0ef6 820A     		.2byte	0xa82
 3456 0ef8 83000000 		.4byte	0x83
 3457 0efc 01       		.uleb128 0x1
 3458 0efd 51       		.byte	0x51
 3459 0efe 24       		.uleb128 0x24
 3460 0eff 75020000 		.4byte	.LASF167
 3461 0f03 01       		.byte	0x1
 3462 0f04 860A     		.2byte	0xa86
 3463 0f06 C40E0000 		.4byte	0xec4
 3464 0f0a 01       		.uleb128 0x1
 3465 0f0b 53       		.byte	0x53
 3466 0f0c 00       		.byte	0
 3467 0f0d 1D       		.uleb128 0x1d
 3468 0f0e 68040000 		.4byte	.LASF170
 3469 0f12 01       		.byte	0x1
 3470 0f13 D60A     		.2byte	0xad6
 3471 0f15 6B000000 		.4byte	0x6b
 3472 0f19 00000000 		.4byte	.LFB24
 3473 0f1d 24000000 		.4byte	.LFE24-.LFB24
 3474 0f21 01       		.uleb128 0x1
 3475 0f22 9C       		.byte	0x9c
 3476 0f23 630F0000 		.4byte	0xf63
 3477 0f27 18       		.uleb128 0x18
 3478 0f28 C10C0000 		.4byte	.LASF123
 3479 0f2c 01       		.byte	0x1
 3480 0f2d D60A     		.2byte	0xad6
 3481 0f2f 83000000 		.4byte	0x83
 3482 0f33 3E060000 		.4byte	.LLST40
 3483 0f37 25       		.uleb128 0x25
 3484 0f38 B2050000 		.4byte	.LASF26
 3485 0f3c 01       		.byte	0x1
 3486 0f3d D60A     		.2byte	0xad6
 3487 0f3f 83000000 		.4byte	0x83
 3488 0f43 01       		.uleb128 0x1
 3489 0f44 51       		.byte	0x51
 3490 0f45 19       		.uleb128 0x19
 3491 0f46 2F0A0000 		.4byte	.LASF171
 3492 0f4a 01       		.byte	0x1
 3493 0f4b D80A     		.2byte	0xad8
 3494 0f4d 83000000 		.4byte	0x83
 3495 0f51 78060000 		.4byte	.LLST41
 3496 0f55 21       		.uleb128 0x21
 3497 0f56 CF0C0000 		.4byte	.LASF172
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 116


 3498 0f5a 01       		.byte	0x1
 3499 0f5b D90A     		.2byte	0xad9
 3500 0f5d 83000000 		.4byte	0x83
 3501 0f61 01       		.byte	0x1
 3502 0f62 00       		.byte	0
 3503 0f63 1A       		.uleb128 0x1a
 3504 0f64 7D020000 		.4byte	.LASF174
 3505 0f68 01       		.byte	0x1
 3506 0f69 BE08     		.2byte	0x8be
 3507 0f6b 00000000 		.4byte	.LFB18
 3508 0f6f 3A000000 		.4byte	.LFE18-.LFB18
 3509 0f73 01       		.uleb128 0x1
 3510 0f74 9C       		.byte	0x9c
 3511 0f75 48100000 		.4byte	0x1048
 3512 0f79 18       		.uleb128 0x18
 3513 0f7a D6070000 		.4byte	.LASF138
 3514 0f7e 01       		.byte	0x1
 3515 0f7f BE08     		.2byte	0x8be
 3516 0f81 83000000 		.4byte	0x83
 3517 0f85 8B060000 		.4byte	.LLST42
 3518 0f89 18       		.uleb128 0x18
 3519 0f8a 75020000 		.4byte	.LASF167
 3520 0f8e 01       		.byte	0x1
 3521 0f8f BE08     		.2byte	0x8be
 3522 0f91 C40E0000 		.4byte	0xec4
 3523 0f95 AC060000 		.4byte	.LLST43
 3524 0f99 19       		.uleb128 0x19
 3525 0f9a 0D040000 		.4byte	.LASF127
 3526 0f9e 01       		.byte	0x1
 3527 0f9f C008     		.2byte	0x8c0
 3528 0fa1 6B000000 		.4byte	0x6b
 3529 0fa5 D8060000 		.4byte	.LLST44
 3530 0fa9 19       		.uleb128 0x19
 3531 0faa 93010000 		.4byte	.LASF128
 3532 0fae 01       		.byte	0x1
 3533 0faf C108     		.2byte	0x8c1
 3534 0fb1 6B000000 		.4byte	0x6b
 3535 0fb5 F6060000 		.4byte	.LLST45
 3536 0fb9 19       		.uleb128 0x19
 3537 0fba 70050000 		.4byte	.LASF124
 3538 0fbe 01       		.byte	0x1
 3539 0fbf C508     		.2byte	0x8c5
 3540 0fc1 83000000 		.4byte	0x83
 3541 0fc5 09070000 		.4byte	.LLST46
 3542 0fc9 19       		.uleb128 0x19
 3543 0fca C10C0000 		.4byte	.LASF123
 3544 0fce 01       		.byte	0x1
 3545 0fcf C708     		.2byte	0x8c7
 3546 0fd1 83000000 		.4byte	0x83
 3547 0fd5 27070000 		.4byte	.LLST47
 3548 0fd9 1E       		.uleb128 0x1e
 3549 0fda 08000000 		.4byte	.LVL148
 3550 0fde 7D0E0000 		.4byte	0xe7d
 3551 0fe2 EE0F0000 		.4byte	0xfee
 3552 0fe6 1F       		.uleb128 0x1f
 3553 0fe7 01       		.uleb128 0x1
 3554 0fe8 50       		.byte	0x50
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 117


 3555 0fe9 03       		.uleb128 0x3
 3556 0fea F3       		.byte	0xf3
 3557 0feb 01       		.uleb128 0x1
 3558 0fec 50       		.byte	0x50
 3559 0fed 00       		.byte	0
 3560 0fee 1E       		.uleb128 0x1e
 3561 0fef 12000000 		.4byte	.LVL150
 3562 0ff3 DA120000 		.4byte	0x12da
 3563 0ff7 07100000 		.4byte	0x1007
 3564 0ffb 1F       		.uleb128 0x1f
 3565 0ffc 01       		.uleb128 0x1
 3566 0ffd 50       		.byte	0x50
 3567 0ffe 02       		.uleb128 0x2
 3568 0fff 75       		.byte	0x75
 3569 1000 00       		.sleb128 0
 3570 1001 1F       		.uleb128 0x1f
 3571 1002 01       		.uleb128 0x1
 3572 1003 52       		.byte	0x52
 3573 1004 01       		.uleb128 0x1
 3574 1005 30       		.byte	0x30
 3575 1006 00       		.byte	0
 3576 1007 1E       		.uleb128 0x1e
 3577 1008 1A000000 		.4byte	.LVL153
 3578 100c F5080000 		.4byte	0x8f5
 3579 1010 1B100000 		.4byte	0x101b
 3580 1014 1F       		.uleb128 0x1f
 3581 1015 01       		.uleb128 0x1
 3582 1016 50       		.byte	0x50
 3583 1017 02       		.uleb128 0x2
 3584 1018 75       		.byte	0x75
 3585 1019 00       		.sleb128 0
 3586 101a 00       		.byte	0
 3587 101b 1E       		.uleb128 0x1e
 3588 101c 26000000 		.4byte	.LVL156
 3589 1020 0D0F0000 		.4byte	0xf0d
 3590 1024 31100000 		.4byte	0x1031
 3591 1028 1F       		.uleb128 0x1f
 3592 1029 01       		.uleb128 0x1
 3593 102a 50       		.byte	0x50
 3594 102b 04       		.uleb128 0x4
 3595 102c 75       		.byte	0x75
 3596 102d 00       		.sleb128 0
 3597 102e 31       		.byte	0x31
 3598 102f 24       		.byte	0x24
 3599 1030 00       		.byte	0
 3600 1031 23       		.uleb128 0x23
 3601 1032 30000000 		.4byte	.LVL158
 3602 1036 40090000 		.4byte	0x940
 3603 103a 1F       		.uleb128 0x1f
 3604 103b 01       		.uleb128 0x1
 3605 103c 50       		.byte	0x50
 3606 103d 02       		.uleb128 0x2
 3607 103e 75       		.byte	0x75
 3608 103f 00       		.sleb128 0
 3609 1040 1F       		.uleb128 0x1f
 3610 1041 01       		.uleb128 0x1
 3611 1042 51       		.byte	0x51
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 118


 3612 1043 02       		.uleb128 0x2
 3613 1044 74       		.byte	0x74
 3614 1045 00       		.sleb128 0
 3615 1046 00       		.byte	0
 3616 1047 00       		.byte	0
 3617 1048 20       		.uleb128 0x20
 3618 1049 1A0D0000 		.4byte	.LASF175
 3619 104d 01       		.byte	0x1
 3620 104e 8908     		.2byte	0x889
 3621 1050 00000000 		.4byte	.LFB17
 3622 1054 28000000 		.4byte	.LFE17-.LFB17
 3623 1058 01       		.uleb128 0x1
 3624 1059 9C       		.byte	0x9c
 3625 105a A3100000 		.4byte	0x10a3
 3626 105e 19       		.uleb128 0x19
 3627 105f D6070000 		.4byte	.LASF138
 3628 1063 01       		.byte	0x1
 3629 1064 8B08     		.2byte	0x88b
 3630 1066 83000000 		.4byte	0x83
 3631 106a 45070000 		.4byte	.LLST48
 3632 106e 19       		.uleb128 0x19
 3633 106f 75020000 		.4byte	.LASF167
 3634 1073 01       		.byte	0x1
 3635 1074 8C08     		.2byte	0x88c
 3636 1076 C40E0000 		.4byte	0xec4
 3637 107a 64070000 		.4byte	.LLST49
 3638 107e 1E       		.uleb128 0x1e
 3639 107f 14000000 		.4byte	.LVL166
 3640 1083 630F0000 		.4byte	0xf63
 3641 1087 92100000 		.4byte	0x1092
 3642 108b 1F       		.uleb128 0x1f
 3643 108c 01       		.uleb128 0x1
 3644 108d 50       		.byte	0x50
 3645 108e 02       		.uleb128 0x2
 3646 108f 74       		.byte	0x74
 3647 1090 00       		.sleb128 0
 3648 1091 00       		.byte	0
 3649 1092 23       		.uleb128 0x23
 3650 1093 1A000000 		.4byte	.LVL167
 3651 1097 C3120000 		.4byte	0x12c3
 3652 109b 1F       		.uleb128 0x1f
 3653 109c 01       		.uleb128 0x1
 3654 109d 50       		.byte	0x50
 3655 109e 02       		.uleb128 0x2
 3656 109f 74       		.byte	0x74
 3657 10a0 00       		.sleb128 0
 3658 10a1 00       		.byte	0
 3659 10a2 00       		.byte	0
 3660 10a3 1D       		.uleb128 0x1d
 3661 10a4 AB0C0000 		.4byte	.LASF176
 3662 10a8 01       		.byte	0x1
 3663 10a9 0402     		.2byte	0x204
 3664 10ab A4000000 		.4byte	0xa4
 3665 10af 00000000 		.4byte	.LFB5
 3666 10b3 14000000 		.4byte	.LFE5-.LFB5
 3667 10b7 01       		.uleb128 0x1
 3668 10b8 9C       		.byte	0x9c
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 119


 3669 10b9 EC100000 		.4byte	0x10ec
 3670 10bd 21       		.uleb128 0x21
 3671 10be 69010000 		.4byte	.LASF177
 3672 10c2 01       		.byte	0x1
 3673 10c3 0602     		.2byte	0x206
 3674 10c5 A4000000 		.4byte	0xa4
 3675 10c9 00       		.byte	0
 3676 10ca 1B       		.uleb128 0x1b
 3677 10cb 06000000 		.4byte	.LVL171
 3678 10cf 48100000 		.4byte	0x1048
 3679 10d3 1B       		.uleb128 0x1b
 3680 10d4 0A000000 		.4byte	.LVL172
 3681 10d8 FF0B0000 		.4byte	0xbff
 3682 10dc 23       		.uleb128 0x23
 3683 10dd 10000000 		.4byte	.LVL173
 3684 10e1 B40B0000 		.4byte	0xbb4
 3685 10e5 1F       		.uleb128 0x1f
 3686 10e6 01       		.uleb128 0x1
 3687 10e7 50       		.byte	0x50
 3688 10e8 01       		.uleb128 0x1
 3689 10e9 30       		.byte	0x30
 3690 10ea 00       		.byte	0
 3691 10eb 00       		.byte	0
 3692 10ec 20       		.uleb128 0x20
 3693 10ed CF000000 		.4byte	.LASF178
 3694 10f1 01       		.byte	0x1
 3695 10f2 060B     		.2byte	0xb06
 3696 10f4 00000000 		.4byte	.LFB25
 3697 10f8 68000000 		.4byte	.LFE25-.LFB25
 3698 10fc 01       		.uleb128 0x1
 3699 10fd 9C       		.byte	0x9c
 3700 10fe 7E110000 		.4byte	0x117e
 3701 1102 19       		.uleb128 0x19
 3702 1103 7D0C0000 		.4byte	.LASF131
 3703 1107 01       		.byte	0x1
 3704 1108 080B     		.2byte	0xb08
 3705 110a 83000000 		.4byte	0x83
 3706 110e 77070000 		.4byte	.LLST50
 3707 1112 19       		.uleb128 0x19
 3708 1113 7D010000 		.4byte	.LASF143
 3709 1117 01       		.byte	0x1
 3710 1118 090B     		.2byte	0xb09
 3711 111a 6B000000 		.4byte	0x6b
 3712 111e C1070000 		.4byte	.LLST51
 3713 1122 1B       		.uleb128 0x1b
 3714 1123 06000000 		.4byte	.LVL174
 3715 1127 68120000 		.4byte	0x1268
 3716 112b 1B       		.uleb128 0x1b
 3717 112c 14000000 		.4byte	.LVL177
 3718 1130 73120000 		.4byte	0x1273
 3719 1134 1B       		.uleb128 0x1b
 3720 1135 18000000 		.4byte	.LVL178
 3721 1139 68120000 		.4byte	0x1268
 3722 113d 1B       		.uleb128 0x1b
 3723 113e 26000000 		.4byte	.LVL181
 3724 1142 73120000 		.4byte	0x1273
 3725 1146 1B       		.uleb128 0x1b
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 120


 3726 1147 2A000000 		.4byte	.LVL182
 3727 114b 68120000 		.4byte	0x1268
 3728 114f 1B       		.uleb128 0x1b
 3729 1150 3E000000 		.4byte	.LVL186
 3730 1154 73120000 		.4byte	0x1273
 3731 1158 1E       		.uleb128 0x1e
 3732 1159 44000000 		.4byte	.LVL187
 3733 115d E6120000 		.4byte	0x12e6
 3734 1161 6B110000 		.4byte	0x116b
 3735 1165 1F       		.uleb128 0x1f
 3736 1166 01       		.uleb128 0x1
 3737 1167 50       		.byte	0x50
 3738 1168 01       		.uleb128 0x1
 3739 1169 31       		.byte	0x31
 3740 116a 00       		.byte	0
 3741 116b 1B       		.uleb128 0x1b
 3742 116c 48000000 		.4byte	.LVL188
 3743 1170 68120000 		.4byte	0x1268
 3744 1174 1B       		.uleb128 0x1b
 3745 1175 52000000 		.4byte	.LVL191
 3746 1179 73120000 		.4byte	0x1273
 3747 117d 00       		.byte	0
 3748 117e 26       		.uleb128 0x26
 3749 117f EC060000 		.4byte	.LASF179
 3750 1183 04       		.byte	0x4
 3751 1184 5805     		.2byte	0x558
 3752 1186 63070000 		.4byte	0x763
 3753 118a 26       		.uleb128 0x26
 3754 118b 5C090000 		.4byte	.LASF180
 3755 118f 04       		.byte	0x4
 3756 1190 5905     		.2byte	0x559
 3757 1192 96110000 		.4byte	0x1196
 3758 1196 22       		.uleb128 0x22
 3759 1197 E2080000 		.4byte	0x8e2
 3760 119b 0E       		.uleb128 0xe
 3761 119c AF0B0000 		.4byte	0xbaf
 3762 11a0 AB110000 		.4byte	0x11ab
 3763 11a4 0F       		.uleb128 0xf
 3764 11a5 C4010000 		.4byte	0x1c4
 3765 11a9 0C       		.byte	0xc
 3766 11aa 00       		.byte	0
 3767 11ab 26       		.uleb128 0x26
 3768 11ac 82090000 		.4byte	.LASF181
 3769 11b0 04       		.byte	0x4
 3770 11b1 5A05     		.2byte	0x55a
 3771 11b3 B7110000 		.4byte	0x11b7
 3772 11b7 22       		.uleb128 0x22
 3773 11b8 9B110000 		.4byte	0x119b
 3774 11bc 27       		.uleb128 0x27
 3775 11bd F3000000 		.4byte	.LASF182
 3776 11c1 01       		.byte	0x1
 3777 11c2 BB       		.byte	0xbb
 3778 11c3 B0000000 		.4byte	0xb0
 3779 11c7 05       		.uleb128 0x5
 3780 11c8 03       		.byte	0x3
 3781 11c9 00000000 		.4byte	CapSense_widgetIndex
 3782 11cd 27       		.uleb128 0x27
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 121


 3783 11ce C6030000 		.4byte	.LASF183
 3784 11d2 01       		.byte	0x1
 3785 11d3 BC       		.byte	0xbc
 3786 11d4 B0000000 		.4byte	0xb0
 3787 11d8 05       		.uleb128 0x5
 3788 11d9 03       		.byte	0x3
 3789 11da 00000000 		.4byte	CapSense_sensorIndex
 3790 11de 27       		.uleb128 0x27
 3791 11df FC0C0000 		.4byte	.LASF184
 3792 11e3 01       		.byte	0x1
 3793 11e4 BD       		.byte	0xbd
 3794 11e5 6B000000 		.4byte	0x6b
 3795 11e9 05       		.uleb128 0x5
 3796 11ea 03       		.byte	0x3
 3797 11eb 00000000 		.4byte	CapSense_requestScanAllWidget
 3798 11ef 27       		.uleb128 0x27
 3799 11f0 EC0B0000 		.4byte	.LASF185
 3800 11f4 01       		.byte	0x1
 3801 11f5 C0       		.byte	0xc0
 3802 11f6 A2080000 		.4byte	0x8a2
 3803 11fa 05       		.uleb128 0x5
 3804 11fb 03       		.byte	0x3
 3805 11fc 00000000 		.4byte	CapSense_curRamSnsPtr
 3806 1200 27       		.uleb128 0x27
 3807 1201 130A0000 		.4byte	.LASF186
 3808 1205 01       		.byte	0x1
 3809 1206 AE       		.byte	0xae
 3810 1207 1C010000 		.4byte	0x11c
 3811 120b 05       		.uleb128 0x5
 3812 120c 03       		.byte	0x3
 3813 120d 00000000 		.4byte	CapSense_currentSenseMethod
 3814 1211 27       		.uleb128 0x27
 3815 1212 0E0C0000 		.4byte	.LASF187
 3816 1216 01       		.byte	0x1
 3817 1217 B7       		.byte	0xb7
 3818 1218 22120000 		.4byte	0x1222
 3819 121c 05       		.uleb128 0x5
 3820 121d 03       		.byte	0x3
 3821 121e 00000000 		.4byte	CapSense_scanFreqIndex
 3822 1222 22       		.uleb128 0x22
 3823 1223 6B000000 		.4byte	0x6b
 3824 1227 27       		.uleb128 0x27
 3825 1228 75070000 		.4byte	.LASF188
 3826 122c 01       		.byte	0x1
 3827 122d CF       		.byte	0xcf
 3828 122e A90B0000 		.4byte	0xba9
 3829 1232 05       		.uleb128 0x5
 3830 1233 03       		.byte	0x3
 3831 1234 00000000 		.4byte	CapSense_curSnsIOPtr
 3832 1238 28       		.uleb128 0x28
 3833 1239 64080000 		.4byte	.LASF189
 3834 123d 64080000 		.4byte	.LASF189
 3835 1241 05       		.byte	0x5
 3836 1242 D401     		.2byte	0x1d4
 3837 1244 28       		.uleb128 0x28
 3838 1245 8C050000 		.4byte	.LASF190
 3839 1249 8C050000 		.4byte	.LASF190
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 122


 3840 124d 05       		.byte	0x5
 3841 124e D701     		.2byte	0x1d7
 3842 1250 28       		.uleb128 0x28
 3843 1251 85030000 		.4byte	.LASF191
 3844 1255 85030000 		.4byte	.LASF191
 3845 1259 05       		.byte	0x5
 3846 125a B701     		.2byte	0x1b7
 3847 125c 28       		.uleb128 0x28
 3848 125d 3D0B0000 		.4byte	.LASF192
 3849 1261 3D0B0000 		.4byte	.LASF192
 3850 1265 05       		.byte	0x5
 3851 1266 B901     		.2byte	0x1b9
 3852 1268 29       		.uleb128 0x29
 3853 1269 D50B0000 		.4byte	.LASF193
 3854 126d D50B0000 		.4byte	.LASF193
 3855 1271 06       		.byte	0x6
 3856 1272 E5       		.byte	0xe5
 3857 1273 29       		.uleb128 0x29
 3858 1274 05050000 		.4byte	.LASF194
 3859 1278 05050000 		.4byte	.LASF194
 3860 127c 06       		.byte	0x6
 3861 127d E6       		.byte	0xe6
 3862 127e 28       		.uleb128 0x28
 3863 127f E0090000 		.4byte	.LASF195
 3864 1283 E0090000 		.4byte	.LASF195
 3865 1287 05       		.byte	0x5
 3866 1288 C001     		.2byte	0x1c0
 3867 128a 29       		.uleb128 0x29
 3868 128b DF040000 		.4byte	.LASF196
 3869 128f DF040000 		.4byte	.LASF196
 3870 1293 07       		.byte	0x7
 3871 1294 8A       		.byte	0x8a
 3872 1295 28       		.uleb128 0x28
 3873 1296 61060000 		.4byte	.LASF197
 3874 129a 61060000 		.4byte	.LASF197
 3875 129e 05       		.byte	0x5
 3876 129f D001     		.2byte	0x1d0
 3877 12a1 29       		.uleb128 0x29
 3878 12a2 92090000 		.4byte	.LASF198
 3879 12a6 92090000 		.4byte	.LASF198
 3880 12aa 07       		.byte	0x7
 3881 12ab 89       		.byte	0x89
 3882 12ac 29       		.uleb128 0x29
 3883 12ad 710A0000 		.4byte	.LASF199
 3884 12b1 710A0000 		.4byte	.LASF199
 3885 12b5 08       		.byte	0x8
 3886 12b6 18       		.byte	0x18
 3887 12b7 28       		.uleb128 0x28
 3888 12b8 2B090000 		.4byte	.LASF200
 3889 12bc 2B090000 		.4byte	.LASF200
 3890 12c0 05       		.byte	0x5
 3891 12c1 BD01     		.2byte	0x1bd
 3892 12c3 29       		.uleb128 0x29
 3893 12c4 08010000 		.4byte	.LASF201
 3894 12c8 08010000 		.4byte	.LASF201
 3895 12cc 07       		.byte	0x7
 3896 12cd 83       		.byte	0x83
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 123


 3897 12ce 28       		.uleb128 0x28
 3898 12cf B8080000 		.4byte	.LASF202
 3899 12d3 B8080000 		.4byte	.LASF202
 3900 12d7 05       		.byte	0x5
 3901 12d8 C101     		.2byte	0x1c1
 3902 12da 28       		.uleb128 0x28
 3903 12db 1B050000 		.4byte	.LASF203
 3904 12df 1B050000 		.4byte	.LASF203
 3905 12e3 05       		.byte	0x5
 3906 12e4 DB01     		.2byte	0x1db
 3907 12e6 29       		.uleb128 0x29
 3908 12e7 9D030000 		.4byte	.LASF204
 3909 12eb 9D030000 		.4byte	.LASF204
 3910 12ef 06       		.byte	0x6
 3911 12f0 DA       		.byte	0xda
 3912 12f1 00       		.byte	0
 3913              		.section	.debug_abbrev,"",%progbits
 3914              	.Ldebug_abbrev0:
 3915 0000 01       		.uleb128 0x1
 3916 0001 11       		.uleb128 0x11
 3917 0002 01       		.byte	0x1
 3918 0003 25       		.uleb128 0x25
 3919 0004 0E       		.uleb128 0xe
 3920 0005 13       		.uleb128 0x13
 3921 0006 0B       		.uleb128 0xb
 3922 0007 03       		.uleb128 0x3
 3923 0008 0E       		.uleb128 0xe
 3924 0009 1B       		.uleb128 0x1b
 3925 000a 0E       		.uleb128 0xe
 3926 000b 55       		.uleb128 0x55
 3927 000c 17       		.uleb128 0x17
 3928 000d 11       		.uleb128 0x11
 3929 000e 01       		.uleb128 0x1
 3930 000f 10       		.uleb128 0x10
 3931 0010 17       		.uleb128 0x17
 3932 0011 00       		.byte	0
 3933 0012 00       		.byte	0
 3934 0013 02       		.uleb128 0x2
 3935 0014 24       		.uleb128 0x24
 3936 0015 00       		.byte	0
 3937 0016 0B       		.uleb128 0xb
 3938 0017 0B       		.uleb128 0xb
 3939 0018 3E       		.uleb128 0x3e
 3940 0019 0B       		.uleb128 0xb
 3941 001a 03       		.uleb128 0x3
 3942 001b 0E       		.uleb128 0xe
 3943 001c 00       		.byte	0
 3944 001d 00       		.byte	0
 3945 001e 03       		.uleb128 0x3
 3946 001f 24       		.uleb128 0x24
 3947 0020 00       		.byte	0
 3948 0021 0B       		.uleb128 0xb
 3949 0022 0B       		.uleb128 0xb
 3950 0023 3E       		.uleb128 0x3e
 3951 0024 0B       		.uleb128 0xb
 3952 0025 03       		.uleb128 0x3
 3953 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 124


 3954 0027 00       		.byte	0
 3955 0028 00       		.byte	0
 3956 0029 04       		.uleb128 0x4
 3957 002a 16       		.uleb128 0x16
 3958 002b 00       		.byte	0
 3959 002c 03       		.uleb128 0x3
 3960 002d 0E       		.uleb128 0xe
 3961 002e 3A       		.uleb128 0x3a
 3962 002f 0B       		.uleb128 0xb
 3963 0030 3B       		.uleb128 0x3b
 3964 0031 05       		.uleb128 0x5
 3965 0032 49       		.uleb128 0x49
 3966 0033 13       		.uleb128 0x13
 3967 0034 00       		.byte	0
 3968 0035 00       		.byte	0
 3969 0036 05       		.uleb128 0x5
 3970 0037 35       		.uleb128 0x35
 3971 0038 00       		.byte	0
 3972 0039 49       		.uleb128 0x49
 3973 003a 13       		.uleb128 0x13
 3974 003b 00       		.byte	0
 3975 003c 00       		.byte	0
 3976 003d 06       		.uleb128 0x6
 3977 003e 0F       		.uleb128 0xf
 3978 003f 00       		.byte	0
 3979 0040 0B       		.uleb128 0xb
 3980 0041 0B       		.uleb128 0xb
 3981 0042 49       		.uleb128 0x49
 3982 0043 13       		.uleb128 0x13
 3983 0044 00       		.byte	0
 3984 0045 00       		.byte	0
 3985 0046 07       		.uleb128 0x7
 3986 0047 15       		.uleb128 0x15
 3987 0048 00       		.byte	0
 3988 0049 27       		.uleb128 0x27
 3989 004a 19       		.uleb128 0x19
 3990 004b 00       		.byte	0
 3991 004c 00       		.byte	0
 3992 004d 08       		.uleb128 0x8
 3993 004e 04       		.uleb128 0x4
 3994 004f 01       		.byte	0x1
 3995 0050 0B       		.uleb128 0xb
 3996 0051 0B       		.uleb128 0xb
 3997 0052 49       		.uleb128 0x49
 3998 0053 13       		.uleb128 0x13
 3999 0054 3A       		.uleb128 0x3a
 4000 0055 0B       		.uleb128 0xb
 4001 0056 3B       		.uleb128 0x3b
 4002 0057 0B       		.uleb128 0xb
 4003 0058 01       		.uleb128 0x1
 4004 0059 13       		.uleb128 0x13
 4005 005a 00       		.byte	0
 4006 005b 00       		.byte	0
 4007 005c 09       		.uleb128 0x9
 4008 005d 28       		.uleb128 0x28
 4009 005e 00       		.byte	0
 4010 005f 03       		.uleb128 0x3
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 125


 4011 0060 0E       		.uleb128 0xe
 4012 0061 1C       		.uleb128 0x1c
 4013 0062 0B       		.uleb128 0xb
 4014 0063 00       		.byte	0
 4015 0064 00       		.byte	0
 4016 0065 0A       		.uleb128 0xa
 4017 0066 16       		.uleb128 0x16
 4018 0067 00       		.byte	0
 4019 0068 03       		.uleb128 0x3
 4020 0069 0E       		.uleb128 0xe
 4021 006a 3A       		.uleb128 0x3a
 4022 006b 0B       		.uleb128 0xb
 4023 006c 3B       		.uleb128 0x3b
 4024 006d 0B       		.uleb128 0xb
 4025 006e 49       		.uleb128 0x49
 4026 006f 13       		.uleb128 0x13
 4027 0070 00       		.byte	0
 4028 0071 00       		.byte	0
 4029 0072 0B       		.uleb128 0xb
 4030 0073 13       		.uleb128 0x13
 4031 0074 01       		.byte	0x1
 4032 0075 0B       		.uleb128 0xb
 4033 0076 0B       		.uleb128 0xb
 4034 0077 3A       		.uleb128 0x3a
 4035 0078 0B       		.uleb128 0xb
 4036 0079 3B       		.uleb128 0x3b
 4037 007a 0B       		.uleb128 0xb
 4038 007b 01       		.uleb128 0x1
 4039 007c 13       		.uleb128 0x13
 4040 007d 00       		.byte	0
 4041 007e 00       		.byte	0
 4042 007f 0C       		.uleb128 0xc
 4043 0080 0D       		.uleb128 0xd
 4044 0081 00       		.byte	0
 4045 0082 03       		.uleb128 0x3
 4046 0083 08       		.uleb128 0x8
 4047 0084 3A       		.uleb128 0x3a
 4048 0085 0B       		.uleb128 0xb
 4049 0086 3B       		.uleb128 0x3b
 4050 0087 0B       		.uleb128 0xb
 4051 0088 49       		.uleb128 0x49
 4052 0089 13       		.uleb128 0x13
 4053 008a 38       		.uleb128 0x38
 4054 008b 0B       		.uleb128 0xb
 4055 008c 00       		.byte	0
 4056 008d 00       		.byte	0
 4057 008e 0D       		.uleb128 0xd
 4058 008f 0D       		.uleb128 0xd
 4059 0090 00       		.byte	0
 4060 0091 03       		.uleb128 0x3
 4061 0092 0E       		.uleb128 0xe
 4062 0093 3A       		.uleb128 0x3a
 4063 0094 0B       		.uleb128 0xb
 4064 0095 3B       		.uleb128 0x3b
 4065 0096 0B       		.uleb128 0xb
 4066 0097 49       		.uleb128 0x49
 4067 0098 13       		.uleb128 0x13
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 126


 4068 0099 38       		.uleb128 0x38
 4069 009a 0B       		.uleb128 0xb
 4070 009b 00       		.byte	0
 4071 009c 00       		.byte	0
 4072 009d 0E       		.uleb128 0xe
 4073 009e 01       		.uleb128 0x1
 4074 009f 01       		.byte	0x1
 4075 00a0 49       		.uleb128 0x49
 4076 00a1 13       		.uleb128 0x13
 4077 00a2 01       		.uleb128 0x1
 4078 00a3 13       		.uleb128 0x13
 4079 00a4 00       		.byte	0
 4080 00a5 00       		.byte	0
 4081 00a6 0F       		.uleb128 0xf
 4082 00a7 21       		.uleb128 0x21
 4083 00a8 00       		.byte	0
 4084 00a9 49       		.uleb128 0x49
 4085 00aa 13       		.uleb128 0x13
 4086 00ab 2F       		.uleb128 0x2f
 4087 00ac 0B       		.uleb128 0xb
 4088 00ad 00       		.byte	0
 4089 00ae 00       		.byte	0
 4090 00af 10       		.uleb128 0x10
 4091 00b0 0D       		.uleb128 0xd
 4092 00b1 00       		.byte	0
 4093 00b2 03       		.uleb128 0x3
 4094 00b3 0E       		.uleb128 0xe
 4095 00b4 3A       		.uleb128 0x3a
 4096 00b5 0B       		.uleb128 0xb
 4097 00b6 3B       		.uleb128 0x3b
 4098 00b7 05       		.uleb128 0x5
 4099 00b8 49       		.uleb128 0x49
 4100 00b9 13       		.uleb128 0x13
 4101 00ba 38       		.uleb128 0x38
 4102 00bb 0B       		.uleb128 0xb
 4103 00bc 00       		.byte	0
 4104 00bd 00       		.byte	0
 4105 00be 11       		.uleb128 0x11
 4106 00bf 13       		.uleb128 0x13
 4107 00c0 01       		.byte	0x1
 4108 00c1 0B       		.uleb128 0xb
 4109 00c2 0B       		.uleb128 0xb
 4110 00c3 3A       		.uleb128 0x3a
 4111 00c4 0B       		.uleb128 0xb
 4112 00c5 3B       		.uleb128 0x3b
 4113 00c6 05       		.uleb128 0x5
 4114 00c7 01       		.uleb128 0x1
 4115 00c8 13       		.uleb128 0x13
 4116 00c9 00       		.byte	0
 4117 00ca 00       		.byte	0
 4118 00cb 12       		.uleb128 0x12
 4119 00cc 0D       		.uleb128 0xd
 4120 00cd 00       		.byte	0
 4121 00ce 03       		.uleb128 0x3
 4122 00cf 08       		.uleb128 0x8
 4123 00d0 3A       		.uleb128 0x3a
 4124 00d1 0B       		.uleb128 0xb
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 127


 4125 00d2 3B       		.uleb128 0x3b
 4126 00d3 05       		.uleb128 0x5
 4127 00d4 49       		.uleb128 0x49
 4128 00d5 13       		.uleb128 0x13
 4129 00d6 38       		.uleb128 0x38
 4130 00d7 0B       		.uleb128 0xb
 4131 00d8 00       		.byte	0
 4132 00d9 00       		.byte	0
 4133 00da 13       		.uleb128 0x13
 4134 00db 13       		.uleb128 0x13
 4135 00dc 01       		.byte	0x1
 4136 00dd 0B       		.uleb128 0xb
 4137 00de 05       		.uleb128 0x5
 4138 00df 3A       		.uleb128 0x3a
 4139 00e0 0B       		.uleb128 0xb
 4140 00e1 3B       		.uleb128 0x3b
 4141 00e2 05       		.uleb128 0x5
 4142 00e3 01       		.uleb128 0x1
 4143 00e4 13       		.uleb128 0x13
 4144 00e5 00       		.byte	0
 4145 00e6 00       		.byte	0
 4146 00e7 14       		.uleb128 0x14
 4147 00e8 0D       		.uleb128 0xd
 4148 00e9 00       		.byte	0
 4149 00ea 03       		.uleb128 0x3
 4150 00eb 0E       		.uleb128 0xe
 4151 00ec 3A       		.uleb128 0x3a
 4152 00ed 0B       		.uleb128 0xb
 4153 00ee 3B       		.uleb128 0x3b
 4154 00ef 05       		.uleb128 0x5
 4155 00f0 49       		.uleb128 0x49
 4156 00f1 13       		.uleb128 0x13
 4157 00f2 38       		.uleb128 0x38
 4158 00f3 05       		.uleb128 0x5
 4159 00f4 00       		.byte	0
 4160 00f5 00       		.byte	0
 4161 00f6 15       		.uleb128 0x15
 4162 00f7 26       		.uleb128 0x26
 4163 00f8 00       		.byte	0
 4164 00f9 00       		.byte	0
 4165 00fa 00       		.byte	0
 4166 00fb 16       		.uleb128 0x16
 4167 00fc 0F       		.uleb128 0xf
 4168 00fd 00       		.byte	0
 4169 00fe 0B       		.uleb128 0xb
 4170 00ff 0B       		.uleb128 0xb
 4171 0100 00       		.byte	0
 4172 0101 00       		.byte	0
 4173 0102 17       		.uleb128 0x17
 4174 0103 2E       		.uleb128 0x2e
 4175 0104 01       		.byte	0x1
 4176 0105 03       		.uleb128 0x3
 4177 0106 0E       		.uleb128 0xe
 4178 0107 3A       		.uleb128 0x3a
 4179 0108 0B       		.uleb128 0xb
 4180 0109 3B       		.uleb128 0x3b
 4181 010a 05       		.uleb128 0x5
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 128


 4182 010b 27       		.uleb128 0x27
 4183 010c 19       		.uleb128 0x19
 4184 010d 49       		.uleb128 0x49
 4185 010e 13       		.uleb128 0x13
 4186 010f 11       		.uleb128 0x11
 4187 0110 01       		.uleb128 0x1
 4188 0111 12       		.uleb128 0x12
 4189 0112 06       		.uleb128 0x6
 4190 0113 40       		.uleb128 0x40
 4191 0114 18       		.uleb128 0x18
 4192 0115 9642     		.uleb128 0x2116
 4193 0117 19       		.uleb128 0x19
 4194 0118 01       		.uleb128 0x1
 4195 0119 13       		.uleb128 0x13
 4196 011a 00       		.byte	0
 4197 011b 00       		.byte	0
 4198 011c 18       		.uleb128 0x18
 4199 011d 05       		.uleb128 0x5
 4200 011e 00       		.byte	0
 4201 011f 03       		.uleb128 0x3
 4202 0120 0E       		.uleb128 0xe
 4203 0121 3A       		.uleb128 0x3a
 4204 0122 0B       		.uleb128 0xb
 4205 0123 3B       		.uleb128 0x3b
 4206 0124 05       		.uleb128 0x5
 4207 0125 49       		.uleb128 0x49
 4208 0126 13       		.uleb128 0x13
 4209 0127 02       		.uleb128 0x2
 4210 0128 17       		.uleb128 0x17
 4211 0129 00       		.byte	0
 4212 012a 00       		.byte	0
 4213 012b 19       		.uleb128 0x19
 4214 012c 34       		.uleb128 0x34
 4215 012d 00       		.byte	0
 4216 012e 03       		.uleb128 0x3
 4217 012f 0E       		.uleb128 0xe
 4218 0130 3A       		.uleb128 0x3a
 4219 0131 0B       		.uleb128 0xb
 4220 0132 3B       		.uleb128 0x3b
 4221 0133 05       		.uleb128 0x5
 4222 0134 49       		.uleb128 0x49
 4223 0135 13       		.uleb128 0x13
 4224 0136 02       		.uleb128 0x2
 4225 0137 17       		.uleb128 0x17
 4226 0138 00       		.byte	0
 4227 0139 00       		.byte	0
 4228 013a 1A       		.uleb128 0x1a
 4229 013b 2E       		.uleb128 0x2e
 4230 013c 01       		.byte	0x1
 4231 013d 03       		.uleb128 0x3
 4232 013e 0E       		.uleb128 0xe
 4233 013f 3A       		.uleb128 0x3a
 4234 0140 0B       		.uleb128 0xb
 4235 0141 3B       		.uleb128 0x3b
 4236 0142 05       		.uleb128 0x5
 4237 0143 27       		.uleb128 0x27
 4238 0144 19       		.uleb128 0x19
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 129


 4239 0145 11       		.uleb128 0x11
 4240 0146 01       		.uleb128 0x1
 4241 0147 12       		.uleb128 0x12
 4242 0148 06       		.uleb128 0x6
 4243 0149 40       		.uleb128 0x40
 4244 014a 18       		.uleb128 0x18
 4245 014b 9742     		.uleb128 0x2117
 4246 014d 19       		.uleb128 0x19
 4247 014e 01       		.uleb128 0x1
 4248 014f 13       		.uleb128 0x13
 4249 0150 00       		.byte	0
 4250 0151 00       		.byte	0
 4251 0152 1B       		.uleb128 0x1b
 4252 0153 898201   		.uleb128 0x4109
 4253 0156 00       		.byte	0
 4254 0157 11       		.uleb128 0x11
 4255 0158 01       		.uleb128 0x1
 4256 0159 31       		.uleb128 0x31
 4257 015a 13       		.uleb128 0x13
 4258 015b 00       		.byte	0
 4259 015c 00       		.byte	0
 4260 015d 1C       		.uleb128 0x1c
 4261 015e 2E       		.uleb128 0x2e
 4262 015f 00       		.byte	0
 4263 0160 3F       		.uleb128 0x3f
 4264 0161 19       		.uleb128 0x19
 4265 0162 03       		.uleb128 0x3
 4266 0163 0E       		.uleb128 0xe
 4267 0164 3A       		.uleb128 0x3a
 4268 0165 0B       		.uleb128 0xb
 4269 0166 3B       		.uleb128 0x3b
 4270 0167 0B       		.uleb128 0xb
 4271 0168 27       		.uleb128 0x27
 4272 0169 19       		.uleb128 0x19
 4273 016a 49       		.uleb128 0x49
 4274 016b 13       		.uleb128 0x13
 4275 016c 11       		.uleb128 0x11
 4276 016d 01       		.uleb128 0x1
 4277 016e 12       		.uleb128 0x12
 4278 016f 06       		.uleb128 0x6
 4279 0170 40       		.uleb128 0x40
 4280 0171 18       		.uleb128 0x18
 4281 0172 9742     		.uleb128 0x2117
 4282 0174 19       		.uleb128 0x19
 4283 0175 00       		.byte	0
 4284 0176 00       		.byte	0
 4285 0177 1D       		.uleb128 0x1d
 4286 0178 2E       		.uleb128 0x2e
 4287 0179 01       		.byte	0x1
 4288 017a 3F       		.uleb128 0x3f
 4289 017b 19       		.uleb128 0x19
 4290 017c 03       		.uleb128 0x3
 4291 017d 0E       		.uleb128 0xe
 4292 017e 3A       		.uleb128 0x3a
 4293 017f 0B       		.uleb128 0xb
 4294 0180 3B       		.uleb128 0x3b
 4295 0181 05       		.uleb128 0x5
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 130


 4296 0182 27       		.uleb128 0x27
 4297 0183 19       		.uleb128 0x19
 4298 0184 49       		.uleb128 0x49
 4299 0185 13       		.uleb128 0x13
 4300 0186 11       		.uleb128 0x11
 4301 0187 01       		.uleb128 0x1
 4302 0188 12       		.uleb128 0x12
 4303 0189 06       		.uleb128 0x6
 4304 018a 40       		.uleb128 0x40
 4305 018b 18       		.uleb128 0x18
 4306 018c 9742     		.uleb128 0x2117
 4307 018e 19       		.uleb128 0x19
 4308 018f 01       		.uleb128 0x1
 4309 0190 13       		.uleb128 0x13
 4310 0191 00       		.byte	0
 4311 0192 00       		.byte	0
 4312 0193 1E       		.uleb128 0x1e
 4313 0194 898201   		.uleb128 0x4109
 4314 0197 01       		.byte	0x1
 4315 0198 11       		.uleb128 0x11
 4316 0199 01       		.uleb128 0x1
 4317 019a 31       		.uleb128 0x31
 4318 019b 13       		.uleb128 0x13
 4319 019c 01       		.uleb128 0x1
 4320 019d 13       		.uleb128 0x13
 4321 019e 00       		.byte	0
 4322 019f 00       		.byte	0
 4323 01a0 1F       		.uleb128 0x1f
 4324 01a1 8A8201   		.uleb128 0x410a
 4325 01a4 00       		.byte	0
 4326 01a5 02       		.uleb128 0x2
 4327 01a6 18       		.uleb128 0x18
 4328 01a7 9142     		.uleb128 0x2111
 4329 01a9 18       		.uleb128 0x18
 4330 01aa 00       		.byte	0
 4331 01ab 00       		.byte	0
 4332 01ac 20       		.uleb128 0x20
 4333 01ad 2E       		.uleb128 0x2e
 4334 01ae 01       		.byte	0x1
 4335 01af 3F       		.uleb128 0x3f
 4336 01b0 19       		.uleb128 0x19
 4337 01b1 03       		.uleb128 0x3
 4338 01b2 0E       		.uleb128 0xe
 4339 01b3 3A       		.uleb128 0x3a
 4340 01b4 0B       		.uleb128 0xb
 4341 01b5 3B       		.uleb128 0x3b
 4342 01b6 05       		.uleb128 0x5
 4343 01b7 27       		.uleb128 0x27
 4344 01b8 19       		.uleb128 0x19
 4345 01b9 11       		.uleb128 0x11
 4346 01ba 01       		.uleb128 0x1
 4347 01bb 12       		.uleb128 0x12
 4348 01bc 06       		.uleb128 0x6
 4349 01bd 40       		.uleb128 0x40
 4350 01be 18       		.uleb128 0x18
 4351 01bf 9742     		.uleb128 0x2117
 4352 01c1 19       		.uleb128 0x19
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 131


 4353 01c2 01       		.uleb128 0x1
 4354 01c3 13       		.uleb128 0x13
 4355 01c4 00       		.byte	0
 4356 01c5 00       		.byte	0
 4357 01c6 21       		.uleb128 0x21
 4358 01c7 34       		.uleb128 0x34
 4359 01c8 00       		.byte	0
 4360 01c9 03       		.uleb128 0x3
 4361 01ca 0E       		.uleb128 0xe
 4362 01cb 3A       		.uleb128 0x3a
 4363 01cc 0B       		.uleb128 0xb
 4364 01cd 3B       		.uleb128 0x3b
 4365 01ce 05       		.uleb128 0x5
 4366 01cf 49       		.uleb128 0x49
 4367 01d0 13       		.uleb128 0x13
 4368 01d1 1C       		.uleb128 0x1c
 4369 01d2 0B       		.uleb128 0xb
 4370 01d3 00       		.byte	0
 4371 01d4 00       		.byte	0
 4372 01d5 22       		.uleb128 0x22
 4373 01d6 26       		.uleb128 0x26
 4374 01d7 00       		.byte	0
 4375 01d8 49       		.uleb128 0x49
 4376 01d9 13       		.uleb128 0x13
 4377 01da 00       		.byte	0
 4378 01db 00       		.byte	0
 4379 01dc 23       		.uleb128 0x23
 4380 01dd 898201   		.uleb128 0x4109
 4381 01e0 01       		.byte	0x1
 4382 01e1 11       		.uleb128 0x11
 4383 01e2 01       		.uleb128 0x1
 4384 01e3 31       		.uleb128 0x31
 4385 01e4 13       		.uleb128 0x13
 4386 01e5 00       		.byte	0
 4387 01e6 00       		.byte	0
 4388 01e7 24       		.uleb128 0x24
 4389 01e8 34       		.uleb128 0x34
 4390 01e9 00       		.byte	0
 4391 01ea 03       		.uleb128 0x3
 4392 01eb 0E       		.uleb128 0xe
 4393 01ec 3A       		.uleb128 0x3a
 4394 01ed 0B       		.uleb128 0xb
 4395 01ee 3B       		.uleb128 0x3b
 4396 01ef 05       		.uleb128 0x5
 4397 01f0 49       		.uleb128 0x49
 4398 01f1 13       		.uleb128 0x13
 4399 01f2 02       		.uleb128 0x2
 4400 01f3 18       		.uleb128 0x18
 4401 01f4 00       		.byte	0
 4402 01f5 00       		.byte	0
 4403 01f6 25       		.uleb128 0x25
 4404 01f7 05       		.uleb128 0x5
 4405 01f8 00       		.byte	0
 4406 01f9 03       		.uleb128 0x3
 4407 01fa 0E       		.uleb128 0xe
 4408 01fb 3A       		.uleb128 0x3a
 4409 01fc 0B       		.uleb128 0xb
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 132


 4410 01fd 3B       		.uleb128 0x3b
 4411 01fe 05       		.uleb128 0x5
 4412 01ff 49       		.uleb128 0x49
 4413 0200 13       		.uleb128 0x13
 4414 0201 02       		.uleb128 0x2
 4415 0202 18       		.uleb128 0x18
 4416 0203 00       		.byte	0
 4417 0204 00       		.byte	0
 4418 0205 26       		.uleb128 0x26
 4419 0206 34       		.uleb128 0x34
 4420 0207 00       		.byte	0
 4421 0208 03       		.uleb128 0x3
 4422 0209 0E       		.uleb128 0xe
 4423 020a 3A       		.uleb128 0x3a
 4424 020b 0B       		.uleb128 0xb
 4425 020c 3B       		.uleb128 0x3b
 4426 020d 05       		.uleb128 0x5
 4427 020e 49       		.uleb128 0x49
 4428 020f 13       		.uleb128 0x13
 4429 0210 3F       		.uleb128 0x3f
 4430 0211 19       		.uleb128 0x19
 4431 0212 3C       		.uleb128 0x3c
 4432 0213 19       		.uleb128 0x19
 4433 0214 00       		.byte	0
 4434 0215 00       		.byte	0
 4435 0216 27       		.uleb128 0x27
 4436 0217 34       		.uleb128 0x34
 4437 0218 00       		.byte	0
 4438 0219 03       		.uleb128 0x3
 4439 021a 0E       		.uleb128 0xe
 4440 021b 3A       		.uleb128 0x3a
 4441 021c 0B       		.uleb128 0xb
 4442 021d 3B       		.uleb128 0x3b
 4443 021e 0B       		.uleb128 0xb
 4444 021f 49       		.uleb128 0x49
 4445 0220 13       		.uleb128 0x13
 4446 0221 3F       		.uleb128 0x3f
 4447 0222 19       		.uleb128 0x19
 4448 0223 02       		.uleb128 0x2
 4449 0224 18       		.uleb128 0x18
 4450 0225 00       		.byte	0
 4451 0226 00       		.byte	0
 4452 0227 28       		.uleb128 0x28
 4453 0228 2E       		.uleb128 0x2e
 4454 0229 00       		.byte	0
 4455 022a 3F       		.uleb128 0x3f
 4456 022b 19       		.uleb128 0x19
 4457 022c 3C       		.uleb128 0x3c
 4458 022d 19       		.uleb128 0x19
 4459 022e 6E       		.uleb128 0x6e
 4460 022f 0E       		.uleb128 0xe
 4461 0230 03       		.uleb128 0x3
 4462 0231 0E       		.uleb128 0xe
 4463 0232 3A       		.uleb128 0x3a
 4464 0233 0B       		.uleb128 0xb
 4465 0234 3B       		.uleb128 0x3b
 4466 0235 05       		.uleb128 0x5
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 133


 4467 0236 00       		.byte	0
 4468 0237 00       		.byte	0
 4469 0238 29       		.uleb128 0x29
 4470 0239 2E       		.uleb128 0x2e
 4471 023a 00       		.byte	0
 4472 023b 3F       		.uleb128 0x3f
 4473 023c 19       		.uleb128 0x19
 4474 023d 3C       		.uleb128 0x3c
 4475 023e 19       		.uleb128 0x19
 4476 023f 6E       		.uleb128 0x6e
 4477 0240 0E       		.uleb128 0xe
 4478 0241 03       		.uleb128 0x3
 4479 0242 0E       		.uleb128 0xe
 4480 0243 3A       		.uleb128 0x3a
 4481 0244 0B       		.uleb128 0xb
 4482 0245 3B       		.uleb128 0x3b
 4483 0246 0B       		.uleb128 0xb
 4484 0247 00       		.byte	0
 4485 0248 00       		.byte	0
 4486 0249 00       		.byte	0
 4487              		.section	.debug_loc,"",%progbits
 4488              	.Ldebug_loc0:
 4489              	.LLST0:
 4490 0000 00000000 		.4byte	.LVL0
 4491 0004 14000000 		.4byte	.LVL3
 4492 0008 0100     		.2byte	0x1
 4493 000a 50       		.byte	0x50
 4494 000b 14000000 		.4byte	.LVL3
 4495 000f 76000000 		.4byte	.LVL9
 4496 0013 0100     		.2byte	0x1
 4497 0015 54       		.byte	0x54
 4498 0016 76000000 		.4byte	.LVL9
 4499 001a 84000000 		.4byte	.LFE19
 4500 001e 0400     		.2byte	0x4
 4501 0020 F3       		.byte	0xf3
 4502 0021 01       		.uleb128 0x1
 4503 0022 50       		.byte	0x50
 4504 0023 9F       		.byte	0x9f
 4505 0024 00000000 		.4byte	0
 4506 0028 00000000 		.4byte	0
 4507              	.LLST1:
 4508 002c 00000000 		.4byte	.LVL0
 4509 0030 12000000 		.4byte	.LVL2
 4510 0034 0100     		.2byte	0x1
 4511 0036 51       		.byte	0x51
 4512 0037 12000000 		.4byte	.LVL2
 4513 003b 76000000 		.4byte	.LVL10
 4514 003f 0100     		.2byte	0x1
 4515 0041 55       		.byte	0x55
 4516 0042 76000000 		.4byte	.LVL10
 4517 0046 84000000 		.4byte	.LFE19
 4518 004a 0400     		.2byte	0x4
 4519 004c F3       		.byte	0xf3
 4520 004d 01       		.uleb128 0x1
 4521 004e 51       		.byte	0x51
 4522 004f 9F       		.byte	0x9f
 4523 0050 00000000 		.4byte	0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 134


 4524 0054 00000000 		.4byte	0
 4525              	.LLST2:
 4526 0058 06000000 		.4byte	.LVL1
 4527 005c 76000000 		.4byte	.LVL8
 4528 0060 0200     		.2byte	0x2
 4529 0062 30       		.byte	0x30
 4530 0063 9F       		.byte	0x9f
 4531 0064 76000000 		.4byte	.LVL8
 4532 0068 84000000 		.4byte	.LFE19
 4533 006c 0100     		.2byte	0x1
 4534 006e 50       		.byte	0x50
 4535 006f 00000000 		.4byte	0
 4536 0073 00000000 		.4byte	0
 4537              	.LLST3:
 4538 0077 00000000 		.4byte	.LVL11
 4539 007b 20000000 		.4byte	.LVL15
 4540 007f 0100     		.2byte	0x1
 4541 0081 50       		.byte	0x50
 4542 0082 20000000 		.4byte	.LVL15
 4543 0086 23000000 		.4byte	.LVL16-1
 4544 008a 0100     		.2byte	0x1
 4545 008c 51       		.byte	0x51
 4546 008d 23000000 		.4byte	.LVL16-1
 4547 0091 38000000 		.4byte	.LVL21
 4548 0095 0400     		.2byte	0x4
 4549 0097 F3       		.byte	0xf3
 4550 0098 01       		.uleb128 0x1
 4551 0099 50       		.byte	0x50
 4552 009a 9F       		.byte	0x9f
 4553 009b 38000000 		.4byte	.LVL21
 4554 009f 3E000000 		.4byte	.LVL24
 4555 00a3 0100     		.2byte	0x1
 4556 00a5 50       		.byte	0x50
 4557 00a6 3E000000 		.4byte	.LVL24
 4558 00aa 42000000 		.4byte	.LFE20
 4559 00ae 0400     		.2byte	0x4
 4560 00b0 F3       		.byte	0xf3
 4561 00b1 01       		.uleb128 0x1
 4562 00b2 50       		.byte	0x50
 4563 00b3 9F       		.byte	0x9f
 4564 00b4 00000000 		.4byte	0
 4565 00b8 00000000 		.4byte	0
 4566              	.LLST4:
 4567 00bc 00000000 		.4byte	.LVL11
 4568 00c0 1E000000 		.4byte	.LVL14
 4569 00c4 0100     		.2byte	0x1
 4570 00c6 51       		.byte	0x51
 4571 00c7 1E000000 		.4byte	.LVL14
 4572 00cb 38000000 		.4byte	.LVL21
 4573 00cf 0400     		.2byte	0x4
 4574 00d1 F3       		.byte	0xf3
 4575 00d2 01       		.uleb128 0x1
 4576 00d3 51       		.byte	0x51
 4577 00d4 9F       		.byte	0x9f
 4578 00d5 38000000 		.4byte	.LVL21
 4579 00d9 3E000000 		.4byte	.LVL24
 4580 00dd 0100     		.2byte	0x1
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 135


 4581 00df 51       		.byte	0x51
 4582 00e0 3E000000 		.4byte	.LVL24
 4583 00e4 42000000 		.4byte	.LFE20
 4584 00e8 0400     		.2byte	0x4
 4585 00ea F3       		.byte	0xf3
 4586 00eb 01       		.uleb128 0x1
 4587 00ec 51       		.byte	0x51
 4588 00ed 9F       		.byte	0x9f
 4589 00ee 00000000 		.4byte	0
 4590 00f2 00000000 		.4byte	0
 4591              	.LLST5:
 4592 00f6 24000000 		.4byte	.LVL16
 4593 00fa 28000000 		.4byte	.LVL17
 4594 00fe 0200     		.2byte	0x2
 4595 0100 30       		.byte	0x30
 4596 0101 9F       		.byte	0x9f
 4597 0102 28000000 		.4byte	.LVL17
 4598 0106 38000000 		.4byte	.LVL21
 4599 010a 0100     		.2byte	0x1
 4600 010c 53       		.byte	0x53
 4601 010d 3E000000 		.4byte	.LVL24
 4602 0111 42000000 		.4byte	.LFE20
 4603 0115 0100     		.2byte	0x1
 4604 0117 53       		.byte	0x53
 4605 0118 00000000 		.4byte	0
 4606 011c 00000000 		.4byte	0
 4607              	.LLST6:
 4608 0120 10000000 		.4byte	.LVL12
 4609 0124 1C000000 		.4byte	.LVL13
 4610 0128 0100     		.2byte	0x1
 4611 012a 53       		.byte	0x53
 4612 012b 38000000 		.4byte	.LVL21
 4613 012f 3A000000 		.4byte	.LVL22
 4614 0133 0100     		.2byte	0x1
 4615 0135 53       		.byte	0x53
 4616 0136 3C000000 		.4byte	.LVL23
 4617 013a 3E000000 		.4byte	.LVL24
 4618 013e 0100     		.2byte	0x1
 4619 0140 53       		.byte	0x53
 4620 0141 00000000 		.4byte	0
 4621 0145 00000000 		.4byte	0
 4622              	.LLST7:
 4623 0149 24000000 		.4byte	.LVL16
 4624 014d 38000000 		.4byte	.LVL21
 4625 0151 0100     		.2byte	0x1
 4626 0153 50       		.byte	0x50
 4627 0154 00000000 		.4byte	0
 4628 0158 00000000 		.4byte	0
 4629              	.LLST8:
 4630 015c 06000000 		.4byte	.LVL25
 4631 0160 0A000000 		.4byte	.LVL26
 4632 0164 0100     		.2byte	0x1
 4633 0166 52       		.byte	0x52
 4634 0167 0A000000 		.4byte	.LVL26
 4635 016b 19000000 		.4byte	.LVL29-1
 4636 016f 0100     		.2byte	0x1
 4637 0171 53       		.byte	0x53
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 136


 4638 0172 1C000000 		.4byte	.LVL30
 4639 0176 20000000 		.4byte	.LVL31
 4640 017a 0100     		.2byte	0x1
 4641 017c 52       		.byte	0x52
 4642 017d 20000000 		.4byte	.LVL31
 4643 0181 25000000 		.4byte	.LVL32-1
 4644 0185 0100     		.2byte	0x1
 4645 0187 53       		.byte	0x53
 4646 0188 00000000 		.4byte	0
 4647 018c 00000000 		.4byte	0
 4648              	.LLST9:
 4649 0190 00000000 		.4byte	.LVL33
 4650 0194 41000000 		.4byte	.LVL35-1
 4651 0198 0100     		.2byte	0x1
 4652 019a 50       		.byte	0x50
 4653 019b 41000000 		.4byte	.LVL35-1
 4654 019f 4C000000 		.4byte	.LFE2
 4655 01a3 0400     		.2byte	0x4
 4656 01a5 F3       		.byte	0xf3
 4657 01a6 01       		.uleb128 0x1
 4658 01a7 50       		.byte	0x50
 4659 01a8 9F       		.byte	0x9f
 4660 01a9 00000000 		.4byte	0
 4661 01ad 00000000 		.4byte	0
 4662              	.LLST10:
 4663 01b1 3A000000 		.4byte	.LVL34
 4664 01b5 44000000 		.4byte	.LVL36
 4665 01b9 0100     		.2byte	0x1
 4666 01bb 54       		.byte	0x54
 4667 01bc 44000000 		.4byte	.LVL36
 4668 01c0 4C000000 		.4byte	.LFE2
 4669 01c4 0100     		.2byte	0x1
 4670 01c6 50       		.byte	0x50
 4671 01c7 00000000 		.4byte	0
 4672 01cb 00000000 		.4byte	0
 4673              	.LLST11:
 4674 01cf 02000000 		.4byte	.LVL37
 4675 01d3 22000000 		.4byte	.LVL39
 4676 01d7 0200     		.2byte	0x2
 4677 01d9 30       		.byte	0x30
 4678 01da 9F       		.byte	0x9f
 4679 01db 22000000 		.4byte	.LVL39
 4680 01df 2C000000 		.4byte	.LFE3
 4681 01e3 0100     		.2byte	0x1
 4682 01e5 50       		.byte	0x50
 4683 01e6 00000000 		.4byte	0
 4684 01ea 00000000 		.4byte	0
 4685              	.LLST12:
 4686 01ee 02000000 		.4byte	.LVL40
 4687 01f2 12000000 		.4byte	.LVL41
 4688 01f6 0300     		.2byte	0x3
 4689 01f8 09       		.byte	0x9
 4690 01f9 FF       		.byte	0xff
 4691 01fa 9F       		.byte	0x9f
 4692 01fb 12000000 		.4byte	.LVL41
 4693 01ff 14000000 		.4byte	.LVL42
 4694 0203 0100     		.2byte	0x1
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 137


 4695 0205 50       		.byte	0x50
 4696 0206 18000000 		.4byte	.LVL43
 4697 020a 31000000 		.4byte	.LVL44-1
 4698 020e 0100     		.2byte	0x1
 4699 0210 50       		.byte	0x50
 4700 0211 32000000 		.4byte	.LVL44
 4701 0215 3C000000 		.4byte	.LVL46
 4702 0219 0100     		.2byte	0x1
 4703 021b 50       		.byte	0x50
 4704 021c 3C000000 		.4byte	.LVL46
 4705 0220 3E000000 		.4byte	.LVL47
 4706 0224 0300     		.2byte	0x3
 4707 0226 09       		.byte	0x9
 4708 0227 FF       		.byte	0xff
 4709 0228 9F       		.byte	0x9f
 4710 0229 3E000000 		.4byte	.LVL47
 4711 022d 48000000 		.4byte	.LFE4
 4712 0231 0100     		.2byte	0x1
 4713 0233 50       		.byte	0x50
 4714 0234 00000000 		.4byte	0
 4715 0238 00000000 		.4byte	0
 4716              	.LLST13:
 4717 023c 12000000 		.4byte	.LVL41
 4718 0240 3C000000 		.4byte	.LVL46
 4719 0244 0100     		.2byte	0x1
 4720 0246 54       		.byte	0x54
 4721 0247 00000000 		.4byte	0
 4722 024b 00000000 		.4byte	0
 4723              	.LLST14:
 4724 024f 00000000 		.4byte	.LVL48
 4725 0253 06000000 		.4byte	.LVL49
 4726 0257 0100     		.2byte	0x1
 4727 0259 50       		.byte	0x50
 4728 025a 06000000 		.4byte	.LVL49
 4729 025e B4000000 		.4byte	.LFE6
 4730 0262 0400     		.2byte	0x4
 4731 0264 F3       		.byte	0xf3
 4732 0265 01       		.uleb128 0x1
 4733 0266 50       		.byte	0x50
 4734 0267 9F       		.byte	0x9f
 4735 0268 00000000 		.4byte	0
 4736 026c 00000000 		.4byte	0
 4737              	.LLST15:
 4738 0270 00000000 		.4byte	.LVL48
 4739 0274 0C000000 		.4byte	.LVL50
 4740 0278 0100     		.2byte	0x1
 4741 027a 51       		.byte	0x51
 4742 027b 0C000000 		.4byte	.LVL50
 4743 027f B4000000 		.4byte	.LFE6
 4744 0283 0400     		.2byte	0x4
 4745 0285 F3       		.byte	0xf3
 4746 0286 01       		.uleb128 0x1
 4747 0287 51       		.byte	0x51
 4748 0288 9F       		.byte	0x9f
 4749 0289 00000000 		.4byte	0
 4750 028d 00000000 		.4byte	0
 4751              	.LLST16:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 138


 4752 0291 00000000 		.4byte	.LVL48
 4753 0295 12000000 		.4byte	.LVL52
 4754 0299 0100     		.2byte	0x1
 4755 029b 52       		.byte	0x52
 4756 029c 12000000 		.4byte	.LVL52
 4757 02a0 AC000000 		.4byte	.LVL66
 4758 02a4 0100     		.2byte	0x1
 4759 02a6 56       		.byte	0x56
 4760 02a7 AC000000 		.4byte	.LVL66
 4761 02ab B4000000 		.4byte	.LFE6
 4762 02af 0400     		.2byte	0x4
 4763 02b1 F3       		.byte	0xf3
 4764 02b2 01       		.uleb128 0x1
 4765 02b3 52       		.byte	0x52
 4766 02b4 9F       		.byte	0x9f
 4767 02b5 00000000 		.4byte	0
 4768 02b9 00000000 		.4byte	0
 4769              	.LLST17:
 4770 02bd 0E000000 		.4byte	.LVL51
 4771 02c1 12000000 		.4byte	.LVL52
 4772 02c5 0200     		.2byte	0x2
 4773 02c7 30       		.byte	0x30
 4774 02c8 9F       		.byte	0x9f
 4775 02c9 12000000 		.4byte	.LVL52
 4776 02cd AC000000 		.4byte	.LVL65
 4777 02d1 0100     		.2byte	0x1
 4778 02d3 55       		.byte	0x55
 4779 02d4 00000000 		.4byte	0
 4780 02d8 00000000 		.4byte	0
 4781              	.LLST18:
 4782 02dc 16000000 		.4byte	.LVL53
 4783 02e0 35000000 		.4byte	.LVL54-1
 4784 02e4 0100     		.2byte	0x1
 4785 02e6 50       		.byte	0x50
 4786 02e7 4C000000 		.4byte	.LVL55
 4787 02eb 6B000000 		.4byte	.LVL56-1
 4788 02ef 0100     		.2byte	0x1
 4789 02f1 50       		.byte	0x50
 4790 02f2 72000000 		.4byte	.LVL57
 4791 02f6 83000000 		.4byte	.LVL58-1
 4792 02fa 0100     		.2byte	0x1
 4793 02fc 50       		.byte	0x50
 4794 02fd 92000000 		.4byte	.LVL60
 4795 0301 A3000000 		.4byte	.LVL61-1
 4796 0305 0100     		.2byte	0x1
 4797 0307 50       		.byte	0x50
 4798 0308 00000000 		.4byte	0
 4799 030c 00000000 		.4byte	0
 4800              	.LLST19:
 4801 0310 0E000000 		.4byte	.LVL51
 4802 0314 AC000000 		.4byte	.LVL64
 4803 0318 0100     		.2byte	0x1
 4804 031a 54       		.byte	0x54
 4805 031b 00000000 		.4byte	0
 4806 031f 00000000 		.4byte	0
 4807              	.LLST20:
 4808 0323 00000000 		.4byte	.LVL67
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 139


 4809 0327 13000000 		.4byte	.LVL68-1
 4810 032b 0100     		.2byte	0x1
 4811 032d 50       		.byte	0x50
 4812 032e 13000000 		.4byte	.LVL68-1
 4813 0332 16000000 		.4byte	.LVL69
 4814 0336 0400     		.2byte	0x4
 4815 0338 F3       		.byte	0xf3
 4816 0339 01       		.uleb128 0x1
 4817 033a 50       		.byte	0x50
 4818 033b 9F       		.byte	0x9f
 4819 033c 16000000 		.4byte	.LVL69
 4820 0340 25000000 		.4byte	.LVL70-1
 4821 0344 0100     		.2byte	0x1
 4822 0346 50       		.byte	0x50
 4823 0347 25000000 		.4byte	.LVL70-1
 4824 034b 5C000000 		.4byte	.LFE8
 4825 034f 0400     		.2byte	0x4
 4826 0351 F3       		.byte	0xf3
 4827 0352 01       		.uleb128 0x1
 4828 0353 50       		.byte	0x50
 4829 0354 9F       		.byte	0x9f
 4830 0355 00000000 		.4byte	0
 4831 0359 00000000 		.4byte	0
 4832              	.LLST21:
 4833 035d 08000000 		.4byte	.LVL74
 4834 0361 40000000 		.4byte	.LFE9
 4835 0365 0100     		.2byte	0x1
 4836 0367 53       		.byte	0x53
 4837 0368 00000000 		.4byte	0
 4838 036c 00000000 		.4byte	0
 4839              	.LLST22:
 4840 0370 02000000 		.4byte	.LVL73
 4841 0374 08000000 		.4byte	.LVL74
 4842 0378 0200     		.2byte	0x2
 4843 037a 30       		.byte	0x30
 4844 037b 9F       		.byte	0x9f
 4845 037c 08000000 		.4byte	.LVL74
 4846 0380 40000000 		.4byte	.LFE9
 4847 0384 0100     		.2byte	0x1
 4848 0386 50       		.byte	0x50
 4849 0387 00000000 		.4byte	0
 4850 038b 00000000 		.4byte	0
 4851              	.LLST23:
 4852 038f 0C000000 		.4byte	.LVL75
 4853 0393 1E000000 		.4byte	.LVL78
 4854 0397 0100     		.2byte	0x1
 4855 0399 52       		.byte	0x52
 4856 039a 20000000 		.4byte	.LVL79
 4857 039e 26000000 		.4byte	.LVL80
 4858 03a2 0100     		.2byte	0x1
 4859 03a4 51       		.byte	0x51
 4860 03a5 26000000 		.4byte	.LVL80
 4861 03a9 36000000 		.4byte	.LVL84
 4862 03ad 0100     		.2byte	0x1
 4863 03af 52       		.byte	0x52
 4864 03b0 00000000 		.4byte	0
 4865 03b4 00000000 		.4byte	0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 140


 4866              	.LLST24:
 4867 03b8 16000000 		.4byte	.LVL86
 4868 03bc 29000000 		.4byte	.LVL87-1
 4869 03c0 0100     		.2byte	0x1
 4870 03c2 50       		.byte	0x50
 4871 03c3 29000000 		.4byte	.LVL87-1
 4872 03c7 2C000000 		.4byte	.LVL88
 4873 03cb 0100     		.2byte	0x1
 4874 03cd 54       		.byte	0x54
 4875 03ce 2C000000 		.4byte	.LVL88
 4876 03d2 54000000 		.4byte	.LVL89
 4877 03d6 0100     		.2byte	0x1
 4878 03d8 50       		.byte	0x50
 4879 03d9 54000000 		.4byte	.LVL89
 4880 03dd 58000000 		.4byte	.LVL90
 4881 03e1 0200     		.2byte	0x2
 4882 03e3 30       		.byte	0x30
 4883 03e4 9F       		.byte	0x9f
 4884 03e5 58000000 		.4byte	.LVL90
 4885 03e9 6A000000 		.4byte	.LVL91
 4886 03ed 0100     		.2byte	0x1
 4887 03ef 50       		.byte	0x50
 4888 03f0 6A000000 		.4byte	.LVL91
 4889 03f4 6E000000 		.4byte	.LVL92
 4890 03f8 0100     		.2byte	0x1
 4891 03fa 54       		.byte	0x54
 4892 03fb 00000000 		.4byte	0
 4893 03ff 00000000 		.4byte	0
 4894              	.LLST25:
 4895 0403 00000000 		.4byte	.LVL93
 4896 0407 05000000 		.4byte	.LVL94-1
 4897 040b 0100     		.2byte	0x1
 4898 040d 50       		.byte	0x50
 4899 040e 05000000 		.4byte	.LVL94-1
 4900 0412 08000000 		.4byte	.LFE11
 4901 0416 0400     		.2byte	0x4
 4902 0418 F3       		.byte	0xf3
 4903 0419 01       		.uleb128 0x1
 4904 041a 50       		.byte	0x50
 4905 041b 9F       		.byte	0x9f
 4906 041c 00000000 		.4byte	0
 4907 0420 00000000 		.4byte	0
 4908              	.LLST26:
 4909 0424 00000000 		.4byte	.LVL95
 4910 0428 08000000 		.4byte	.LVL96
 4911 042c 0100     		.2byte	0x1
 4912 042e 50       		.byte	0x50
 4913 042f 08000000 		.4byte	.LVL96
 4914 0433 0A000000 		.4byte	.LVL97
 4915 0437 0300     		.2byte	0x3
 4916 0439 70       		.byte	0x70
 4917 043a 01       		.sleb128 1
 4918 043b 9F       		.byte	0x9f
 4919 043c 0A000000 		.4byte	.LVL97
 4920 0440 30000000 		.4byte	.LFE12
 4921 0444 0400     		.2byte	0x4
 4922 0446 F3       		.byte	0xf3
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 141


 4923 0447 01       		.uleb128 0x1
 4924 0448 50       		.byte	0x50
 4925 0449 9F       		.byte	0x9f
 4926 044a 00000000 		.4byte	0
 4927 044e 00000000 		.4byte	0
 4928              	.LLST27:
 4929 0452 00000000 		.4byte	.LVL98
 4930 0456 0A000000 		.4byte	.LVL102
 4931 045a 0100     		.2byte	0x1
 4932 045c 50       		.byte	0x50
 4933 045d 0A000000 		.4byte	.LVL102
 4934 0461 0C000000 		.4byte	.LVL103
 4935 0465 0300     		.2byte	0x3
 4936 0467 70       		.byte	0x70
 4937 0468 01       		.sleb128 1
 4938 0469 9F       		.byte	0x9f
 4939 046a 0C000000 		.4byte	.LVL103
 4940 046e 14000000 		.4byte	.LFE13
 4941 0472 0400     		.2byte	0x4
 4942 0474 F3       		.byte	0xf3
 4943 0475 01       		.uleb128 0x1
 4944 0476 50       		.byte	0x50
 4945 0477 9F       		.byte	0x9f
 4946 0478 00000000 		.4byte	0
 4947 047c 00000000 		.4byte	0
 4948              	.LLST28:
 4949 0480 04000000 		.4byte	.LVL99
 4950 0484 06000000 		.4byte	.LVL100
 4951 0488 0100     		.2byte	0x1
 4952 048a 53       		.byte	0x53
 4953 048b 08000000 		.4byte	.LVL101
 4954 048f 0C000000 		.4byte	.LVL103
 4955 0493 0100     		.2byte	0x1
 4956 0495 53       		.byte	0x53
 4957 0496 0C000000 		.4byte	.LVL103
 4958 049a 14000000 		.4byte	.LFE13
 4959 049e 0100     		.2byte	0x1
 4960 04a0 50       		.byte	0x50
 4961 04a1 00000000 		.4byte	0
 4962 04a5 00000000 		.4byte	0
 4963              	.LLST29:
 4964 04a9 00000000 		.4byte	.LVL104
 4965 04ad 06000000 		.4byte	.LVL105
 4966 04b1 0100     		.2byte	0x1
 4967 04b3 50       		.byte	0x50
 4968 04b4 06000000 		.4byte	.LVL105
 4969 04b8 10000000 		.4byte	.LVL108
 4970 04bc 0100     		.2byte	0x1
 4971 04be 54       		.byte	0x54
 4972 04bf 10000000 		.4byte	.LVL108
 4973 04c3 12000000 		.4byte	.LFE14
 4974 04c7 0400     		.2byte	0x4
 4975 04c9 F3       		.byte	0xf3
 4976 04ca 01       		.uleb128 0x1
 4977 04cb 50       		.byte	0x50
 4978 04cc 9F       		.byte	0x9f
 4979 04cd 00000000 		.4byte	0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 142


 4980 04d1 00000000 		.4byte	0
 4981              	.LLST30:
 4982 04d5 00000000 		.4byte	.LVL104
 4983 04d9 09000000 		.4byte	.LVL106-1
 4984 04dd 0100     		.2byte	0x1
 4985 04df 51       		.byte	0x51
 4986 04e0 09000000 		.4byte	.LVL106-1
 4987 04e4 12000000 		.4byte	.LFE14
 4988 04e8 0400     		.2byte	0x4
 4989 04ea F3       		.byte	0xf3
 4990 04eb 01       		.uleb128 0x1
 4991 04ec 51       		.byte	0x51
 4992 04ed 9F       		.byte	0x9f
 4993 04ee 00000000 		.4byte	0
 4994 04f2 00000000 		.4byte	0
 4995              	.LLST31:
 4996 04f6 00000000 		.4byte	.LVL109
 4997 04fa 12000000 		.4byte	.LVL111
 4998 04fe 0100     		.2byte	0x1
 4999 0500 50       		.byte	0x50
 5000 0501 12000000 		.4byte	.LVL111
 5001 0505 3E000000 		.4byte	.LVL117
 5002 0509 0100     		.2byte	0x1
 5003 050b 54       		.byte	0x54
 5004 050c 3E000000 		.4byte	.LVL117
 5005 0510 44000000 		.4byte	.LFE15
 5006 0514 0400     		.2byte	0x4
 5007 0516 F3       		.byte	0xf3
 5008 0517 01       		.uleb128 0x1
 5009 0518 50       		.byte	0x50
 5010 0519 9F       		.byte	0x9f
 5011 051a 00000000 		.4byte	0
 5012 051e 00000000 		.4byte	0
 5013              	.LLST32:
 5014 0522 04000000 		.4byte	.LVL110
 5015 0526 28000000 		.4byte	.LVL112
 5016 052a 0200     		.2byte	0x2
 5017 052c 30       		.byte	0x30
 5018 052d 9F       		.byte	0x9f
 5019 052e 28000000 		.4byte	.LVL112
 5020 0532 36000000 		.4byte	.LVL114
 5021 0536 0100     		.2byte	0x1
 5022 0538 55       		.byte	0x55
 5023 0539 36000000 		.4byte	.LVL114
 5024 053d 38000000 		.4byte	.LVL115
 5025 0541 0100     		.2byte	0x1
 5026 0543 50       		.byte	0x50
 5027 0544 38000000 		.4byte	.LVL115
 5028 0548 3E000000 		.4byte	.LVL118
 5029 054c 0100     		.2byte	0x1
 5030 054e 55       		.byte	0x55
 5031 054f 3E000000 		.4byte	.LVL118
 5032 0553 44000000 		.4byte	.LFE15
 5033 0557 0100     		.2byte	0x1
 5034 0559 50       		.byte	0x50
 5035 055a 00000000 		.4byte	0
 5036 055e 00000000 		.4byte	0
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 143


 5037              	.LLST33:
 5038 0562 02000000 		.4byte	.LVL119
 5039 0566 08000000 		.4byte	.LVL120
 5040 056a 0200     		.2byte	0x2
 5041 056c 30       		.byte	0x30
 5042 056d 9F       		.byte	0x9f
 5043 056e 08000000 		.4byte	.LVL120
 5044 0572 18000000 		.4byte	.LVL125
 5045 0576 0100     		.2byte	0x1
 5046 0578 55       		.byte	0x55
 5047 0579 18000000 		.4byte	.LVL125
 5048 057d 1A000000 		.4byte	.LFE16
 5049 0581 0100     		.2byte	0x1
 5050 0583 50       		.byte	0x50
 5051 0584 00000000 		.4byte	0
 5052 0588 00000000 		.4byte	0
 5053              	.LLST34:
 5054 058c 02000000 		.4byte	.LVL119
 5055 0590 08000000 		.4byte	.LVL120
 5056 0594 0200     		.2byte	0x2
 5057 0596 30       		.byte	0x30
 5058 0597 9F       		.byte	0x9f
 5059 0598 08000000 		.4byte	.LVL120
 5060 059c 18000000 		.4byte	.LVL124
 5061 05a0 0100     		.2byte	0x1
 5062 05a2 54       		.byte	0x54
 5063 05a3 00000000 		.4byte	0
 5064 05a7 00000000 		.4byte	0
 5065              	.LLST35:
 5066 05ab 02000000 		.4byte	.LVL126
 5067 05af 06000000 		.4byte	.LVL127
 5068 05b3 0200     		.2byte	0x2
 5069 05b5 30       		.byte	0x30
 5070 05b6 9F       		.byte	0x9f
 5071 05b7 06000000 		.4byte	.LVL127
 5072 05bb 2C000000 		.4byte	.LVL133
 5073 05bf 0100     		.2byte	0x1
 5074 05c1 55       		.byte	0x55
 5075 05c2 00000000 		.4byte	0
 5076 05c6 00000000 		.4byte	0
 5077              	.LLST36:
 5078 05ca 0C000000 		.4byte	.LVL128
 5079 05ce 10000000 		.4byte	.LVL129
 5080 05d2 0200     		.2byte	0x2
 5081 05d4 30       		.byte	0x30
 5082 05d5 9F       		.byte	0x9f
 5083 05d6 10000000 		.4byte	.LVL129
 5084 05da 28000000 		.4byte	.LVL132
 5085 05de 0100     		.2byte	0x1
 5086 05e0 54       		.byte	0x54
 5087 05e1 00000000 		.4byte	0
 5088 05e5 00000000 		.4byte	0
 5089              	.LLST37:
 5090 05e9 0C000000 		.4byte	.LVL128
 5091 05ed 28000000 		.4byte	.LVL132
 5092 05f1 0100     		.2byte	0x1
 5093 05f3 56       		.byte	0x56
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 144


 5094 05f4 00000000 		.4byte	0
 5095 05f8 00000000 		.4byte	0
 5096              	.LLST38:
 5097 05fc 00000000 		.4byte	.LVL134
 5098 0600 02000000 		.4byte	.LVL135
 5099 0604 0100     		.2byte	0x1
 5100 0606 50       		.byte	0x50
 5101 0607 02000000 		.4byte	.LVL135
 5102 060b 10000000 		.4byte	.LFE22
 5103 060f 0400     		.2byte	0x4
 5104 0611 F3       		.byte	0xf3
 5105 0612 01       		.uleb128 0x1
 5106 0613 50       		.byte	0x50
 5107 0614 9F       		.byte	0x9f
 5108 0615 00000000 		.4byte	0
 5109 0619 00000000 		.4byte	0
 5110              	.LLST39:
 5111 061d 00000000 		.4byte	.LVL138
 5112 0621 02000000 		.4byte	.LVL139
 5113 0625 0100     		.2byte	0x1
 5114 0627 50       		.byte	0x50
 5115 0628 02000000 		.4byte	.LVL139
 5116 062c 10000000 		.4byte	.LFE23
 5117 0630 0400     		.2byte	0x4
 5118 0632 F3       		.byte	0xf3
 5119 0633 01       		.uleb128 0x1
 5120 0634 50       		.byte	0x50
 5121 0635 9F       		.byte	0x9f
 5122 0636 00000000 		.4byte	0
 5123 063a 00000000 		.4byte	0
 5124              	.LLST40:
 5125 063e 00000000 		.4byte	.LVL141
 5126 0642 12000000 		.4byte	.LVL142
 5127 0646 0100     		.2byte	0x1
 5128 0648 50       		.byte	0x50
 5129 0649 12000000 		.4byte	.LVL142
 5130 064d 1A000000 		.4byte	.LVL143
 5131 0651 0400     		.2byte	0x4
 5132 0653 F3       		.byte	0xf3
 5133 0654 01       		.uleb128 0x1
 5134 0655 50       		.byte	0x50
 5135 0656 9F       		.byte	0x9f
 5136 0657 1A000000 		.4byte	.LVL143
 5137 065b 1C000000 		.4byte	.LVL144
 5138 065f 0100     		.2byte	0x1
 5139 0661 50       		.byte	0x50
 5140 0662 1C000000 		.4byte	.LVL144
 5141 0666 24000000 		.4byte	.LFE24
 5142 066a 0400     		.2byte	0x4
 5143 066c F3       		.byte	0xf3
 5144 066d 01       		.uleb128 0x1
 5145 066e 50       		.byte	0x50
 5146 066f 9F       		.byte	0x9f
 5147 0670 00000000 		.4byte	0
 5148 0674 00000000 		.4byte	0
 5149              	.LLST41:
 5150 0678 20000000 		.4byte	.LVL145
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 145


 5151 067c 22000000 		.4byte	.LVL146
 5152 0680 0100     		.2byte	0x1
 5153 0682 50       		.byte	0x50
 5154 0683 00000000 		.4byte	0
 5155 0687 00000000 		.4byte	0
 5156              	.LLST42:
 5157 068b 00000000 		.4byte	.LVL147
 5158 068f 07000000 		.4byte	.LVL148-1
 5159 0693 0100     		.2byte	0x1
 5160 0695 50       		.byte	0x50
 5161 0696 07000000 		.4byte	.LVL148-1
 5162 069a 3A000000 		.4byte	.LFE18
 5163 069e 0400     		.2byte	0x4
 5164 06a0 F3       		.byte	0xf3
 5165 06a1 01       		.uleb128 0x1
 5166 06a2 50       		.byte	0x50
 5167 06a3 9F       		.byte	0x9f
 5168 06a4 00000000 		.4byte	0
 5169 06a8 00000000 		.4byte	0
 5170              	.LLST43:
 5171 06ac 00000000 		.4byte	.LVL147
 5172 06b0 07000000 		.4byte	.LVL148-1
 5173 06b4 0100     		.2byte	0x1
 5174 06b6 51       		.byte	0x51
 5175 06b7 07000000 		.4byte	.LVL148-1
 5176 06bb 38000000 		.4byte	.LVL162
 5177 06bf 0100     		.2byte	0x1
 5178 06c1 56       		.byte	0x56
 5179 06c2 38000000 		.4byte	.LVL162
 5180 06c6 3A000000 		.4byte	.LFE18
 5181 06ca 0400     		.2byte	0x4
 5182 06cc F3       		.byte	0xf3
 5183 06cd 01       		.uleb128 0x1
 5184 06ce 51       		.byte	0x51
 5185 06cf 9F       		.byte	0x9f
 5186 06d0 00000000 		.4byte	0
 5187 06d4 00000000 		.4byte	0
 5188              	.LLST44:
 5189 06d8 1C000000 		.4byte	.LVL154
 5190 06dc 20000000 		.4byte	.LVL155
 5191 06e0 0100     		.2byte	0x1
 5192 06e2 50       		.byte	0x50
 5193 06e3 20000000 		.4byte	.LVL155
 5194 06e7 38000000 		.4byte	.LVL160
 5195 06eb 0100     		.2byte	0x1
 5196 06ed 54       		.byte	0x54
 5197 06ee 00000000 		.4byte	0
 5198 06f2 00000000 		.4byte	0
 5199              	.LLST45:
 5200 06f6 30000000 		.4byte	.LVL158
 5201 06fa 32000000 		.4byte	.LVL159
 5202 06fe 0100     		.2byte	0x1
 5203 0700 50       		.byte	0x50
 5204 0701 00000000 		.4byte	0
 5205 0705 00000000 		.4byte	0
 5206              	.LLST46:
 5207 0709 14000000 		.4byte	.LVL151
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 146


 5208 070d 16000000 		.4byte	.LVL152
 5209 0711 0100     		.2byte	0x1
 5210 0713 50       		.byte	0x50
 5211 0714 16000000 		.4byte	.LVL152
 5212 0718 19000000 		.4byte	.LVL153-1
 5213 071c 0100     		.2byte	0x1
 5214 071e 51       		.byte	0x51
 5215 071f 00000000 		.4byte	0
 5216 0723 00000000 		.4byte	0
 5217              	.LLST47:
 5218 0727 0A000000 		.4byte	.LVL149
 5219 072b 11000000 		.4byte	.LVL150-1
 5220 072f 0100     		.2byte	0x1
 5221 0731 50       		.byte	0x50
 5222 0732 11000000 		.4byte	.LVL150-1
 5223 0736 38000000 		.4byte	.LVL161
 5224 073a 0100     		.2byte	0x1
 5225 073c 55       		.byte	0x55
 5226 073d 00000000 		.4byte	0
 5227 0741 00000000 		.4byte	0
 5228              	.LLST48:
 5229 0745 02000000 		.4byte	.LVL163
 5230 0749 06000000 		.4byte	.LVL164
 5231 074d 0200     		.2byte	0x2
 5232 074f 30       		.byte	0x30
 5233 0750 9F       		.byte	0x9f
 5234 0751 06000000 		.4byte	.LVL164
 5235 0755 20000000 		.4byte	.LVL169
 5236 0759 0100     		.2byte	0x1
 5237 075b 54       		.byte	0x54
 5238 075c 00000000 		.4byte	0
 5239 0760 00000000 		.4byte	0
 5240              	.LLST49:
 5241 0764 0E000000 		.4byte	.LVL165
 5242 0768 13000000 		.4byte	.LVL166-1
 5243 076c 0100     		.2byte	0x1
 5244 076e 51       		.byte	0x51
 5245 076f 00000000 		.4byte	0
 5246 0773 00000000 		.4byte	0
 5247              	.LLST50:
 5248 0777 0A000000 		.4byte	.LVL175
 5249 077b 0E000000 		.4byte	.LVL176
 5250 077f 0100     		.2byte	0x1
 5251 0781 51       		.byte	0x51
 5252 0782 0E000000 		.4byte	.LVL176
 5253 0786 13000000 		.4byte	.LVL177-1
 5254 078a 0100     		.2byte	0x1
 5255 078c 53       		.byte	0x53
 5256 078d 1C000000 		.4byte	.LVL179
 5257 0791 25000000 		.4byte	.LVL181-1
 5258 0795 0100     		.2byte	0x1
 5259 0797 53       		.byte	0x53
 5260 0798 2E000000 		.4byte	.LVL183
 5261 079c 3D000000 		.4byte	.LVL186-1
 5262 07a0 0100     		.2byte	0x1
 5263 07a2 53       		.byte	0x53
 5264 07a3 4A000000 		.4byte	.LVL189
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 147


 5265 07a7 4C000000 		.4byte	.LVL190
 5266 07ab 0100     		.2byte	0x1
 5267 07ad 53       		.byte	0x53
 5268 07ae 4C000000 		.4byte	.LVL190
 5269 07b2 52000000 		.4byte	.LVL192
 5270 07b6 0100     		.2byte	0x1
 5271 07b8 55       		.byte	0x55
 5272 07b9 00000000 		.4byte	0
 5273 07bd 00000000 		.4byte	0
 5274              	.LLST51:
 5275 07c1 06000000 		.4byte	.LVL174
 5276 07c5 13000000 		.4byte	.LVL177-1
 5277 07c9 0100     		.2byte	0x1
 5278 07cb 50       		.byte	0x50
 5279 07cc 18000000 		.4byte	.LVL178
 5280 07d0 25000000 		.4byte	.LVL181-1
 5281 07d4 0100     		.2byte	0x1
 5282 07d6 50       		.byte	0x50
 5283 07d7 2A000000 		.4byte	.LVL182
 5284 07db 3D000000 		.4byte	.LVL186-1
 5285 07df 0100     		.2byte	0x1
 5286 07e1 50       		.byte	0x50
 5287 07e2 48000000 		.4byte	.LVL188
 5288 07e6 51000000 		.4byte	.LVL191-1
 5289 07ea 0100     		.2byte	0x1
 5290 07ec 50       		.byte	0x50
 5291 07ed 00000000 		.4byte	0
 5292 07f1 00000000 		.4byte	0
 5293              		.section	.debug_aranges,"",%progbits
 5294 0000 DC000000 		.4byte	0xdc
 5295 0004 0200     		.2byte	0x2
 5296 0006 00000000 		.4byte	.Ldebug_info0
 5297 000a 04       		.byte	0x4
 5298 000b 00       		.byte	0
 5299 000c 0000     		.2byte	0
 5300 000e 0000     		.2byte	0
 5301 0010 00000000 		.4byte	.LFB19
 5302 0014 84000000 		.4byte	.LFE19-.LFB19
 5303 0018 00000000 		.4byte	.LFB20
 5304 001c 42000000 		.4byte	.LFE20-.LFB20
 5305 0020 00000000 		.4byte	.LFB7
 5306 0024 38000000 		.4byte	.LFE7-.LFB7
 5307 0028 00000000 		.4byte	.LFB1
 5308 002c 10000000 		.4byte	.LFE1-.LFB1
 5309 0030 00000000 		.4byte	.LFB2
 5310 0034 4C000000 		.4byte	.LFE2-.LFB2
 5311 0038 00000000 		.4byte	.LFB3
 5312 003c 2C000000 		.4byte	.LFE3-.LFB3
 5313 0040 00000000 		.4byte	.LFB4
 5314 0044 48000000 		.4byte	.LFE4-.LFB4
 5315 0048 00000000 		.4byte	.LFB6
 5316 004c B4000000 		.4byte	.LFE6-.LFB6
 5317 0050 00000000 		.4byte	.LFB8
 5318 0054 5C000000 		.4byte	.LFE8-.LFB8
 5319 0058 00000000 		.4byte	.LFB9
 5320 005c 40000000 		.4byte	.LFE9-.LFB9
 5321 0060 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 148


 5322 0064 78000000 		.4byte	.LFE10-.LFB10
 5323 0068 00000000 		.4byte	.LFB11
 5324 006c 08000000 		.4byte	.LFE11-.LFB11
 5325 0070 00000000 		.4byte	.LFB12
 5326 0074 30000000 		.4byte	.LFE12-.LFB12
 5327 0078 00000000 		.4byte	.LFB13
 5328 007c 14000000 		.4byte	.LFE13-.LFB13
 5329 0080 00000000 		.4byte	.LFB14
 5330 0084 12000000 		.4byte	.LFE14-.LFB14
 5331 0088 00000000 		.4byte	.LFB15
 5332 008c 44000000 		.4byte	.LFE15-.LFB15
 5333 0090 00000000 		.4byte	.LFB16
 5334 0094 1A000000 		.4byte	.LFE16-.LFB16
 5335 0098 00000000 		.4byte	.LFB21
 5336 009c 34000000 		.4byte	.LFE21-.LFB21
 5337 00a0 00000000 		.4byte	.LFB22
 5338 00a4 10000000 		.4byte	.LFE22-.LFB22
 5339 00a8 00000000 		.4byte	.LFB23
 5340 00ac 10000000 		.4byte	.LFE23-.LFB23
 5341 00b0 00000000 		.4byte	.LFB24
 5342 00b4 24000000 		.4byte	.LFE24-.LFB24
 5343 00b8 00000000 		.4byte	.LFB18
 5344 00bc 3A000000 		.4byte	.LFE18-.LFB18
 5345 00c0 00000000 		.4byte	.LFB17
 5346 00c4 28000000 		.4byte	.LFE17-.LFB17
 5347 00c8 00000000 		.4byte	.LFB5
 5348 00cc 14000000 		.4byte	.LFE5-.LFB5
 5349 00d0 00000000 		.4byte	.LFB25
 5350 00d4 68000000 		.4byte	.LFE25-.LFB25
 5351 00d8 00000000 		.4byte	0
 5352 00dc 00000000 		.4byte	0
 5353              		.section	.debug_ranges,"",%progbits
 5354              	.Ldebug_ranges0:
 5355 0000 00000000 		.4byte	.LFB19
 5356 0004 84000000 		.4byte	.LFE19
 5357 0008 00000000 		.4byte	.LFB20
 5358 000c 42000000 		.4byte	.LFE20
 5359 0010 00000000 		.4byte	.LFB7
 5360 0014 38000000 		.4byte	.LFE7
 5361 0018 00000000 		.4byte	.LFB1
 5362 001c 10000000 		.4byte	.LFE1
 5363 0020 00000000 		.4byte	.LFB2
 5364 0024 4C000000 		.4byte	.LFE2
 5365 0028 00000000 		.4byte	.LFB3
 5366 002c 2C000000 		.4byte	.LFE3
 5367 0030 00000000 		.4byte	.LFB4
 5368 0034 48000000 		.4byte	.LFE4
 5369 0038 00000000 		.4byte	.LFB6
 5370 003c B4000000 		.4byte	.LFE6
 5371 0040 00000000 		.4byte	.LFB8
 5372 0044 5C000000 		.4byte	.LFE8
 5373 0048 00000000 		.4byte	.LFB9
 5374 004c 40000000 		.4byte	.LFE9
 5375 0050 00000000 		.4byte	.LFB10
 5376 0054 78000000 		.4byte	.LFE10
 5377 0058 00000000 		.4byte	.LFB11
 5378 005c 08000000 		.4byte	.LFE11
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 149


 5379 0060 00000000 		.4byte	.LFB12
 5380 0064 30000000 		.4byte	.LFE12
 5381 0068 00000000 		.4byte	.LFB13
 5382 006c 14000000 		.4byte	.LFE13
 5383 0070 00000000 		.4byte	.LFB14
 5384 0074 12000000 		.4byte	.LFE14
 5385 0078 00000000 		.4byte	.LFB15
 5386 007c 44000000 		.4byte	.LFE15
 5387 0080 00000000 		.4byte	.LFB16
 5388 0084 1A000000 		.4byte	.LFE16
 5389 0088 00000000 		.4byte	.LFB21
 5390 008c 34000000 		.4byte	.LFE21
 5391 0090 00000000 		.4byte	.LFB22
 5392 0094 10000000 		.4byte	.LFE22
 5393 0098 00000000 		.4byte	.LFB23
 5394 009c 10000000 		.4byte	.LFE23
 5395 00a0 00000000 		.4byte	.LFB24
 5396 00a4 24000000 		.4byte	.LFE24
 5397 00a8 00000000 		.4byte	.LFB18
 5398 00ac 3A000000 		.4byte	.LFE18
 5399 00b0 00000000 		.4byte	.LFB17
 5400 00b4 28000000 		.4byte	.LFE17
 5401 00b8 00000000 		.4byte	.LFB5
 5402 00bc 14000000 		.4byte	.LFE5
 5403 00c0 00000000 		.4byte	.LFB25
 5404 00c4 68000000 		.4byte	.LFE25
 5405 00c8 00000000 		.4byte	0
 5406 00cc 00000000 		.4byte	0
 5407              		.section	.debug_line,"",%progbits
 5408              	.Ldebug_line0:
 5409 0000 66040000 		.section	.debug_str,"MS",%progbits,1
 5409      0200D100 
 5409      00000201 
 5409      FB0E0D00 
 5409      01010101 
 5410              	.LASF165:
 5411 0000 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 5411      656E7365 
 5411      5F537343 
 5411      53444765 
 5411      74436F6C 
 5412              	.LASF139:
 5413 0022 73656E73 		.ascii	"sensorElement\000"
 5413      6F72456C 
 5413      656D656E 
 5413      7400
 5414              	.LASF136:
 5415 0030 7363616E 		.ascii	"scanStatus\000"
 5415      53746174 
 5415      757300
 5416              	.LASF173:
 5417 003b 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 5417      656E7365 
 5417      5F537343 
 5417      53444469 
 5417      7361626C 
 5418              	.LASF148:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 150


 5419 0055 43617053 		.ascii	"CapSense_SsSetIOsInDefaultState\000"
 5419      656E7365 
 5419      5F537353 
 5419      6574494F 
 5419      73496E44 
 5420              	.LASF207:
 5421 0075 433A5C47 		.ascii	"C:\\GEA_Cypress_proj\\NGFL\\Tuning_SW\\_old\\NGFLUI"
 5421      45415F43 
 5421      79707265 
 5421      73735F70 
 5421      726F6A5C 
 5422 00a3 2E637977 		.ascii	".cywrk.Archive01\\NGFLUI\\NGFLUI_Vikram.cydsn\000"
 5422      726B2E41 
 5422      72636869 
 5422      76653031 
 5422      5C4E4746 
 5423              	.LASF178:
 5424 00cf 43617053 		.ascii	"CapSense_BistDischargeExtCapacitors\000"
 5424      656E7365 
 5424      5F426973 
 5424      74446973 
 5424      63686172 
 5425              	.LASF182:
 5426 00f3 43617053 		.ascii	"CapSense_widgetIndex\000"
 5426      656E7365 
 5426      5F776964 
 5426      67657449 
 5426      6E646578 
 5427              	.LASF201:
 5428 0108 43617053 		.ascii	"CapSense_DsUpdateWidgetCrc\000"
 5428      656E7365 
 5428      5F447355 
 5428      70646174 
 5428      65576964 
 5429              	.LASF93:
 5430 0123 736E7254 		.ascii	"snrTestWidgetId\000"
 5430      65737457 
 5430      69646765 
 5430      74496400 
 5431              	.LASF20:
 5432 0133 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 5432      656E7365 
 5432      5F554E44 
 5432      4546494E 
 5432      45445F45 
 5433              	.LASF8:
 5434 0148 756E7369 		.ascii	"unsigned int\000"
 5434      676E6564 
 5434      20696E74 
 5434      00
 5435              	.LASF80:
 5436 0155 7363616E 		.ascii	"scanCounter\000"
 5436      436F756E 
 5436      74657200 
 5437              	.LASF78:
 5438 0161 6877436C 		.ascii	"hwClock\000"
 5438      6F636B00 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 151


 5439              	.LASF177:
 5440 0169 696E6974 		.ascii	"initStatus\000"
 5440      53746174 
 5440      757300
 5441              	.LASF150:
 5442 0174 72656756 		.ascii	"regValue\000"
 5442      616C7565 
 5442      00
 5443              	.LASF143:
 5444 017d 696E7465 		.ascii	"interruptState\000"
 5444      72727570 
 5444      74537461 
 5444      746500
 5445              	.LASF100:
 5446 018c 70633250 		.ascii	"pc2Ptr\000"
 5446      747200
 5447              	.LASF128:
 5448 0193 6C667372 		.ascii	"lfsrScale\000"
 5448      5363616C 
 5448      6500
 5449              	.LASF39:
 5450 019d 6B657930 		.ascii	"key00\000"
 5450      3000
 5451              	.LASF40:
 5452 01a3 6B657930 		.ascii	"key01\000"
 5452      3100
 5453              	.LASF41:
 5454 01a9 6B657930 		.ascii	"key02\000"
 5454      3200
 5455              	.LASF42:
 5456 01af 6B657930 		.ascii	"key03\000"
 5456      3300
 5457              	.LASF43:
 5458 01b5 6B657930 		.ascii	"key04\000"
 5458      3400
 5459              	.LASF44:
 5460 01bb 6B657930 		.ascii	"key05\000"
 5460      3500
 5461              	.LASF45:
 5462 01c1 6B657930 		.ascii	"key06\000"
 5462      3600
 5463              	.LASF46:
 5464 01c7 6B657930 		.ascii	"key07\000"
 5464      3700
 5465              	.LASF47:
 5466 01cd 6B657930 		.ascii	"key08\000"
 5466      3800
 5467              	.LASF48:
 5468 01d3 6B657930 		.ascii	"key09\000"
 5468      3900
 5469              	.LASF129:
 5470 01d9 6C667372 		.ascii	"lfsrRange\000"
 5470      52616E67 
 5470      6500
 5471              	.LASF147:
 5472 01e3 6D6F6465 		.ascii	"mode\000"
 5472      00
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 152


 5473              	.LASF208:
 5474 01e8 43617053 		.ascii	"CapSense_IsBusy\000"
 5474      656E7365 
 5474      5F497342 
 5474      75737900 
 5475              	.LASF75:
 5476 01f8 43617053 		.ascii	"CapSense_RAM_SNS_CP_STRUCT\000"
 5476      656E7365 
 5476      5F52414D 
 5476      5F534E53 
 5476      5F43505F 
 5477              	.LASF155:
 5478 0213 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 5478      656E7365 
 5478      5F537353 
 5478      65744D6F 
 5478      64436C6B 
 5479              	.LASF105:
 5480 0234 6873696F 		.ascii	"hsiomShift\000"
 5480      6D536869 
 5480      667400
 5481              	.LASF52:
 5482 023f 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 5482      656E7365 
 5482      5F52414D 
 5482      5F57445F 
 5482      4C495354 
 5483              	.LASF141:
 5484 025b 656C7464 		.ascii	"eltdNum\000"
 5484      4E756D00 
 5485              	.LASF49:
 5486 0263 6B657931 		.ascii	"key10\000"
 5486      3000
 5487              	.LASF50:
 5488 0269 6B657931 		.ascii	"key11\000"
 5488      3100
 5489              	.LASF51:
 5490 026f 6B657931 		.ascii	"key12\000"
 5490      3200
 5491              	.LASF167:
 5492 0275 70747257 		.ascii	"ptrWdgt\000"
 5492      64677400 
 5493              	.LASF174:
 5494 027d 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 5494      656E7365 
 5494      5F537353 
 5494      65745769 
 5494      64676574 
 5495              	.LASF149:
 5496 029d 6C6F6F70 		.ascii	"loopIndex\000"
 5496      496E6465 
 5496      7800
 5497              	.LASF83:
 5498 02a7 77646774 		.ascii	"wdgtWorking\000"
 5498      576F726B 
 5498      696E6700 
 5499              	.LASF126:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 153


 5500 02b3 43617053 		.ascii	"CapSense_SsCalcLfsrScale\000"
 5500      656E7365 
 5500      5F537343 
 5500      616C634C 
 5500      66737253 
 5501              	.LASF12:
 5502 02cc 666C6F61 		.ascii	"float\000"
 5502      7400
 5503              	.LASF107:
 5504 02d2 73686966 		.ascii	"shift\000"
 5504      7400
 5505              	.LASF162:
 5506 02d8 43617053 		.ascii	"CapSense_SsClearCSDSensors\000"
 5506      656E7365 
 5506      5F537343 
 5506      6C656172 
 5506      43534453 
 5507              	.LASF205:
 5508 02f3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5508      43313120 
 5508      352E342E 
 5508      31203230 
 5508      31363036 
 5509 0326 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5509      20726576 
 5509      6973696F 
 5509      6E203233 
 5509      37373135 
 5510 0359 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 5510      67202D66 
 5510      66756E63 
 5510      74696F6E 
 5510      2D736563 
 5511              	.LASF191:
 5512 0385 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 5512      656E7365 
 5512      5F435344 
 5512      53657475 
 5512      70576964 
 5513              	.LASF204:
 5514 039d 43794465 		.ascii	"CyDelayUs\000"
 5514      6C617955 
 5514      7300
 5515              	.LASF90:
 5516 03a7 736E734C 		.ascii	"snsList\000"
 5516      69737400 
 5517              	.LASF7:
 5518 03af 6C6F6E67 		.ascii	"long long unsigned int\000"
 5518      206C6F6E 
 5518      6720756E 
 5518      7369676E 
 5518      65642069 
 5519              	.LASF183:
 5520 03c6 43617053 		.ascii	"CapSense_sensorIndex\000"
 5520      656E7365 
 5520      5F73656E 
 5520      736F7249 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 154


 5520      6E646578 
 5521              	.LASF108:
 5522 03db 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 5522      656E7365 
 5522      5F464C41 
 5522      53485F49 
 5522      4F5F5354 
 5523              	.LASF94:
 5524 03f4 736E7254 		.ascii	"snrTestSensorId\000"
 5524      65737453 
 5524      656E736F 
 5524      72496400 
 5525              	.LASF116:
 5526 0404 77646774 		.ascii	"wdgtType\000"
 5526      54797065 
 5526      00
 5527              	.LASF127:
 5528 040d 6C667372 		.ascii	"lfsrSize\000"
 5528      53697A65 
 5528      00
 5529              	.LASF168:
 5530 0416 43617053 		.ascii	"CapSense_SsCSDSetColSnsClkDivider\000"
 5530      656E7365 
 5530      5F537343 
 5530      53445365 
 5530      74436F6C 
 5531              	.LASF70:
 5532 0438 73686F72 		.ascii	"shortedWdgtId\000"
 5532      74656457 
 5532      64677449 
 5532      6400
 5533              	.LASF87:
 5534 0446 6D6F6443 		.ascii	"modCsdClk\000"
 5534      7364436C 
 5534      6B00
 5535              	.LASF59:
 5536 0450 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 5536      656E7365 
 5536      5F52414D 
 5536      5F534E53 
 5536      5F535452 
 5537              	.LASF170:
 5538 0468 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 5538      656E7365 
 5538      5F537343 
 5538      53444361 
 5538      6C635072 
 5539              	.LASF101:
 5540 0482 64725074 		.ascii	"drPtr\000"
 5540      7200
 5541              	.LASF156:
 5542 0488 6D6F6443 		.ascii	"modClk\000"
 5542      6C6B00
 5543              	.LASF92:
 5544 048f 736E7343 		.ascii	"snsCp\000"
 5544      7000
 5545              	.LASF30:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 155


 5546 0495 68797374 		.ascii	"hysteresis\000"
 5546      65726573 
 5546      697300
 5547              	.LASF119:
 5548 04a0 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 5548      656E7365 
 5548      5F464C41 
 5548      53485F57 
 5548      445F5354 
 5549              	.LASF32:
 5550 04b9 6C6F7742 		.ascii	"lowBslnRst\000"
 5550      736C6E52 
 5550      737400
 5551              	.LASF61:
 5552 04c4 74657374 		.ascii	"testResultMask\000"
 5552      52657375 
 5552      6C744D61 
 5552      736B00
 5553              	.LASF115:
 5554 04d3 746F7461 		.ascii	"totalNumSns\000"
 5554      6C4E756D 
 5554      536E7300 
 5555              	.LASF196:
 5556 04df 43617053 		.ascii	"CapSense_BistDisableMode\000"
 5556      656E7365 
 5556      5F426973 
 5556      74446973 
 5556      61626C65 
 5557              	.LASF28:
 5558 04f8 6E6F6973 		.ascii	"noiseTh\000"
 5558      65546800 
 5559              	.LASF14:
 5560 0500 63686172 		.ascii	"char\000"
 5560      00
 5561              	.LASF194:
 5562 0505 43794578 		.ascii	"CyExitCriticalSection\000"
 5562      69744372 
 5562      69746963 
 5562      616C5365 
 5562      6374696F 
 5563              	.LASF203:
 5564 051b 43617053 		.ascii	"CapSense_SsCSDGetNumberOfConversions\000"
 5564      656E7365 
 5564      5F537343 
 5564      53444765 
 5564      744E756D 
 5565              	.LASF74:
 5566 0540 43617053 		.ascii	"CapSense_RAM_SELF_TEST_STRUCT\000"
 5566      656E7365 
 5566      5F52414D 
 5566      5F53454C 
 5566      465F5445 
 5567              	.LASF65:
 5568 055e 676C6243 		.ascii	"glbCrcCalc\000"
 5568      72634361 
 5568      6C6300
 5569              	.LASF10:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 156


 5570 0569 75696E74 		.ascii	"uint16\000"
 5570      313600
 5571              	.LASF124:
 5572 0570 636F6E76 		.ascii	"conversionsNum\000"
 5572      65727369 
 5572      6F6E734E 
 5572      756D00
 5573              	.LASF69:
 5574 057f 696E7642 		.ascii	"invBslnSnsId\000"
 5574      736C6E53 
 5574      6E734964 
 5574      00
 5575              	.LASF190:
 5576 058c 43617053 		.ascii	"CapSense_SsCSDDisableShieldElectrodes\000"
 5576      656E7365 
 5576      5F537343 
 5576      53444469 
 5576      7361626C 
 5577              	.LASF26:
 5578 05b2 7265736F 		.ascii	"resolution\000"
 5578      6C757469 
 5578      6F6E00
 5579              	.LASF81:
 5580 05bd 73746174 		.ascii	"status\000"
 5580      757300
 5581              	.LASF159:
 5582 05c4 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 5582      656E7365 
 5582      5F43616C 
 5582      69627261 
 5582      74655769 
 5583              	.LASF19:
 5584 05dd 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 5584      656E7365 
 5584      5F4C4F57 
 5584      5F42534C 
 5584      4E5F5253 
 5585              	.LASF157:
 5586 05f8 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 5586      656E7365 
 5586      5F537353 
 5586      6574536E 
 5586      73436C6F 
 5587              	.LASF169:
 5588 0616 64697669 		.ascii	"dividerVal\000"
 5588      64657256 
 5588      616C00
 5589              	.LASF25:
 5590 0621 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 5590      656E7365 
 5590      5F53454E 
 5590      53455F4D 
 5590      4554484F 
 5591              	.LASF58:
 5592 063c 69646163 		.ascii	"idacComp\000"
 5592      436F6D70 
 5592      00
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 157


 5593              	.LASF99:
 5594 0645 70635074 		.ascii	"pcPtr\000"
 5594      7200
 5595              	.LASF6:
 5596 064b 6C6F6E67 		.ascii	"long long int\000"
 5596      206C6F6E 
 5596      6720696E 
 5596      7400
 5597              	.LASF117:
 5598 0659 6E756D43 		.ascii	"numCols\000"
 5598      6F6C7300 
 5599              	.LASF197:
 5600 0661 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 5600      656E7365 
 5600      5F537343 
 5600      5344496E 
 5600      69746961 
 5601              	.LASF31:
 5602 067a 6F6E4465 		.ascii	"onDebounce\000"
 5602      626F756E 
 5602      636500
 5603              	.LASF160:
 5604 0685 63616C69 		.ascii	"calibrateStatus\000"
 5604      62726174 
 5604      65537461 
 5604      74757300 
 5605              	.LASF89:
 5606 0695 77646774 		.ascii	"wdgtList\000"
 5606      4C697374 
 5606      00
 5607              	.LASF161:
 5608 069e 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 5608      656E7365 
 5608      5F43616C 
 5608      69627261 
 5608      7465416C 
 5609              	.LASF121:
 5610 06bb 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 5610      656E7365 
 5610      5F464C41 
 5610      53485F53 
 5610      54525543 
 5611              	.LASF135:
 5612 06d1 43617053 		.ascii	"CapSense_Scan\000"
 5612      656E7365 
 5612      5F536361 
 5612      6E00
 5613              	.LASF118:
 5614 06df 70747232 		.ascii	"ptr2SnsCpArr\000"
 5614      536E7343 
 5614      70417272 
 5614      00
 5615              	.LASF179:
 5616 06ec 43617053 		.ascii	"CapSense_dsRam\000"
 5616      656E7365 
 5616      5F647352 
 5616      616D00
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 158


 5617              	.LASF96:
 5618 06fb 736E7254 		.ascii	"snrTestRawCount\000"
 5618      65737452 
 5618      6177436F 
 5618      756E7400 
 5619              	.LASF71:
 5620 070b 73686F72 		.ascii	"shortedSnsId\000"
 5620      74656453 
 5620      6E734964 
 5620      00
 5621              	.LASF29:
 5622 0718 6E4E6F69 		.ascii	"nNoiseTh\000"
 5622      73655468 
 5622      00
 5623              	.LASF86:
 5624 0721 63736430 		.ascii	"csd0Config\000"
 5624      436F6E66 
 5624      696700
 5625              	.LASF17:
 5626 072c 63796973 		.ascii	"cyisraddress\000"
 5626      72616464 
 5626      72657373 
 5626      00
 5627              	.LASF37:
 5628 0739 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 5628      656E7365 
 5628      5F52414D 
 5628      5F57445F 
 5628      42415345 
 5629              	.LASF98:
 5630 0755 6873696F 		.ascii	"hsiomPtr\000"
 5630      6D507472 
 5630      00
 5631              	.LASF11:
 5632 075e 75696E74 		.ascii	"uint32\000"
 5632      333200
 5633              	.LASF112:
 5634 0765 70747232 		.ascii	"ptr2FltrHistory\000"
 5634      466C7472 
 5634      48697374 
 5634      6F727900 
 5635              	.LASF188:
 5636 0775 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 5636      656E7365 
 5636      5F637572 
 5636      536E7349 
 5636      4F507472 
 5637              	.LASF104:
 5638 078a 6D61736B 		.ascii	"mask\000"
 5638      00
 5639              	.LASF158:
 5640 078f 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 5640      656E7365 
 5640      5F537353 
 5640      6574436C 
 5640      6F636B44 
 5641              	.LASF91:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 159


 5642 07ab 73656C66 		.ascii	"selfTest\000"
 5642      54657374 
 5642      00
 5643              	.LASF64:
 5644 07b4 73686965 		.ascii	"shieldCap\000"
 5644      6C644361 
 5644      7000
 5645              	.LASF125:
 5646 07be 43617053 		.ascii	"CapSense_SsCalcLfsrSize\000"
 5646      656E7365 
 5646      5F537343 
 5646      616C634C 
 5646      66737253 
 5647              	.LASF138:
 5648 07d6 77646774 		.ascii	"wdgtIndex\000"
 5648      496E6465 
 5648      7800
 5649              	.LASF163:
 5650 07e0 736E7349 		.ascii	"snsIndex\000"
 5650      6E646578 
 5650      00
 5651              	.LASF24:
 5652 07e9 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 5652      656E7365 
 5652      5F53454E 
 5652      53455F4D 
 5652      4554484F 
 5653              	.LASF122:
 5654 0805 6C6F6E67 		.ascii	"long double\000"
 5654      20646F75 
 5654      626C6500 
 5655              	.LASF16:
 5656 0811 72656733 		.ascii	"reg32\000"
 5656      3200
 5657              	.LASF95:
 5658 0817 736E7254 		.ascii	"snrTestScanCounter\000"
 5658      65737453 
 5658      63616E43 
 5658      6F756E74 
 5658      657200
 5659              	.LASF76:
 5660 082a 636F6E66 		.ascii	"configId\000"
 5660      69674964 
 5660      00
 5661              	.LASF111:
 5662 0833 70747232 		.ascii	"ptr2SnsRam\000"
 5662      536E7352 
 5662      616D00
 5663              	.LASF85:
 5664 083e 736E7353 		.ascii	"snsStatus\000"
 5664      74617475 
 5664      7300
 5665              	.LASF152:
 5666 0848 706F7374 		.ascii	"postScanStatus\000"
 5666      5363616E 
 5666      53746174 
 5666      757300
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 160


 5667              	.LASF35:
 5668 0857 736E7343 		.ascii	"snsClkSource\000"
 5668      6C6B536F 
 5668      75726365 
 5668      00
 5669              	.LASF189:
 5670 0864 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 5670      656E7365 
 5670      5F537343 
 5670      5344456C 
 5670      65637472 
 5671              	.LASF153:
 5672 0881 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 5672      656E7365 
 5672      5F537349 
 5672      7372496E 
 5672      69746961 
 5673              	.LASF2:
 5674 089a 73686F72 		.ascii	"short int\000"
 5674      7420696E 
 5674      7400
 5675              	.LASF97:
 5676 08a4 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 5676      656E7365 
 5676      5F52414D 
 5676      5F535452 
 5676      55435400 
 5677              	.LASF202:
 5678 08b8 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 5678      656E7365 
 5678      5F435344 
 5678      44697363 
 5678      6F6E6E65 
 5679              	.LASF4:
 5680 08d2 6C6F6E67 		.ascii	"long int\000"
 5680      20696E74 
 5680      00
 5681              	.LASF82:
 5682 08db 77646774 		.ascii	"wdgtEnable\000"
 5682      456E6162 
 5682      6C6500
 5683              	.LASF56:
 5684 08e6 64696666 		.ascii	"diff\000"
 5684      00
 5685              	.LASF79:
 5686 08eb 74756E65 		.ascii	"tunerCmd\000"
 5686      72436D64 
 5686      00
 5687              	.LASF22:
 5688 08f4 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 5688      656E7365 
 5688      5F53454E 
 5688      53455F4D 
 5688      4554484F 
 5689              	.LASF102:
 5690 0910 70735074 		.ascii	"psPtr\000"
 5690      7200
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 161


 5691              	.LASF134:
 5692 0916 43617053 		.ascii	"CapSense_SetupWidget\000"
 5692      656E7365 
 5692      5F536574 
 5692      75705769 
 5692      64676574 
 5693              	.LASF200:
 5694 092b 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 5694      656E7365 
 5694      5F435344 
 5694      43616C69 
 5694      62726174 
 5695              	.LASF68:
 5696 0947 696E7642 		.ascii	"invBslnWdgtId\000"
 5696      736C6E57 
 5696      64677449 
 5696      6400
 5697              	.LASF62:
 5698 0955 65787443 		.ascii	"extCap\000"
 5698      617000
 5699              	.LASF180:
 5700 095c 43617053 		.ascii	"CapSense_dsFlash\000"
 5700      656E7365 
 5700      5F647346 
 5700      6C617368 
 5700      00
 5701              	.LASF67:
 5702 096d 77646774 		.ascii	"wdgtCrcId\000"
 5702      43726349 
 5702      6400
 5703              	.LASF84:
 5704 0977 77646774 		.ascii	"wdgtStatus\000"
 5704      53746174 
 5704      757300
 5705              	.LASF181:
 5706 0982 43617053 		.ascii	"CapSense_ioList\000"
 5706      656E7365 
 5706      5F696F4C 
 5706      69737400 
 5707              	.LASF198:
 5708 0992 43617053 		.ascii	"CapSense_BistInitialize\000"
 5708      656E7365 
 5708      5F426973 
 5708      74496E69 
 5708      7469616C 
 5709              	.LASF63:
 5710 09aa 76646461 		.ascii	"vddaVoltage\000"
 5710      566F6C74 
 5710      61676500 
 5711              	.LASF206:
 5712 09b6 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 5712      72617465 
 5712      645F536F 
 5712      75726365 
 5712      5C50536F 
 5713              	.LASF195:
 5714 09e0 43617053 		.ascii	"CapSense_CSDConnectSns\000"
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 162


 5714      656E7365 
 5714      5F435344 
 5714      436F6E6E 
 5714      65637453 
 5715              	.LASF21:
 5716 09f7 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 5716      656E7365 
 5716      5F53454E 
 5716      53455F4D 
 5716      4554484F 
 5717              	.LASF186:
 5718 0a13 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 5718      656E7365 
 5718      5F637572 
 5718      72656E74 
 5718      53656E73 
 5719              	.LASF171:
 5720 0a2f 70727353 		.ascii	"prsSize\000"
 5720      697A6500 
 5721              	.LASF36:
 5722 0a37 73697A65 		.ascii	"sizetype\000"
 5722      74797065 
 5722      00
 5723              	.LASF106:
 5724 0a40 64725368 		.ascii	"drShift\000"
 5724      69667400 
 5725              	.LASF5:
 5726 0a48 6C6F6E67 		.ascii	"long unsigned int\000"
 5726      20756E73 
 5726      69676E65 
 5726      6420696E 
 5726      7400
 5727              	.LASF166:
 5728 0a5a 72657456 		.ascii	"retVal\000"
 5728      616C00
 5729              	.LASF154:
 5730 0a61 61646472 		.ascii	"address\000"
 5730      65737300 
 5731              	.LASF33:
 5732 0a69 69646163 		.ascii	"idacMod\000"
 5732      4D6F6400 
 5733              	.LASF199:
 5734 0a71 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 5734      656E7365 
 5734      5F495352 
 5734      5F537461 
 5734      72744578 
 5735              	.LASF66:
 5736 0a86 77646774 		.ascii	"wdgtCrcCalc\000"
 5736      43726343 
 5736      616C6300 
 5737              	.LASF113:
 5738 0a92 70747232 		.ascii	"ptr2DebounceArr\000"
 5738      4465626F 
 5738      756E6365 
 5738      41727200 
 5739              	.LASF27:
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 163


 5740 0aa2 66696E67 		.ascii	"fingerTh\000"
 5740      65725468 
 5740      00
 5741              	.LASF55:
 5742 0aab 62736C6E 		.ascii	"bslnExt\000"
 5742      45787400 
 5743              	.LASF38:
 5744 0ab3 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 5744      656E7365 
 5744      5F52414D 
 5744      5F57445F 
 5744      42555454 
 5745              	.LASF15:
 5746 0ad1 63797374 		.ascii	"cystatus\000"
 5746      61747573 
 5746      00
 5747              	.LASF1:
 5748 0ada 756E7369 		.ascii	"unsigned char\000"
 5748      676E6564 
 5748      20636861 
 5748      7200
 5749              	.LASF145:
 5750 0ae8 43617053 		.ascii	"CapSense_SetPinState\000"
 5750      656E7365 
 5750      5F536574 
 5750      50696E53 
 5750      74617465 
 5751              	.LASF114:
 5752 0afd 73746174 		.ascii	"staticConfig\000"
 5752      6963436F 
 5752      6E666967 
 5752      00
 5753              	.LASF144:
 5754 0b0a 696F5074 		.ascii	"ioPtr\000"
 5754      7200
 5755              	.LASF110:
 5756 0b10 70747232 		.ascii	"ptr2WdgtRam\000"
 5756      57646774 
 5756      52616D00 
 5757              	.LASF18:
 5758 0b1c 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 5758      656E7365 
 5758      5F544852 
 5758      4553484F 
 5758      4C445F54 
 5759              	.LASF73:
 5760 0b34 70327053 		.ascii	"p2pSnsId\000"
 5760      6E734964 
 5760      00
 5761              	.LASF192:
 5762 0b3d 43617053 		.ascii	"CapSense_CSDScan\000"
 5762      656E7365 
 5762      5F435344 
 5762      5363616E 
 5762      00
 5763              	.LASF23:
 5764 0b4e 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 164


 5764      656E7365 
 5764      5F53454E 
 5764      53455F4D 
 5764      4554484F 
 5765              	.LASF140:
 5766 0b6b 73746174 		.ascii	"state\000"
 5766      6500
 5767              	.LASF54:
 5768 0b71 62736C6E 		.ascii	"bslnInv\000"
 5768      496E7600 
 5769              	.LASF142:
 5770 0b79 656C7464 		.ascii	"eltdIndex\000"
 5770      496E6465 
 5770      7800
 5771              	.LASF137:
 5772 0b83 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 5772      656E7365 
 5772      5F536361 
 5772      6E416C6C 
 5772      57696467 
 5773              	.LASF103:
 5774 0b9b 6873696F 		.ascii	"hsiomMask\000"
 5774      6D4D6173 
 5774      6B00
 5775              	.LASF164:
 5776 0ba5 63757253 		.ascii	"curSnsIOPtr\000"
 5776      6E73494F 
 5776      50747200 
 5777              	.LASF34:
 5778 0bb1 736E7343 		.ascii	"snsClk\000"
 5778      6C6B00
 5779              	.LASF146:
 5780 0bb8 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 5780      656E7365 
 5780      5F537353 
 5780      77697463 
 5780      6853656E 
 5781              	.LASF193:
 5782 0bd5 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5782      74657243 
 5782      72697469 
 5782      63616C53 
 5782      65637469 
 5783              	.LASF185:
 5784 0bec 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 5784      656E7365 
 5784      5F637572 
 5784      52616D53 
 5784      6E735074 
 5785              	.LASF0:
 5786 0c02 7369676E 		.ascii	"signed char\000"
 5786      65642063 
 5786      68617200 
 5787              	.LASF187:
 5788 0c0e 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 5788      656E7365 
 5788      5F736361 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 165


 5788      6E467265 
 5788      71496E64 
 5789              	.LASF53:
 5790 0c25 62736C6E 		.ascii	"bsln\000"
 5790      00
 5791              	.LASF3:
 5792 0c2a 73686F72 		.ascii	"short unsigned int\000"
 5792      7420756E 
 5792      7369676E 
 5792      65642069 
 5792      6E7400
 5793              	.LASF72:
 5794 0c3d 70327057 		.ascii	"p2pWdgtId\000"
 5794      64677449 
 5794      6400
 5795              	.LASF151:
 5796 0c47 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 5796      656E7365 
 5796      5F537350 
 5796      6F737441 
 5796      6C6C5769 
 5797              	.LASF109:
 5798 0c65 70747232 		.ascii	"ptr2SnsFlash\000"
 5798      536E7346 
 5798      6C617368 
 5798      00
 5799              	.LASF130:
 5800 0c72 6C667372 		.ascii	"lfsrDither\000"
 5800      44697468 
 5800      657200
 5801              	.LASF131:
 5802 0c7d 6E657752 		.ascii	"newRegValue\000"
 5802      65675661 
 5802      6C756500 
 5803              	.LASF88:
 5804 0c89 676C6243 		.ascii	"glbCrc\000"
 5804      726300
 5805              	.LASF9:
 5806 0c90 75696E74 		.ascii	"uint8\000"
 5806      3800
 5807              	.LASF13:
 5808 0c96 646F7562 		.ascii	"double\000"
 5808      6C6500
 5809              	.LASF57:
 5810 0c9d 6E656742 		.ascii	"negBslnRstCnt\000"
 5810      736C6E52 
 5810      7374436E 
 5810      7400
 5811              	.LASF176:
 5812 0cab 43617053 		.ascii	"CapSense_SsInitialize\000"
 5812      656E7365 
 5812      5F537349 
 5812      6E697469 
 5812      616C697A 
 5813              	.LASF123:
 5814 0cc1 736E7343 		.ascii	"snsClkDivider\000"
 5814      6C6B4469 
ARM GAS  C:\Users\220036~1\AppData\Local\Temp\ccDA2VSm.s 			page 166


 5814      76696465 
 5814      7200
 5815              	.LASF172:
 5816 0ccf 6D6F6443 		.ascii	"modClkDivider\000"
 5816      6C6B4469 
 5816      76696465 
 5816      7200
 5817              	.LASF77:
 5818 0cdd 64657669 		.ascii	"deviceId\000"
 5818      63654964 
 5818      00
 5819              	.LASF133:
 5820 0ce6 77696467 		.ascii	"widgetStatus\000"
 5820      65745374 
 5820      61747573 
 5820      00
 5821              	.LASF132:
 5822 0cf3 77696467 		.ascii	"widgetId\000"
 5822      65744964 
 5822      00
 5823              	.LASF184:
 5824 0cfc 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 5824      656E7365 
 5824      5F726571 
 5824      75657374 
 5824      5363616E 
 5825              	.LASF175:
 5826 0d1a 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 5826      656E7365 
 5826      5F537349 
 5826      6E697469 
 5826      616C697A 
 5827              	.LASF60:
 5828 0d3e 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 5828      656E7365 
 5828      5F52414D 
 5828      5F534E53 
 5828      5F4C4953 
 5829              	.LASF120:
 5830 0d5b 77646774 		.ascii	"wdgtArray\000"
 5830      41727261 
 5830      7900
 5831              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
